+ set -e
+ export PYTHONUNBUFFERED=True
+ PYTHONUNBUFFERED=True
+ GPU_ID=1
+ NET=ZF
+ NET_lc=zf
+ DATASET=cnn_data
+ array=($@)
+ len=3
+ EXTRA_ARGS=
+ EXTRA_ARGS_SLUG=
+ case $DATASET in
+ TRAIN_IMDB=CNNDATA_trainval
+ TEST_IMDB=CNNDATA_trainval
+ PT_DIR=pascal_voc
+ ITERS=1
++ date +%Y-%m-%d_%H-%M-%S
+ LOG=experiments/logs/faster_rcnn_end2end_ZF_.txt.2017-03-27_09-29-28
+ exec
++ tee -a experiments/logs/faster_rcnn_end2end_ZF_.txt.2017-03-27_09-29-28
tee: experiments/logs/faster_rcnn_end2end_ZF_.txt.2017-03-27_09-29-28: No such file or directory
+ echo Logging output to experiments/logs/faster_rcnn_end2end_ZF_.txt.2017-03-27_09-29-28
Logging output to experiments/logs/faster_rcnn_end2end_ZF_.txt.2017-03-27_09-29-28
+ ../../tools/train_net.py --gpu 1 --solver ../../models/pascal_voc/ZF/faster_rcnn_end2end/solver.prototxt --weights ../../data/imagenet_models/ZF.v2.caffemodel --imdb CNNDATA_trainval --iters 1 --cfg ../../experiments/cfgs/roost.yml
<function <lambda> at 0x2aaad7b42320>
<function <lambda> at 0x2aaad7b42398>
<function <lambda> at 0x2aaad7b42410>
<function <lambda> at 0x2aaad7b42488>
Called with args:
Namespace(cfg_file='../../experiments/cfgs/roost.yml', gpu_id=1, imdb_name='CNNDATA_trainval', max_iters=1, pretrained_model='../../data/imagenet_models/ZF.v2.caffemodel', randomize=False, set_cfgs=None, solver='../../models/pascal_voc/ZF/faster_rcnn_end2end/solver.prototxt')
Using config:
{'DATA_DIR': '/home/sgabriel/py-faster-rcnn/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 1,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/sgabriel/py-faster-rcnn/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 17,
 'ROOT_DIR': '/home/sgabriel/py-faster-rcnn',
 'TEST': {'BBOX_REG': False,
          'HAS_RPN': True,
          'MAX_SIZE': 600,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 4,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 600,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 100,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': False}
../../tools/train_net.py:101: RuntimeWarning: to-Python converter for boost::shared_ptr<caffe::Blob<float> > already registered; second conversion method ignored.
  caffe.set_mode_gpu()
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /home/sgabriel/py-faster-rcnn/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
done
1000 roidb entries
Output will be saved to `/home/sgabriel/py-faster-rcnn/output/default/voc_2007_trainval`
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/1.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 194, 396, 212],
       [169, 173, 184, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/2.jpg', 'flipped': False, 'width': 600, 'boxes': array([[372, 185, 399, 212],
       [165, 166, 189, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 784.,  625.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/3.jpg', 'flipped': False, 'width': 600, 'boxes': array([[368, 179, 407, 218],
       [162, 163, 192, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,   961.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/4.jpg', 'flipped': False, 'width': 600, 'boxes': array([[363, 175, 417, 229],
       [163, 162, 202, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  1600.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/5.jpg', 'flipped': False, 'width': 600, 'boxes': array([[170, 173, 182, 185]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/6.jpg', 'flipped': False, 'width': 600, 'boxes': array([[169, 173, 184, 188],
       [378, 194, 396, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  361.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/7.jpg', 'flipped': False, 'width': 600, 'boxes': array([[165, 166, 189, 190],
       [372, 185, 399, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  784.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/8.jpg', 'flipped': False, 'width': 600, 'boxes': array([[162, 163, 192, 193],
       [368, 179, 407, 218]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/9.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163, 162, 202, 201],
       [363, 175, 417, 229]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,  3025.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/10.jpg', 'flipped': False, 'width': 600, 'boxes': array([[154, 149, 211, 206]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/11.jpg', 'flipped': False, 'width': 600, 'boxes': array([[150, 145, 216, 211]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/12.jpg', 'flipped': False, 'width': 600, 'boxes': array([[145, 140, 220, 215]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/13.jpg', 'flipped': False, 'width': 600, 'boxes': array([[381, 189, 396, 204],
       [226, 388, 241, 403],
       [168, 159, 195, 186],
       [373, 185, 391, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  784.,  361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/14.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 185, 413, 215],
       [220, 373, 262, 415],
       [166, 143, 220, 197],
       [372, 173, 408, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1849.,  3025.,  1369.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/15.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 173, 426, 221],
       [214, 362, 280, 428],
       [159, 137, 231, 209],
       [367, 158, 421, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  4489.,  5329.,  3025.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/16.jpg', 'flipped': False, 'width': 600, 'boxes': array([[203, 364, 284, 445],
       [152, 130, 242, 220],
       [364, 144, 430, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 6724.,  8281.,  4489.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/17.jpg', 'flipped': False, 'width': 600, 'boxes': array([[381, 189, 396, 204],
       [226, 388, 241, 403],
       [168, 159, 195, 186],
       [373, 185, 391, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  784.,  361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/18.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 185, 413, 215],
       [220, 373, 262, 415],
       [166, 143, 220, 197],
       [372, 173, 408, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1849.,  3025.,  1369.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/19.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 173, 426, 221],
       [214, 362, 280, 428],
       [159, 137, 231, 209],
       [367, 158, 421, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  4489.,  5329.,  3025.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/20.jpg', 'flipped': False, 'width': 600, 'boxes': array([[203, 364, 284, 445],
       [152, 130, 242, 220],
       [364, 144, 430, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 6724.,  8281.,  4489.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/21.jpg', 'flipped': False, 'width': 600, 'boxes': array([[143, 116, 257, 230]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 13225.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/22.jpg', 'flipped': False, 'width': 600, 'boxes': array([[381, 189, 396, 204],
       [226, 388, 241, 403],
       [168, 159, 195, 186],
       [373, 185, 391, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  784.,  361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/23.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 185, 413, 215],
       [220, 373, 262, 415],
       [166, 143, 220, 197],
       [372, 173, 408, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1849.,  3025.,  1369.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/24.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 173, 426, 221],
       [214, 362, 280, 428],
       [159, 137, 231, 209],
       [367, 158, 421, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  4489.,  5329.,  3025.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/25.jpg', 'flipped': False, 'width': 600, 'boxes': array([[203, 364, 284, 445],
       [152, 130, 242, 220],
       [364, 144, 430, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 6724.,  8281.,  4489.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/26.jpg', 'flipped': False, 'width': 600, 'boxes': array([[381, 189, 396, 204],
       [226, 388, 241, 403],
       [168, 159, 195, 186],
       [373, 185, 391, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  784.,  361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/27.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 185, 413, 215],
       [220, 373, 262, 415],
       [166, 143, 220, 197],
       [372, 173, 408, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1849.,  3025.,  1369.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/28.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 173, 426, 221],
       [214, 362, 280, 428],
       [159, 137, 231, 209],
       [367, 158, 421, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  4489.,  5329.,  3025.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/29.jpg', 'flipped': False, 'width': 600, 'boxes': array([[371, 194, 383, 206]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/30.jpg', 'flipped': False, 'width': 600, 'boxes': array([[272, 149, 287, 164],
       [155, 172, 182, 199],
       [362, 191, 386, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  784.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/31.jpg', 'flipped': False, 'width': 600, 'boxes': array([[267, 145, 291, 169],
       [149, 166, 188, 205],
       [348, 183, 390, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,  1849.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/32.jpg', 'flipped': False, 'width': 600, 'boxes': array([[259, 137, 298, 176],
       [141, 165, 192, 216],
       [344, 183, 389, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,  2704.,  2116.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/33.jpg', 'flipped': False, 'width': 600, 'boxes': array([[251, 131, 302, 182],
       [132, 156, 201, 225],
       [340, 182, 391, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2704.,  4900.,  2704.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/34.jpg', 'flipped': False, 'width': 600, 'boxes': array([[242, 126, 308, 192],
       [125, 151, 203, 229],
       [328, 173, 397, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  6241.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/35.jpg', 'flipped': False, 'width': 600, 'boxes': array([[228, 118, 315, 205],
       [110, 146, 209, 245],
       [322, 173, 400, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  10000.,   6241.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/36.jpg', 'flipped': False, 'width': 600, 'boxes': array([[272, 149, 287, 164],
       [155, 172, 182, 199],
       [362, 191, 386, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  784.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/37.jpg', 'flipped': False, 'width': 600, 'boxes': array([[267, 145, 291, 169],
       [149, 166, 188, 205],
       [348, 183, 390, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,  1849.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/38.jpg', 'flipped': False, 'width': 600, 'boxes': array([[259, 137, 298, 176],
       [141, 165, 192, 216],
       [344, 183, 389, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,  2704.,  2116.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/39.jpg', 'flipped': False, 'width': 600, 'boxes': array([[251, 131, 302, 182],
       [132, 156, 201, 225],
       [340, 182, 391, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2704.,  4900.,  2704.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/40.jpg', 'flipped': False, 'width': 600, 'boxes': array([[242, 126, 308, 192],
       [125, 151, 203, 229],
       [328, 173, 397, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  6241.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/41.jpg', 'flipped': False, 'width': 600, 'boxes': array([[228, 118, 315, 205],
       [110, 146, 209, 245],
       [322, 173, 400, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  10000.,   6241.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/42.jpg', 'flipped': False, 'width': 600, 'boxes': array([[ 97, 141, 217, 261]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 14641.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/43.jpg', 'flipped': False, 'width': 600, 'boxes': array([[ 93, 136, 219, 262]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 16129.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/44.jpg', 'flipped': False, 'width': 600, 'boxes': array([[272, 149, 287, 164],
       [155, 172, 182, 199],
       [362, 191, 386, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  784.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/45.jpg', 'flipped': False, 'width': 600, 'boxes': array([[267, 145, 291, 169],
       [149, 166, 188, 205],
       [348, 183, 390, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,  1849.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/46.jpg', 'flipped': False, 'width': 600, 'boxes': array([[259, 137, 298, 176],
       [141, 165, 192, 216],
       [344, 183, 389, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,  2704.,  2116.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/47.jpg', 'flipped': False, 'width': 600, 'boxes': array([[251, 131, 302, 182],
       [132, 156, 201, 225],
       [340, 182, 391, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2704.,  4900.,  2704.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/48.jpg', 'flipped': False, 'width': 600, 'boxes': array([[242, 126, 308, 192],
       [125, 151, 203, 229],
       [328, 173, 397, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  6241.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/49.jpg', 'flipped': False, 'width': 600, 'boxes': array([[228, 118, 315, 205],
       [110, 146, 209, 245],
       [322, 173, 400, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  10000.,   6241.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/50.jpg', 'flipped': False, 'width': 600, 'boxes': array([[225, 395, 246, 416],
       [379, 200, 400, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 484.,  484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/51.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 388, 257, 421],
       [381, 196, 393, 208],
       [376, 195, 406, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   169.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/52.jpg', 'flipped': False, 'width': 600, 'boxes': array([[321, 282, 333, 294],
       [223, 388, 268, 433],
       [282, 140, 309, 167],
       [379, 187, 406, 214],
       [382, 192, 433, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,  2116.,   784.,   784.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/53.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/54.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 388, 257, 421],
       [381, 196, 393, 208],
       [376, 195, 406, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   169.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/55.jpg', 'flipped': False, 'width': 600, 'boxes': array([[321, 282, 333, 294],
       [223, 388, 268, 433],
       [282, 140, 309, 167],
       [379, 187, 406, 214],
       [382, 192, 433, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,  2116.,   784.,   784.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/56.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/57.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 337, 269, 382],
       [224, 378, 299, 453],
       [277, 118, 358, 199],
       [367, 174, 436, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  5776.,  6724.,  4900.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/58.jpg', 'flipped': False, 'width': 600, 'boxes': array([[321, 282, 333, 294],
       [223, 388, 268, 433],
       [282, 140, 309, 167],
       [379, 187, 406, 214],
       [382, 192, 433, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,  2116.,   784.,   784.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/59.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/60.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 337, 269, 382],
       [224, 378, 299, 453],
       [277, 118, 358, 199],
       [367, 174, 436, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  5776.,  6724.,  4900.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/61.jpg', 'flipped': False, 'width': 600, 'boxes': array([[229, 398, 241, 410]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/62.jpg', 'flipped': False, 'width': 600, 'boxes': array([[225, 395, 246, 416],
       [379, 200, 400, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 484.,  484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/63.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 388, 257, 421],
       [381, 196, 393, 208],
       [376, 195, 406, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   169.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/64.jpg', 'flipped': False, 'width': 600, 'boxes': array([[321, 282, 333, 294],
       [223, 388, 268, 433],
       [282, 140, 309, 167],
       [379, 187, 406, 214],
       [382, 192, 433, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,  2116.,   784.,   784.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/65.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/66.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 337, 269, 382],
       [224, 378, 299, 453],
       [277, 118, 358, 199],
       [367, 174, 436, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  5776.,  6724.,  4900.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/67.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/68.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 337, 269, 382],
       [224, 378, 299, 453],
       [277, 118, 358, 199],
       [367, 174, 436, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  5776.,  6724.,  4900.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/69.jpg', 'flipped': False, 'width': 600, 'boxes': array([[321, 282, 333, 294],
       [223, 388, 268, 433],
       [282, 140, 309, 167],
       [379, 187, 406, 214],
       [382, 192, 433, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,  2116.,   784.,   784.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/70.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/71.jpg', 'flipped': False, 'width': 600, 'boxes': array([[217, 392, 253, 428],
       [168, 167, 222, 221],
       [377, 194, 395, 212],
       [375, 190, 393, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  3025.,   361.,   361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/72.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 190, 418, 232],
       [373, 187, 394, 208],
       [283, 147, 295, 159],
       [163, 161, 241, 239],
       [215, 385, 260, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.,   484.,   169.,  6241.,  2116.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/73.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/74.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/75.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/76.jpg', 'flipped': False, 'width': 600, 'boxes': array([[217, 392, 253, 428],
       [168, 167, 222, 221],
       [377, 194, 395, 212],
       [375, 190, 393, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  3025.,   361.,   361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/77.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 190, 418, 232],
       [373, 187, 394, 208],
       [283, 147, 295, 159],
       [163, 161, 241, 239],
       [215, 385, 260, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.,   484.,   169.,  6241.,  2116.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/78.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/79.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/80.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/81.jpg', 'flipped': False, 'width': 600, 'boxes': array([[219, 335, 267, 383],
       [267, 118, 357, 208],
       [346, 127, 535, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,   8281.,  36100.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/82.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 190, 418, 232],
       [373, 187, 394, 208],
       [283, 147, 295, 159],
       [163, 161, 241, 239],
       [215, 385, 260, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.,   484.,   169.,  6241.,  2116.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/83.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/84.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/85.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/86.jpg', 'flipped': False, 'width': 600, 'boxes': array([[219, 335, 267, 383],
       [267, 118, 357, 208],
       [346, 127, 535, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,   8281.,  36100.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/87.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/88.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/89.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/90.jpg', 'flipped': False, 'width': 600, 'boxes': array([[170, 170, 206, 206],
       [223, 397, 244, 418]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/91.jpg', 'flipped': False, 'width': 600, 'boxes': array([[217, 392, 253, 428],
       [168, 167, 222, 221],
       [377, 194, 395, 212],
       [375, 190, 393, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  3025.,   361.,   361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/92.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 190, 418, 232],
       [373, 187, 394, 208],
       [283, 147, 295, 159],
       [163, 161, 241, 239],
       [215, 385, 260, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.,   484.,   169.,  6241.,  2116.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/93.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/94.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/95.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/96.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 400, 236, 412]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/97.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 397, 244, 418],
       [170, 170, 206, 206]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/98.jpg', 'flipped': False, 'width': 600, 'boxes': array([[217, 392, 253, 428],
       [168, 167, 222, 221],
       [377, 194, 395, 212],
       [375, 190, 393, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  3025.,   361.,   361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/99.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 190, 418, 232],
       [373, 187, 394, 208],
       [283, 147, 295, 159],
       [163, 161, 241, 239],
       [215, 385, 260, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.,   484.,   169.,  6241.,  2116.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/100.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/101.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/103.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/104.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/105.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/106.jpg', 'flipped': False, 'width': 600, 'boxes': array([[219, 335, 267, 383],
       [267, 118, 357, 208],
       [346, 127, 535, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,   8281.,  36100.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/107.jpg', 'flipped': False, 'width': 600, 'boxes': array([[374, 196, 386, 208],
       [148, 172, 175, 199]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  784.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/108.jpg', 'flipped': False, 'width': 600, 'boxes': array([[214, 398, 229, 413],
       [155, 166, 185, 196],
       [364, 186, 394, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  961.,  961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/109.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 394, 237, 424],
       [152, 158, 191, 197],
       [271, 141, 289, 159],
       [362, 184, 389, 211],
       [347, 167, 422, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.,   361.,   784.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/110.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/111.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/112.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 394, 237, 424],
       [152, 158, 191, 197],
       [271, 141, 289, 159],
       [362, 184, 389, 211],
       [347, 167, 422, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.,   361.,   784.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/113.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/114.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/115.jpg', 'flipped': False, 'width': 600, 'boxes': array([[216, 333, 243, 360],
       [174, 364, 276, 466],
       [113, 102, 275, 264],
       [235, 109, 316, 190],
       [320, 145, 452, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   784.,  10609.,  26569.,   6724.,  17689.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/116.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 394, 237, 424],
       [152, 158, 191, 197],
       [271, 141, 289, 159],
       [362, 184, 389, 211],
       [347, 167, 422, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.,   361.,   784.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/117.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/118.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/119.jpg', 'flipped': False, 'width': 600, 'boxes': array([[216, 333, 243, 360],
       [174, 364, 276, 466],
       [113, 102, 275, 264],
       [235, 109, 316, 190],
       [320, 145, 452, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   784.,  10609.,  26569.,   6724.,  17689.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/120.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224,  97, 326, 199],
       [209, 326, 251, 368]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 10609.,   1849.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/121.jpg', 'flipped': False, 'width': 600, 'boxes': array([[156, 180, 168, 192]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/122.jpg', 'flipped': False, 'width': 600, 'boxes': array([[148, 172, 175, 199],
       [374, 196, 386, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 784.,  169.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/123.jpg', 'flipped': False, 'width': 600, 'boxes': array([[214, 398, 229, 413],
       [155, 166, 185, 196],
       [364, 186, 394, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  961.,  961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/124.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 394, 237, 424],
       [152, 158, 191, 197],
       [271, 141, 289, 159],
       [362, 184, 389, 211],
       [347, 167, 422, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.,   361.,   784.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/125.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/126.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/127.jpg', 'flipped': False, 'width': 600, 'boxes': array([[216, 333, 243, 360],
       [174, 364, 276, 466],
       [113, 102, 275, 264],
       [235, 109, 316, 190],
       [320, 145, 452, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   784.,  10609.,  26569.,   6724.,  17689.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/128.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/129.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/130.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/131.jpg', 'flipped': False, 'width': 600, 'boxes': array([[214, 398, 229, 413],
       [155, 166, 185, 196],
       [364, 186, 394, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  961.,  961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/132.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 394, 237, 424],
       [152, 158, 191, 197],
       [271, 141, 289, 159],
       [362, 184, 389, 211],
       [347, 167, 422, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.,   361.,   784.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/133.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/134.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/135.jpg', 'flipped': False, 'width': 600, 'boxes': array([[216, 333, 243, 360],
       [174, 364, 276, 466],
       [113, 102, 275, 264],
       [235, 109, 316, 190],
       [320, 145, 452, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   784.,  10609.,  26569.,   6724.,  17689.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/136.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/137.jpg', 'flipped': False, 'width': 600, 'boxes': array([[216, 333, 243, 360],
       [174, 364, 276, 466],
       [113, 102, 275, 264],
       [235, 109, 316, 190],
       [320, 145, 452, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   784.,  10609.,  26569.,   6724.,  17689.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/138.jpg', 'flipped': False, 'width': 600, 'boxes': array([[209, 326, 251, 368],
       [224,  97, 326, 199]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1849.,  10609.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/139.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/140.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/141.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 158, 192, 182],
       [228, 392, 240, 404],
       [385, 185, 406, 206],
       [375, 179, 396, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  169.,  484.,  484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/142.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/143.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/144.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 158, 192, 182],
       [228, 392, 240, 404],
       [385, 185, 406, 206],
       [375, 179, 396, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  169.,  484.,  484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/145.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/146.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/147.jpg', 'flipped': False, 'width': 600, 'boxes': array([[285, 109, 339, 163],
       [151,  99, 262, 210],
       [353, 128, 485, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,  12544.,  17689.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/148.jpg', 'flipped': False, 'width': 600, 'boxes': array([[334, 105, 514, 285],
       [147,  95, 279, 227]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 32761.,  17689.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/149.jpg', 'flipped': False, 'width': 600, 'boxes': array([[325,  96, 523, 294],
       [151,  88, 310, 247]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 39601.,  25600.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/150.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 158, 192, 182],
       [228, 392, 240, 404],
       [385, 185, 406, 206],
       [375, 179, 396, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  169.,  484.,  484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/151.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/152.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/153.jpg', 'flipped': False, 'width': 600, 'boxes': array([[285, 109, 339, 163],
       [151,  99, 262, 210],
       [353, 128, 485, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,  12544.,  17689.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/154.jpg', 'flipped': False, 'width': 600, 'boxes': array([[147,  95, 279, 227],
       [334, 105, 514, 285]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 17689.,  32761.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/155.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  88, 310, 247],
       [325,  96, 523, 294]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 25600.,  39601.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/156.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/157.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/158.jpg', 'flipped': False, 'width': 600, 'boxes': array([[285, 109, 339, 163],
       [151,  99, 262, 210],
       [353, 128, 485, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,  12544.,  17689.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/159.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 158, 192, 182],
       [228, 392, 240, 404],
       [385, 185, 406, 206],
       [375, 179, 396, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  169.,  484.,  484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/160.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/161.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/162.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/163.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/164.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 187, 388, 199]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/165.jpg', 'flipped': False, 'width': 600, 'boxes': array([[373, 175, 400, 202]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 784.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/166.jpg', 'flipped': False, 'width': 600, 'boxes': array([[374, 166, 416, 208]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/167.jpg', 'flipped': False, 'width': 600, 'boxes': array([[371, 154, 440, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/168.jpg', 'flipped': False, 'width': 600, 'boxes': array([[371, 147, 458, 234]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 7744.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/169.jpg', 'flipped': False, 'width': 600, 'boxes': array([[369, 134, 480, 245]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/170.jpg', 'flipped': False, 'width': 600, 'boxes': array([[365, 122, 497, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 17689.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/171.jpg', 'flipped': False, 'width': 600, 'boxes': array([[345, 102, 516, 273]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 29584.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/172.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 196, 390, 208]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/173.jpg', 'flipped': False, 'width': 600, 'boxes': array([[371, 195, 407, 231],
       [377, 199, 392, 214]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/174.jpg', 'flipped': False, 'width': 600, 'boxes': array([[283, 151, 292, 160],
       [377, 196, 398, 217],
       [345, 162, 438, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  100.,   484.,  8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/175.jpg', 'flipped': False, 'width': 600, 'boxes': array([[275, 142, 308, 175],
       [375, 191, 393, 209],
       [365, 190, 428, 253],
       [328, 149, 478, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,    361.,   4096.,  22801.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/176.jpg', 'flipped': False, 'width': 600, 'boxes': array([[277, 148, 331, 202],
       [374, 193, 413, 232],
       [336, 176, 447, 287],
       [291, 123, 513, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,   1600.,  12544.,  49729.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/177.jpg', 'flipped': False, 'width': 600, 'boxes': array([[377, 199, 392, 214],
       [371, 195, 407, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  256.,  1369.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/178.jpg', 'flipped': False, 'width': 600, 'boxes': array([[283, 151, 292, 160],
       [377, 196, 398, 217],
       [345, 162, 438, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  100.,   484.,  8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/179.jpg', 'flipped': False, 'width': 600, 'boxes': array([[275, 142, 308, 175],
       [375, 191, 393, 209],
       [365, 190, 428, 253],
       [328, 149, 478, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,    361.,   4096.,  22801.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/180.jpg', 'flipped': False, 'width': 600, 'boxes': array([[277, 148, 331, 202],
       [374, 193, 413, 232],
       [336, 176, 447, 287],
       [291, 123, 513, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,   1600.,  12544.,  49729.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/181.jpg', 'flipped': False, 'width': 600, 'boxes': array([[275, 142, 308, 175],
       [375, 191, 393, 209],
       [365, 190, 428, 253],
       [328, 149, 478, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,    361.,   4096.,  22801.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/182.jpg', 'flipped': False, 'width': 600, 'boxes': array([[277, 148, 331, 202],
       [374, 193, 413, 232],
       [336, 176, 447, 287],
       [291, 123, 513, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,   1600.,  12544.,  49729.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/183.jpg', 'flipped': False, 'width': 600, 'boxes': array([[283, 151, 292, 160],
       [377, 196, 398, 217],
       [345, 162, 438, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  100.,   484.,  8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/184.jpg', 'flipped': False, 'width': 600, 'boxes': array([[275, 142, 308, 175],
       [375, 191, 393, 209],
       [365, 190, 428, 253],
       [328, 149, 478, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,    361.,   4096.,  22801.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/185.jpg', 'flipped': False, 'width': 600, 'boxes': array([[277, 148, 331, 202],
       [374, 193, 413, 232],
       [336, 176, 447, 287],
       [291, 123, 513, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,   1600.,  12544.,  49729.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/186.jpg', 'flipped': False, 'width': 600, 'boxes': array([[279, 157, 345, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/187.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/188.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/189.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/190.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/191.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/192.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/193.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/194.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/195.jpg', 'flipped': False, 'width': 600, 'boxes': array([[372, 194, 399, 221],
       [357, 196, 423, 262]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  4489.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/196.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/197.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/198.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/199.jpg', 'flipped': False, 'width': 600, 'boxes': array([[379, 196, 385, 202]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 49.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/200.jpg', 'flipped': False, 'width': 600, 'boxes': array([[368, 197, 404, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/201.jpg', 'flipped': False, 'width': 600, 'boxes': array([[357, 196, 423, 262],
       [372, 194, 399, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,   784.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/202.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/203.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/204.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/205.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/206.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/207.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/208.jpg', 'flipped': False, 'width': 600, 'boxes': array([[253, 140, 343, 230]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 8281.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/209.jpg', 'flipped': False, 'width': 600, 'boxes': array([[249, 135, 348, 234]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 10000.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/210.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/211.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/212.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/213.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/214.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/215.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/216.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/217.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/218.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/219.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/220.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/221.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/222.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/223.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/224.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/225.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/226.jpg', 'flipped': False, 'width': 600, 'boxes': array([[278, 149, 290, 161],
       [367, 197, 382, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/227.jpg', 'flipped': False, 'width': 600, 'boxes': array([[266, 140, 302, 176]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/228.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/229.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/230.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/231.jpg', 'flipped': False, 'width': 600, 'boxes': array([[186,  46, 246, 106],
       [420, 109, 504, 193],
       [330, 174, 429, 273],
       [229, 121, 331, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3721.,   7225.,  10000.,  10609.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/232.jpg', 'flipped': False, 'width': 600, 'boxes': array([[220, 115, 340, 235],
       [326, 173, 437, 284]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 14641.,  12544.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/233.jpg', 'flipped': False, 'width': 600, 'boxes': array([[214, 111, 346, 243]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 17689.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/234.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 103, 353, 250]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 21904.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/235.jpg', 'flipped': False, 'width': 600, 'boxes': array([[225, 186, 243, 204]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/236.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/237.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/238.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/239.jpg', 'flipped': False, 'width': 600, 'boxes': array([[367, 197, 382, 212],
       [278, 149, 290, 161]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  169.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/240.jpg', 'flipped': False, 'width': 600, 'boxes': array([[360, 193, 387, 220]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 784.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/241.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/242.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/243.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/244.jpg', 'flipped': False, 'width': 600, 'boxes': array([[186,  46, 246, 106],
       [420, 109, 504, 193],
       [330, 174, 429, 273],
       [229, 121, 331, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3721.,   7225.,  10000.,  10609.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/245.jpg', 'flipped': False, 'width': 600, 'boxes': array([[326, 173, 437, 284],
       [220, 115, 340, 235]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.,  14641.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/246.jpg', 'flipped': False, 'width': 600, 'boxes': array([[408, 167, 438, 197]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 961.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/247.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/248.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/249.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/250.jpg', 'flipped': False, 'width': 600, 'boxes': array([[445, 124, 478, 157]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/251.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/252.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/253.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/254.jpg', 'flipped': False, 'width': 600, 'boxes': array([[186,  46, 246, 106],
       [420, 109, 504, 193],
       [330, 174, 429, 273],
       [229, 121, 331, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3721.,   7225.,  10000.,  10609.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/255.jpg', 'flipped': False, 'width': 600, 'boxes': array([[167,  83, 185, 101]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/256.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/257.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/258.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/259.jpg', 'flipped': False, 'width': 600, 'boxes': array([[203,  58, 227,  82]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/260.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/261.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/262.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/263.jpg', 'flipped': False, 'width': 600, 'boxes': array([[186,  46, 246, 106],
       [420, 109, 504, 193],
       [330, 174, 429, 273],
       [229, 121, 331, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3721.,   7225.,  10000.,  10609.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/264.jpg', 'flipped': False, 'width': 600, 'boxes': array([[214, 324, 229, 339]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/265.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/266.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/267.jpg', 'flipped': False, 'width': 600, 'boxes': array([[245, 337, 266, 358]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 484.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/268.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/269.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/270.jpg', 'flipped': False, 'width': 600, 'boxes': array([[277, 141, 295, 159]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/271.jpg', 'flipped': False, 'width': 600, 'boxes': array([[274, 132, 304, 162]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 961.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/272.jpg', 'flipped': False, 'width': 600, 'boxes': array([[269, 121, 314, 166]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/273.jpg', 'flipped': False, 'width': 600, 'boxes': array([[263, 112, 326, 175]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4096.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/274.jpg', 'flipped': False, 'width': 600, 'boxes': array([[261, 104, 336, 179]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/275.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/276.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/277.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/278.jpg', 'flipped': False, 'width': 600, 'boxes': array([[209, 180, 263, 234],
       [257, 134, 335, 212],
       [439, 108, 535, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  6241.,  9409.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/279.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/280.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/281.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/282.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/283.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/284.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/285.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/286.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/287.jpg', 'flipped': False, 'width': 600, 'boxes': array([[209, 180, 263, 234],
       [257, 134, 335, 212],
       [439, 108, 535, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  6241.,  9409.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/288.jpg', 'flipped': False, 'width': 600, 'boxes': array([[248, 120, 365, 237]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 13924.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/289.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/290.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/291.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/292.jpg', 'flipped': False, 'width': 600, 'boxes': array([[209, 180, 263, 234],
       [257, 134, 335, 212],
       [439, 108, 535, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  6241.,  9409.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/293.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/294.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/295.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/296.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/297.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/298.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/299.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/300.jpg', 'flipped': False, 'width': 600, 'boxes': array([[453, 126, 465, 138]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/301.jpg', 'flipped': False, 'width': 600, 'boxes': array([[439, 108, 472, 141],
       [264, 120, 297, 153]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1156.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/302.jpg', 'flipped': False, 'width': 600, 'boxes': array([[420,  91, 477, 148],
       [255,  98, 315, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3721.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/303.jpg', 'flipped': False, 'width': 600, 'boxes': array([[403,  70, 478, 145],
       [246,  71, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.,  7744.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/304.jpg', 'flipped': False, 'width': 600, 'boxes': array([[264, 120, 297, 153],
       [439, 108, 472, 141]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1156.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/305.jpg', 'flipped': False, 'width': 600, 'boxes': array([[255,  98, 315, 158],
       [420,  91, 477, 148]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3364.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/306.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246,  71, 333, 158],
       [403,  70, 478, 145]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 7744.,  5776.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/307.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 194, 387, 203],
       [168, 192, 177, 201],
       [286, 152, 289, 155]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,  100.,   16.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/308.jpg', 'flipped': False, 'width': 600, 'boxes': array([[287, 146, 305, 164],
       [382, 191, 403, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/309.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 191, 407, 215],
       [161, 177, 200, 216],
       [290, 140, 320, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/310.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163, 176, 217, 230],
       [290, 136, 326, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  1369.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/311.jpg', 'flipped': False, 'width': 600, 'boxes': array([[294, 135, 342, 183],
       [186,  96, 207, 117]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,   484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/312.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181,  89, 220, 128],
       [170,  52, 194,  76],
       [287, 132, 356, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,   625.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/313.jpg', 'flipped': False, 'width': 600, 'boxes': array([[179,  87, 236, 144],
       [169,  50, 208,  89],
       [284, 130, 365, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  6724.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/314.jpg', 'flipped': False, 'width': 600, 'boxes': array([[180,  93, 243, 156],
       [167,  48, 218,  99],
       [275, 127, 374, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4096.,   2704.,  10000.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/315.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181,  89, 220, 128],
       [170,  52, 194,  76],
       [287, 132, 356, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,   625.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/316.jpg', 'flipped': False, 'width': 600, 'boxes': array([[179,  87, 236, 144],
       [169,  50, 208,  89],
       [284, 130, 365, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  6724.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/317.jpg', 'flipped': False, 'width': 600, 'boxes': array([[180,  93, 243, 156],
       [167,  48, 218,  99],
       [275, 127, 374, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4096.,   2704.,  10000.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/318.jpg', 'flipped': False, 'width': 600, 'boxes': array([[186,  96, 207, 117],
       [294, 135, 342, 183]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  2401.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/319.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181,  89, 220, 128],
       [170,  52, 194,  76],
       [287, 132, 356, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,   625.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/320.jpg', 'flipped': False, 'width': 600, 'boxes': array([[179,  87, 236, 144],
       [169,  50, 208,  89],
       [284, 130, 365, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  6724.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/321.jpg', 'flipped': False, 'width': 600, 'boxes': array([[180,  93, 243, 156],
       [167,  48, 218,  99],
       [275, 127, 374, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4096.,   2704.,  10000.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/322.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 192, 177, 201],
       [378, 194, 387, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,  100.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/323.jpg', 'flipped': False, 'width': 600, 'boxes': array([[382, 191, 403, 212],
       [166, 180, 190, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 484.,  625.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/324.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 191, 407, 215],
       [161, 177, 200, 216],
       [290, 140, 320, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/325.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163, 176, 217, 230],
       [290, 136, 326, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  1369.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/326.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 192, 177, 201],
       [378, 194, 387, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,  100.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/327.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166, 180, 190, 204],
       [382, 191, 403, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/328.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 191, 407, 215],
       [161, 177, 200, 216],
       [290, 140, 320, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/329.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/330.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/331.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/332.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/333.jpg', 'flipped': False, 'width': 600, 'boxes': array([[402,  93, 513, 204],
       [188, 183, 272, 267],
       [223, 100, 349, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.,   7225.,  16129.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/334.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 101, 354, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 17689.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/335.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/336.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/337.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/338.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/339.jpg', 'flipped': False, 'width': 600, 'boxes': array([[402,  93, 513, 204],
       [188, 183, 272, 267],
       [223, 100, 349, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.,   7225.,  16129.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/340.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/341.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/342.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/343.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/344.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/345.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/346.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/347.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/348.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/349.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/350.jpg', 'flipped': False, 'width': 600, 'boxes': array([[402,  93, 513, 204],
       [188, 183, 272, 267],
       [223, 100, 349, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.,   7225.,  16129.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/351.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/352.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/353.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/354.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/355.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/356.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/357.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/358.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/359.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/360.jpg', 'flipped': False, 'width': 600, 'boxes': array([[279, 144, 291, 156]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/361.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 334, 218, 346],
       [221, 175, 248, 202],
       [452, 120, 485, 153],
       [419, 167, 440, 188],
       [273, 133, 306, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   784.,  1156.,   484.,  1156.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/362.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 323, 228, 356],
       [215, 172, 251, 208],
       [446, 115, 500, 169],
       [407, 158, 455, 206],
       [264, 128, 315, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  3025.,  2401.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/363.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181, 317, 238, 374],
       [203, 164, 266, 227],
       [434, 116, 509, 191],
       [384, 163, 447, 226],
       [254, 121, 329, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  4096.,  5776.,  4096.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/364.jpg', 'flipped': False, 'width': 600, 'boxes': array([[241, 108, 349, 216],
       [166, 315, 250, 399]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 11881.,   7225.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/365.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 334, 218, 346],
       [221, 175, 248, 202],
       [452, 120, 485, 153],
       [419, 167, 440, 188],
       [273, 133, 306, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   784.,  1156.,   484.,  1156.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/366.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 323, 228, 356],
       [215, 172, 251, 208],
       [446, 115, 500, 169],
       [407, 158, 455, 206],
       [264, 128, 315, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  3025.,  2401.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/367.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181, 317, 238, 374],
       [203, 164, 266, 227],
       [434, 116, 509, 191],
       [384, 163, 447, 226],
       [254, 121, 329, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  4096.,  5776.,  4096.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/368.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 334, 218, 346],
       [221, 175, 248, 202],
       [452, 120, 485, 153],
       [419, 167, 440, 188],
       [273, 133, 306, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   784.,  1156.,   484.,  1156.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/369.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 323, 228, 356],
       [215, 172, 251, 208],
       [446, 115, 500, 169],
       [407, 158, 455, 206],
       [264, 128, 315, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  3025.,  2401.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/370.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181, 317, 238, 374],
       [203, 164, 266, 227],
       [434, 116, 509, 191],
       [384, 163, 447, 226],
       [254, 121, 329, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  4096.,  5776.,  4096.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/371.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 334, 218, 346],
       [221, 175, 248, 202],
       [452, 120, 485, 153],
       [419, 167, 440, 188],
       [273, 133, 306, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   784.,  1156.,   484.,  1156.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/372.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 323, 228, 356],
       [215, 172, 251, 208],
       [446, 115, 500, 169],
       [407, 158, 455, 206],
       [264, 128, 315, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  3025.,  2401.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/373.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181, 317, 238, 374],
       [203, 164, 266, 227],
       [434, 116, 509, 191],
       [384, 163, 447, 226],
       [254, 121, 329, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  4096.,  5776.,  4096.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/374.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 334, 218, 346],
       [221, 175, 248, 202],
       [452, 120, 485, 153],
       [419, 167, 440, 188],
       [273, 133, 306, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   784.,  1156.,   484.,  1156.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/375.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 323, 228, 356],
       [215, 172, 251, 208],
       [446, 115, 500, 169],
       [407, 158, 455, 206],
       [264, 128, 315, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  3025.,  2401.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/376.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181, 317, 238, 374],
       [203, 164, 266, 227],
       [434, 116, 509, 191],
       [384, 163, 447, 226],
       [254, 121, 329, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  4096.,  5776.,  4096.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/377.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166, 315, 250, 399],
       [241, 108, 349, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7225.,  11881.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/378.jpg', 'flipped': False, 'width': 600, 'boxes': array([[329, 419, 341, 431],
       [456, 136, 474, 154],
       [419, 181, 431, 193],
       [204, 339, 213, 348],
       [275, 148, 293, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  361.,  169.,  100.,  361.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/379.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/380.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/381.jpg', 'flipped': False, 'width': 600, 'boxes': array([[430, 137, 496, 203],
       [392, 191, 452, 251],
       [169, 348, 253, 432],
       [239, 153, 317, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  3721.,  7225.,  6241.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/382.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/383.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/384.jpg', 'flipped': False, 'width': 600, 'boxes': array([[329, 419, 341, 431],
       [456, 136, 474, 154],
       [419, 181, 431, 193],
       [204, 339, 213, 348],
       [275, 148, 293, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  361.,  169.,  100.,  361.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/385.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/386.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/387.jpg', 'flipped': False, 'width': 600, 'boxes': array([[430, 137, 496, 203],
       [392, 191, 452, 251],
       [169, 348, 253, 432],
       [239, 153, 317, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  3721.,  7225.,  6241.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/388.jpg', 'flipped': False, 'width': 600, 'boxes': array([[162, 353, 267, 458]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 11236.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/389.jpg', 'flipped': False, 'width': 600, 'boxes': array([[329, 419, 341, 431],
       [456, 136, 474, 154],
       [419, 181, 431, 193],
       [204, 339, 213, 348],
       [275, 148, 293, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  361.,  169.,  100.,  361.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/390.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/391.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/392.jpg', 'flipped': False, 'width': 600, 'boxes': array([[430, 137, 496, 203],
       [392, 191, 452, 251],
       [169, 348, 253, 432],
       [239, 153, 317, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  3721.,  7225.,  6241.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/393.jpg', 'flipped': False, 'width': 600, 'boxes': array([[329, 419, 341, 431],
       [456, 136, 474, 154],
       [419, 181, 431, 193],
       [204, 339, 213, 348],
       [275, 148, 293, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  361.,  169.,  100.,  361.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/394.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/395.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/396.jpg', 'flipped': False, 'width': 600, 'boxes': array([[430, 137, 496, 203],
       [392, 191, 452, 251],
       [169, 348, 253, 432],
       [239, 153, 317, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  3721.,  7225.,  6241.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/397.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/398.jpg', 'flipped': False, 'width': 600, 'boxes': array([[329, 419, 341, 431],
       [456, 136, 474, 154],
       [419, 181, 431, 193],
       [204, 339, 213, 348],
       [275, 148, 293, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  361.,  169.,  100.,  361.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/399.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/400.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/401.jpg', 'flipped': False, 'width': 600, 'boxes': array([[279, 142, 291, 154]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/402.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/403.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/404.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/405.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  35, 267, 101],
       [148,  56, 223, 131],
       [419,  95, 494, 170],
       [366, 144, 441, 219],
       [228,  91, 330, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4489.,   5776.,   5776.,   5776.,  10609.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/406.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/407.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/408.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/409.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/410.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/411.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/412.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/413.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/414.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  35, 267, 101],
       [148,  56, 223, 131],
       [419,  95, 494, 170],
       [366, 144, 441, 219],
       [228,  91, 330, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4489.,   5776.,   5776.,   5776.,  10609.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/415.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  31, 281, 118],
       [134,  47, 242, 155],
       [353, 138, 446, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  11881.,   8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/416.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/417.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/418.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/419.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  35, 267, 101],
       [148,  56, 223, 131],
       [419,  95, 494, 170],
       [366, 144, 441, 219],
       [228,  91, 330, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4489.,   5776.,   5776.,   5776.,  10609.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/420.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/421.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/422.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/423.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/424.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/425.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/426.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  35, 267, 101],
       [148,  56, 223, 131],
       [419,  95, 494, 170],
       [366, 144, 441, 219],
       [228,  91, 330, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4489.,   5776.,   5776.,   5776.,  10609.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/427.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  31, 281, 118],
       [134,  47, 242, 155],
       [353, 138, 446, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  11881.,   8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/428.jpg', 'flipped': False, 'width': 600, 'boxes': array([[133,  40, 259, 166]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 16129.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/429.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/430.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/431.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/432.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  35, 267, 101],
       [148,  56, 223, 131],
       [419,  95, 494, 170],
       [366, 144, 441, 219],
       [228,  91, 330, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4489.,   5776.,   5776.,   5776.,  10609.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/433.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  31, 281, 118],
       [134,  47, 242, 155],
       [353, 138, 446, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  11881.,   8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/434.jpg', 'flipped': False, 'width': 600, 'boxes': array([[276, 120, 306, 150],
       [206, 322, 221, 337]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 961.,  256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/435.jpg', 'flipped': False, 'width': 600, 'boxes': array([[272, 100, 329, 157],
       [196, 297, 241, 342]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  2116.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/436.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 322, 221, 337],
       [276, 120, 306, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  961.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/437.jpg', 'flipped': False, 'width': 600, 'boxes': array([[196, 297, 241, 342],
       [272, 100, 329, 157]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/438.jpg', 'flipped': False, 'width': 600, 'boxes': array([[275, 142, 290, 157],
       [221, 186, 236, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/439.jpg', 'flipped': False, 'width': 600, 'boxes': array([[202, 335, 217, 350],
       [215, 185, 239, 209],
       [269, 141, 293, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  625.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/440.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 332, 225, 362],
       [206, 184, 242, 220],
       [260, 134, 299, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1369.,  1600.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/441.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194, 332, 230, 368],
       [196, 178, 247, 229],
       [253, 130, 307, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2704.,  3025.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/442.jpg', 'flipped': False, 'width': 600, 'boxes': array([[182, 325, 236, 379],
       [186, 175, 252, 241],
       [249, 130, 309, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4489.,  3721.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/443.jpg', 'flipped': False, 'width': 600, 'boxes': array([[240, 128, 312, 200]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5329.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/444.jpg', 'flipped': False, 'width': 600, 'boxes': array([[228, 125, 312, 209]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 7225.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/445.jpg', 'flipped': False, 'width': 600, 'boxes': array([[218, 118, 323, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 11236.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/446.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 186, 236, 201],
       [275, 142, 290, 157]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/447.jpg', 'flipped': False, 'width': 600, 'boxes': array([[202, 335, 217, 350],
       [215, 185, 239, 209],
       [269, 141, 293, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  625.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/448.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 332, 225, 362],
       [206, 184, 242, 220],
       [260, 134, 299, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1369.,  1600.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/449.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194, 332, 230, 368],
       [196, 178, 247, 229],
       [253, 130, 307, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2704.,  3025.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/450.jpg', 'flipped': False, 'width': 600, 'boxes': array([[182, 325, 236, 379],
       [186, 175, 252, 241],
       [249, 130, 309, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4489.,  3721.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/451.jpg', 'flipped': False, 'width': 600, 'boxes': array([[202, 335, 217, 350],
       [215, 185, 239, 209],
       [269, 141, 293, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  625.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/452.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 332, 225, 362],
       [206, 184, 242, 220],
       [260, 134, 299, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1369.,  1600.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/453.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194, 332, 230, 368],
       [196, 178, 247, 229],
       [253, 130, 307, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2704.,  3025.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/454.jpg', 'flipped': False, 'width': 600, 'boxes': array([[182, 325, 236, 379],
       [186, 175, 252, 241],
       [249, 130, 309, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4489.,  3721.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/455.jpg', 'flipped': False, 'width': 600, 'boxes': array([[393, 168, 429, 204],
       [201, 336, 213, 348],
       [220, 191, 229, 200],
       [268, 142, 289, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   169.,   100.,   484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/456.jpg', 'flipped': False, 'width': 600, 'boxes': array([[382, 166, 430, 214],
       [188, 333, 215, 360],
       [209, 192, 227, 210],
       [257, 139, 290, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,   784.,   361.,  1156.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/457.jpg', 'flipped': False, 'width': 600, 'boxes': array([[364, 161, 430, 227],
       [179, 336, 212, 369],
       [193, 189, 229, 225],
       [244, 134, 295, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  1156.,  1369.,  2704.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/458.jpg', 'flipped': False, 'width': 600, 'boxes': array([[357, 160, 432, 235],
       [162, 332, 216, 386],
       [190, 194, 223, 227],
       [234, 130, 300, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.,  3025.,  1156.,  4489.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/459.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 125, 304, 206],
       [153, 338, 213, 398]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 6724.,  3721.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/460.jpg', 'flipped': False, 'width': 600, 'boxes': array([[215, 120, 308, 213],
       [141, 337, 213, 409]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 8836.,  5329.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/461.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 115, 312, 220]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 11236.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/462.jpg', 'flipped': False, 'width': 600, 'boxes': array([[197, 109, 323, 235]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 16129.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/463.jpg', 'flipped': False, 'width': 600, 'boxes': array([[183,  95, 342, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 25600.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/464.jpg', 'flipped': False, 'width': 600, 'boxes': array([[393, 168, 429, 204],
       [201, 336, 213, 348],
       [220, 191, 229, 200],
       [268, 142, 289, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   169.,   100.,   484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/465.jpg', 'flipped': False, 'width': 600, 'boxes': array([[382, 166, 430, 214],
       [188, 333, 215, 360],
       [209, 192, 227, 210],
       [257, 139, 290, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,   784.,   361.,  1156.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/466.jpg', 'flipped': False, 'width': 600, 'boxes': array([[364, 161, 430, 227],
       [179, 336, 212, 369],
       [193, 189, 229, 225],
       [244, 134, 295, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  1156.,  1369.,  2704.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/467.jpg', 'flipped': False, 'width': 600, 'boxes': array([[357, 160, 432, 235],
       [162, 332, 216, 386],
       [190, 194, 223, 227],
       [234, 130, 300, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.,  3025.,  1156.,  4489.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/468.jpg', 'flipped': False, 'width': 600, 'boxes': array([[393, 168, 429, 204],
       [201, 336, 213, 348],
       [220, 191, 229, 200],
       [268, 142, 289, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   169.,   100.,   484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/469.jpg', 'flipped': False, 'width': 600, 'boxes': array([[382, 166, 430, 214],
       [188, 333, 215, 360],
       [209, 192, 227, 210],
       [257, 139, 290, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,   784.,   361.,  1156.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/470.jpg', 'flipped': False, 'width': 600, 'boxes': array([[364, 161, 430, 227],
       [179, 336, 212, 369],
       [193, 189, 229, 225],
       [244, 134, 295, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  1156.,  1369.,  2704.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/471.jpg', 'flipped': False, 'width': 600, 'boxes': array([[357, 160, 432, 235],
       [162, 332, 216, 386],
       [190, 194, 223, 227],
       [234, 130, 300, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.,  3025.,  1156.,  4489.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/472.jpg', 'flipped': False, 'width': 600, 'boxes': array([[153, 338, 213, 398],
       [223, 125, 304, 206]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  6724.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/473.jpg', 'flipped': False, 'width': 600, 'boxes': array([[141, 337, 213, 409],
       [215, 120, 308, 213]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5329.,  8836.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/474.jpg', 'flipped': False, 'width': 600, 'boxes': array([[407, 169, 428, 190]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 484.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/475.jpg', 'flipped': False, 'width': 600, 'boxes': array([[393, 168, 429, 204],
       [201, 336, 213, 348],
       [220, 191, 229, 200],
       [268, 142, 289, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   169.,   100.,   484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/476.jpg', 'flipped': False, 'width': 600, 'boxes': array([[382, 166, 430, 214],
       [188, 333, 215, 360],
       [209, 192, 227, 210],
       [257, 139, 290, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,   784.,   361.,  1156.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/477.jpg', 'flipped': False, 'width': 600, 'boxes': array([[364, 161, 430, 227],
       [179, 336, 212, 369],
       [193, 189, 229, 225],
       [244, 134, 295, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  1156.,  1369.,  2704.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/478.jpg', 'flipped': False, 'width': 600, 'boxes': array([[357, 160, 432, 235],
       [162, 332, 216, 386],
       [190, 194, 223, 227],
       [234, 130, 300, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.,  3025.,  1156.,  4489.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/479.jpg', 'flipped': False, 'width': 600, 'boxes': array([[227, 186, 236, 195],
       [421, 173, 427, 179],
       [274, 138, 292, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,   49.,  361.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/480.jpg', 'flipped': False, 'width': 600, 'boxes': array([[330, 305, 336, 311],
       [220, 184, 244, 208],
       [413, 170, 431, 188],
       [197, 330, 215, 348],
       [269, 133, 299, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  49.,  625.,  361.,  361.,  961.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/481.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 299, 341, 320],
       [216, 183, 252, 219],
       [405, 162, 441, 198],
       [192, 328, 219, 355],
       [258, 125, 312, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  1369.,   784.,  3025.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/482.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 296, 347, 332],
       [209, 183, 257, 231],
       [395, 155, 449, 209],
       [183, 327, 222, 366],
       [249, 114, 324, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2401.,  3025.,  1600.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/483.jpg', 'flipped': False, 'width': 600, 'boxes': array([[300, 288, 357, 345],
       [385, 144, 460, 219],
       [179, 325, 230, 376],
       [243, 113, 330, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  5776.,  2704.,  7744.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/484.jpg', 'flipped': False, 'width': 600, 'boxes': array([[232, 105, 343, 216]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/485.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 101, 350, 227]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 16129.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/486.jpg', 'flipped': False, 'width': 600, 'boxes': array([[217,  95, 355, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 19321.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/487.jpg', 'flipped': False, 'width': 600, 'boxes': array([[212,  93, 359, 240]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 21904.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/488.jpg', 'flipped': False, 'width': 600, 'boxes': array([[204,  90, 363, 249]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 25600.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/489.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  92, 363, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 26569.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/490.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195,  86, 369, 260]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 30625.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/491.jpg', 'flipped': False, 'width': 600, 'boxes': array([[330, 305, 336, 311],
       [220, 184, 244, 208],
       [413, 170, 431, 188],
       [197, 330, 215, 348],
       [269, 133, 299, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  49.,  625.,  361.,  361.,  961.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/492.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 299, 341, 320],
       [216, 183, 252, 219],
       [405, 162, 441, 198],
       [192, 328, 219, 355],
       [258, 125, 312, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  1369.,   784.,  3025.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/493.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 296, 347, 332],
       [209, 183, 257, 231],
       [395, 155, 449, 209],
       [183, 327, 222, 366],
       [249, 114, 324, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2401.,  3025.,  1600.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/494.jpg', 'flipped': False, 'width': 600, 'boxes': array([[300, 288, 357, 345],
       [385, 144, 460, 219],
       [179, 325, 230, 376],
       [243, 113, 330, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  5776.,  2704.,  7744.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/495.jpg', 'flipped': False, 'width': 600, 'boxes': array([[227, 186, 236, 195],
       [421, 173, 427, 179],
       [274, 138, 292, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,   49.,  361.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/496.jpg', 'flipped': False, 'width': 600, 'boxes': array([[330, 305, 336, 311],
       [220, 184, 244, 208],
       [413, 170, 431, 188],
       [197, 330, 215, 348],
       [269, 133, 299, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  49.,  625.,  361.,  361.,  961.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/497.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 299, 341, 320],
       [216, 183, 252, 219],
       [405, 162, 441, 198],
       [192, 328, 219, 355],
       [258, 125, 312, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  1369.,   784.,  3025.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/498.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 296, 347, 332],
       [209, 183, 257, 231],
       [395, 155, 449, 209],
       [183, 327, 222, 366],
       [249, 114, 324, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2401.,  3025.,  1600.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/499.jpg', 'flipped': False, 'width': 600, 'boxes': array([[300, 288, 357, 345],
       [385, 144, 460, 219],
       [179, 325, 230, 376],
       [243, 113, 330, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  5776.,  2704.,  7744.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/500.jpg', 'flipped': False, 'width': 600, 'boxes': array([[227, 186, 236, 195],
       [421, 173, 427, 179],
       [274, 138, 292, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,   49.,  361.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/501.jpg', 'flipped': False, 'width': 600, 'boxes': array([[330, 305, 336, 311],
       [220, 184, 244, 208],
       [413, 170, 431, 188],
       [197, 330, 215, 348],
       [269, 133, 299, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  49.,  625.,  361.,  361.,  961.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/1.jpg', 'flipped': True, 'width': 600, 'boxes': array([[203, 194, 221, 212],
       [415, 173, 430, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/2.jpg', 'flipped': True, 'width': 600, 'boxes': array([[200, 185, 227, 212],
       [410, 166, 434, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/3.jpg', 'flipped': True, 'width': 600, 'boxes': array([[192, 179, 231, 218],
       [407, 163, 437, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/4.jpg', 'flipped': True, 'width': 600, 'boxes': array([[182, 175, 236, 229],
       [397, 162, 436, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/5.jpg', 'flipped': True, 'width': 600, 'boxes': array([[417, 173, 429, 185]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/6.jpg', 'flipped': True, 'width': 600, 'boxes': array([[415, 173, 430, 188],
       [203, 194, 221, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/7.jpg', 'flipped': True, 'width': 600, 'boxes': array([[410, 166, 434, 190],
       [200, 185, 227, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/8.jpg', 'flipped': True, 'width': 600, 'boxes': array([[407, 163, 437, 193],
       [192, 179, 231, 218]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/9.jpg', 'flipped': True, 'width': 600, 'boxes': array([[397, 162, 436, 201],
       [182, 175, 236, 229]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/10.jpg', 'flipped': True, 'width': 600, 'boxes': array([[388, 149, 445, 206]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/11.jpg', 'flipped': True, 'width': 600, 'boxes': array([[383, 145, 449, 211]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/12.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379, 140, 454, 215]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/13.jpg', 'flipped': True, 'width': 600, 'boxes': array([[203, 189, 218, 204],
       [358, 388, 373, 403],
       [404, 159, 431, 186],
       [208, 185, 226, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/14.jpg', 'flipped': True, 'width': 600, 'boxes': array([[186, 185, 216, 215],
       [337, 373, 379, 415],
       [379, 143, 433, 197],
       [191, 173, 227, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/15.jpg', 'flipped': True, 'width': 600, 'boxes': array([[173, 173, 221, 221],
       [319, 362, 385, 428],
       [368, 137, 440, 209],
       [178, 158, 232, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/16.jpg', 'flipped': True, 'width': 600, 'boxes': array([[315, 364, 396, 445],
       [357, 130, 447, 220],
       [169, 144, 235, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/17.jpg', 'flipped': True, 'width': 600, 'boxes': array([[203, 189, 218, 204],
       [358, 388, 373, 403],
       [404, 159, 431, 186],
       [208, 185, 226, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/18.jpg', 'flipped': True, 'width': 600, 'boxes': array([[186, 185, 216, 215],
       [337, 373, 379, 415],
       [379, 143, 433, 197],
       [191, 173, 227, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/19.jpg', 'flipped': True, 'width': 600, 'boxes': array([[173, 173, 221, 221],
       [319, 362, 385, 428],
       [368, 137, 440, 209],
       [178, 158, 232, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/20.jpg', 'flipped': True, 'width': 600, 'boxes': array([[315, 364, 396, 445],
       [357, 130, 447, 220],
       [169, 144, 235, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/21.jpg', 'flipped': True, 'width': 600, 'boxes': array([[342, 116, 456, 230]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/22.jpg', 'flipped': True, 'width': 600, 'boxes': array([[203, 189, 218, 204],
       [358, 388, 373, 403],
       [404, 159, 431, 186],
       [208, 185, 226, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/23.jpg', 'flipped': True, 'width': 600, 'boxes': array([[186, 185, 216, 215],
       [337, 373, 379, 415],
       [379, 143, 433, 197],
       [191, 173, 227, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/24.jpg', 'flipped': True, 'width': 600, 'boxes': array([[173, 173, 221, 221],
       [319, 362, 385, 428],
       [368, 137, 440, 209],
       [178, 158, 232, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/25.jpg', 'flipped': True, 'width': 600, 'boxes': array([[315, 364, 396, 445],
       [357, 130, 447, 220],
       [169, 144, 235, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/26.jpg', 'flipped': True, 'width': 600, 'boxes': array([[203, 189, 218, 204],
       [358, 388, 373, 403],
       [404, 159, 431, 186],
       [208, 185, 226, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/27.jpg', 'flipped': True, 'width': 600, 'boxes': array([[186, 185, 216, 215],
       [337, 373, 379, 415],
       [379, 143, 433, 197],
       [191, 173, 227, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/28.jpg', 'flipped': True, 'width': 600, 'boxes': array([[173, 173, 221, 221],
       [319, 362, 385, 428],
       [368, 137, 440, 209],
       [178, 158, 232, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/29.jpg', 'flipped': True, 'width': 600, 'boxes': array([[216, 194, 228, 206]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/30.jpg', 'flipped': True, 'width': 600, 'boxes': array([[312, 149, 327, 164],
       [417, 172, 444, 199],
       [213, 191, 237, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/31.jpg', 'flipped': True, 'width': 600, 'boxes': array([[308, 145, 332, 169],
       [411, 166, 450, 205],
       [209, 183, 251, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/32.jpg', 'flipped': True, 'width': 600, 'boxes': array([[301, 137, 340, 176],
       [407, 165, 458, 216],
       [210, 183, 255, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/33.jpg', 'flipped': True, 'width': 600, 'boxes': array([[297, 131, 348, 182],
       [398, 156, 467, 225],
       [208, 182, 259, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/34.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 126, 357, 192],
       [396, 151, 474, 229],
       [202, 173, 271, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/35.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 118, 371, 205],
       [390, 146, 489, 245],
       [199, 173, 277, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/36.jpg', 'flipped': True, 'width': 600, 'boxes': array([[312, 149, 327, 164],
       [417, 172, 444, 199],
       [213, 191, 237, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/37.jpg', 'flipped': True, 'width': 600, 'boxes': array([[308, 145, 332, 169],
       [411, 166, 450, 205],
       [209, 183, 251, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/38.jpg', 'flipped': True, 'width': 600, 'boxes': array([[301, 137, 340, 176],
       [407, 165, 458, 216],
       [210, 183, 255, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/39.jpg', 'flipped': True, 'width': 600, 'boxes': array([[297, 131, 348, 182],
       [398, 156, 467, 225],
       [208, 182, 259, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/40.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 126, 357, 192],
       [396, 151, 474, 229],
       [202, 173, 271, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/41.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 118, 371, 205],
       [390, 146, 489, 245],
       [199, 173, 277, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/42.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 141, 502, 261]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/43.jpg', 'flipped': True, 'width': 600, 'boxes': array([[380, 136, 506, 262]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/44.jpg', 'flipped': True, 'width': 600, 'boxes': array([[312, 149, 327, 164],
       [417, 172, 444, 199],
       [213, 191, 237, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/45.jpg', 'flipped': True, 'width': 600, 'boxes': array([[308, 145, 332, 169],
       [411, 166, 450, 205],
       [209, 183, 251, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/46.jpg', 'flipped': True, 'width': 600, 'boxes': array([[301, 137, 340, 176],
       [407, 165, 458, 216],
       [210, 183, 255, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/47.jpg', 'flipped': True, 'width': 600, 'boxes': array([[297, 131, 348, 182],
       [398, 156, 467, 225],
       [208, 182, 259, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/48.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 126, 357, 192],
       [396, 151, 474, 229],
       [202, 173, 271, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/49.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 118, 371, 205],
       [390, 146, 489, 245],
       [199, 173, 277, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/50.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 395, 374, 416],
       [199, 200, 220, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/51.jpg', 'flipped': True, 'width': 600, 'boxes': array([[342, 388, 375, 421],
       [206, 196, 218, 208],
       [193, 195, 223, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/52.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266, 282, 278, 294],
       [331, 388, 376, 433],
       [290, 140, 317, 167],
       [193, 187, 220, 214],
       [166, 192, 217, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/53.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/54.jpg', 'flipped': True, 'width': 600, 'boxes': array([[342, 388, 375, 421],
       [206, 196, 218, 208],
       [193, 195, 223, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/55.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266, 282, 278, 294],
       [331, 388, 376, 433],
       [290, 140, 317, 167],
       [193, 187, 220, 214],
       [166, 192, 217, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/56.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/57.jpg', 'flipped': True, 'width': 600, 'boxes': array([[330, 337, 375, 382],
       [300, 378, 375, 453],
       [241, 118, 322, 199],
       [163, 174, 232, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/58.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266, 282, 278, 294],
       [331, 388, 376, 433],
       [290, 140, 317, 167],
       [193, 187, 220, 214],
       [166, 192, 217, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/59.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/60.jpg', 'flipped': True, 'width': 600, 'boxes': array([[330, 337, 375, 382],
       [300, 378, 375, 453],
       [241, 118, 322, 199],
       [163, 174, 232, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/61.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 398, 370, 410]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/62.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 395, 374, 416],
       [199, 200, 220, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/63.jpg', 'flipped': True, 'width': 600, 'boxes': array([[342, 388, 375, 421],
       [206, 196, 218, 208],
       [193, 195, 223, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/64.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266, 282, 278, 294],
       [331, 388, 376, 433],
       [290, 140, 317, 167],
       [193, 187, 220, 214],
       [166, 192, 217, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/65.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/66.jpg', 'flipped': True, 'width': 600, 'boxes': array([[330, 337, 375, 382],
       [300, 378, 375, 453],
       [241, 118, 322, 199],
       [163, 174, 232, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/67.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/68.jpg', 'flipped': True, 'width': 600, 'boxes': array([[330, 337, 375, 382],
       [300, 378, 375, 453],
       [241, 118, 322, 199],
       [163, 174, 232, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/69.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266, 282, 278, 294],
       [331, 388, 376, 433],
       [290, 140, 317, 167],
       [193, 187, 220, 214],
       [166, 192, 217, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/70.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/71.jpg', 'flipped': True, 'width': 600, 'boxes': array([[346, 392, 382, 428],
       [377, 167, 431, 221],
       [204, 194, 222, 212],
       [206, 190, 224, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/72.jpg', 'flipped': True, 'width': 600, 'boxes': array([[181, 190, 223, 232],
       [205, 187, 226, 208],
       [304, 147, 316, 159],
       [358, 161, 436, 239],
       [339, 385, 384, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/73.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/74.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/75.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/76.jpg', 'flipped': True, 'width': 600, 'boxes': array([[346, 392, 382, 428],
       [377, 167, 431, 221],
       [204, 194, 222, 212],
       [206, 190, 224, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/77.jpg', 'flipped': True, 'width': 600, 'boxes': array([[181, 190, 223, 232],
       [205, 187, 226, 208],
       [304, 147, 316, 159],
       [358, 161, 436, 239],
       [339, 385, 384, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/78.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/79.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/80.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/81.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332, 335, 380, 383],
       [242, 118, 332, 208],
       [ 64, 127, 253, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/82.jpg', 'flipped': True, 'width': 600, 'boxes': array([[181, 190, 223, 232],
       [205, 187, 226, 208],
       [304, 147, 316, 159],
       [358, 161, 436, 239],
       [339, 385, 384, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/83.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/84.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/85.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/86.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332, 335, 380, 383],
       [242, 118, 332, 208],
       [ 64, 127, 253, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/87.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/88.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/89.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/90.jpg', 'flipped': True, 'width': 600, 'boxes': array([[393, 170, 429, 206],
       [355, 397, 376, 418]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/91.jpg', 'flipped': True, 'width': 600, 'boxes': array([[346, 392, 382, 428],
       [377, 167, 431, 221],
       [204, 194, 222, 212],
       [206, 190, 224, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/92.jpg', 'flipped': True, 'width': 600, 'boxes': array([[181, 190, 223, 232],
       [205, 187, 226, 208],
       [304, 147, 316, 159],
       [358, 161, 436, 239],
       [339, 385, 384, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/93.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/94.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/95.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/96.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 400, 375, 412]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/97.jpg', 'flipped': True, 'width': 600, 'boxes': array([[355, 397, 376, 418],
       [393, 170, 429, 206]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/98.jpg', 'flipped': True, 'width': 600, 'boxes': array([[346, 392, 382, 428],
       [377, 167, 431, 221],
       [204, 194, 222, 212],
       [206, 190, 224, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/99.jpg', 'flipped': True, 'width': 600, 'boxes': array([[181, 190, 223, 232],
       [205, 187, 226, 208],
       [304, 147, 316, 159],
       [358, 161, 436, 239],
       [339, 385, 384, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/100.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/101.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/103.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/104.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/105.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/106.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332, 335, 380, 383],
       [242, 118, 332, 208],
       [ 64, 127, 253, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/107.jpg', 'flipped': True, 'width': 600, 'boxes': array([[213, 196, 225, 208],
       [424, 172, 451, 199]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/108.jpg', 'flipped': True, 'width': 600, 'boxes': array([[370, 398, 385, 413],
       [414, 166, 444, 196],
       [205, 186, 235, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/109.jpg', 'flipped': True, 'width': 600, 'boxes': array([[362, 394, 392, 424],
       [408, 158, 447, 197],
       [310, 141, 328, 159],
       [210, 184, 237, 211],
       [177, 167, 252, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/110.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/111.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/112.jpg', 'flipped': True, 'width': 600, 'boxes': array([[362, 394, 392, 424],
       [408, 158, 447, 197],
       [310, 141, 328, 159],
       [210, 184, 237, 211],
       [177, 167, 252, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/113.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/114.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/115.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 333, 383, 360],
       [323, 364, 425, 466],
       [324, 102, 486, 264],
       [283, 109, 364, 190],
       [147, 145, 279, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/116.jpg', 'flipped': True, 'width': 600, 'boxes': array([[362, 394, 392, 424],
       [408, 158, 447, 197],
       [310, 141, 328, 159],
       [210, 184, 237, 211],
       [177, 167, 252, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/117.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/118.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/119.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 333, 383, 360],
       [323, 364, 425, 466],
       [324, 102, 486, 264],
       [283, 109, 364, 190],
       [147, 145, 279, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/120.jpg', 'flipped': True, 'width': 600, 'boxes': array([[273,  97, 375, 199],
       [348, 326, 390, 368]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/121.jpg', 'flipped': True, 'width': 600, 'boxes': array([[431, 180, 443, 192]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/122.jpg', 'flipped': True, 'width': 600, 'boxes': array([[424, 172, 451, 199],
       [213, 196, 225, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/123.jpg', 'flipped': True, 'width': 600, 'boxes': array([[370, 398, 385, 413],
       [414, 166, 444, 196],
       [205, 186, 235, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/124.jpg', 'flipped': True, 'width': 600, 'boxes': array([[362, 394, 392, 424],
       [408, 158, 447, 197],
       [310, 141, 328, 159],
       [210, 184, 237, 211],
       [177, 167, 252, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/125.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/126.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/127.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 333, 383, 360],
       [323, 364, 425, 466],
       [324, 102, 486, 264],
       [283, 109, 364, 190],
       [147, 145, 279, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/128.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/129.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/130.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/131.jpg', 'flipped': True, 'width': 600, 'boxes': array([[370, 398, 385, 413],
       [414, 166, 444, 196],
       [205, 186, 235, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/132.jpg', 'flipped': True, 'width': 600, 'boxes': array([[362, 394, 392, 424],
       [408, 158, 447, 197],
       [310, 141, 328, 159],
       [210, 184, 237, 211],
       [177, 167, 252, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/133.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/134.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/135.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 333, 383, 360],
       [323, 364, 425, 466],
       [324, 102, 486, 264],
       [283, 109, 364, 190],
       [147, 145, 279, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/136.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/137.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 333, 383, 360],
       [323, 364, 425, 466],
       [324, 102, 486, 264],
       [283, 109, 364, 190],
       [147, 145, 279, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/138.jpg', 'flipped': True, 'width': 600, 'boxes': array([[348, 326, 390, 368],
       [273,  97, 375, 199]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/139.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/140.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/141.jpg', 'flipped': True, 'width': 600, 'boxes': array([[407, 158, 431, 182],
       [359, 392, 371, 404],
       [193, 185, 214, 206],
       [203, 179, 224, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/142.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/143.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/144.jpg', 'flipped': True, 'width': 600, 'boxes': array([[407, 158, 431, 182],
       [359, 392, 371, 404],
       [193, 185, 214, 206],
       [203, 179, 224, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/145.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/146.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/147.jpg', 'flipped': True, 'width': 600, 'boxes': array([[260, 109, 314, 163],
       [337,  99, 448, 210],
       [114, 128, 246, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/148.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 85, 105, 265, 285],
       [320,  95, 452, 227]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/149.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 76,  96, 274, 294],
       [289,  88, 448, 247]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/150.jpg', 'flipped': True, 'width': 600, 'boxes': array([[407, 158, 431, 182],
       [359, 392, 371, 404],
       [193, 185, 214, 206],
       [203, 179, 224, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/151.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/152.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/153.jpg', 'flipped': True, 'width': 600, 'boxes': array([[260, 109, 314, 163],
       [337,  99, 448, 210],
       [114, 128, 246, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/154.jpg', 'flipped': True, 'width': 600, 'boxes': array([[320,  95, 452, 227],
       [ 85, 105, 265, 285]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/155.jpg', 'flipped': True, 'width': 600, 'boxes': array([[289,  88, 448, 247],
       [ 76,  96, 274, 294]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/156.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/157.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/158.jpg', 'flipped': True, 'width': 600, 'boxes': array([[260, 109, 314, 163],
       [337,  99, 448, 210],
       [114, 128, 246, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/159.jpg', 'flipped': True, 'width': 600, 'boxes': array([[407, 158, 431, 182],
       [359, 392, 371, 404],
       [193, 185, 214, 206],
       [203, 179, 224, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/160.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/161.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/162.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/163.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/164.jpg', 'flipped': True, 'width': 600, 'boxes': array([[211, 187, 223, 199]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/165.jpg', 'flipped': True, 'width': 600, 'boxes': array([[199, 175, 226, 202]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/166.jpg', 'flipped': True, 'width': 600, 'boxes': array([[183, 166, 225, 208]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/167.jpg', 'flipped': True, 'width': 600, 'boxes': array([[159, 154, 228, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/168.jpg', 'flipped': True, 'width': 600, 'boxes': array([[141, 147, 228, 234]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/169.jpg', 'flipped': True, 'width': 600, 'boxes': array([[119, 134, 230, 245]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/170.jpg', 'flipped': True, 'width': 600, 'boxes': array([[102, 122, 234, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/171.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 83, 102, 254, 273]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/172.jpg', 'flipped': True, 'width': 600, 'boxes': array([[209, 196, 221, 208]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/173.jpg', 'flipped': True, 'width': 600, 'boxes': array([[192, 195, 228, 231],
       [207, 199, 222, 214]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/174.jpg', 'flipped': True, 'width': 600, 'boxes': array([[307, 151, 316, 160],
       [201, 196, 222, 217],
       [161, 162, 254, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/175.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 142, 324, 175],
       [206, 191, 224, 209],
       [171, 190, 234, 253],
       [121, 149, 271, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/176.jpg', 'flipped': True, 'width': 600, 'boxes': array([[268, 148, 322, 202],
       [186, 193, 225, 232],
       [152, 176, 263, 287],
       [ 86, 123, 308, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/177.jpg', 'flipped': True, 'width': 600, 'boxes': array([[207, 199, 222, 214],
       [192, 195, 228, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/178.jpg', 'flipped': True, 'width': 600, 'boxes': array([[307, 151, 316, 160],
       [201, 196, 222, 217],
       [161, 162, 254, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/179.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 142, 324, 175],
       [206, 191, 224, 209],
       [171, 190, 234, 253],
       [121, 149, 271, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/180.jpg', 'flipped': True, 'width': 600, 'boxes': array([[268, 148, 322, 202],
       [186, 193, 225, 232],
       [152, 176, 263, 287],
       [ 86, 123, 308, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/181.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 142, 324, 175],
       [206, 191, 224, 209],
       [171, 190, 234, 253],
       [121, 149, 271, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/182.jpg', 'flipped': True, 'width': 600, 'boxes': array([[268, 148, 322, 202],
       [186, 193, 225, 232],
       [152, 176, 263, 287],
       [ 86, 123, 308, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/183.jpg', 'flipped': True, 'width': 600, 'boxes': array([[307, 151, 316, 160],
       [201, 196, 222, 217],
       [161, 162, 254, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/184.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 142, 324, 175],
       [206, 191, 224, 209],
       [171, 190, 234, 253],
       [121, 149, 271, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/185.jpg', 'flipped': True, 'width': 600, 'boxes': array([[268, 148, 322, 202],
       [186, 193, 225, 232],
       [152, 176, 263, 287],
       [ 86, 123, 308, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/186.jpg', 'flipped': True, 'width': 600, 'boxes': array([[254, 157, 320, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/187.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/188.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/189.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/190.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/191.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/192.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/193.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/194.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/195.jpg', 'flipped': True, 'width': 600, 'boxes': array([[200, 194, 227, 221],
       [176, 196, 242, 262]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/196.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/197.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/198.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/199.jpg', 'flipped': True, 'width': 600, 'boxes': array([[214, 196, 220, 202]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/200.jpg', 'flipped': True, 'width': 600, 'boxes': array([[195, 197, 231, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/201.jpg', 'flipped': True, 'width': 600, 'boxes': array([[176, 196, 242, 262],
       [200, 194, 227, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/202.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/203.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/204.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/205.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/206.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/207.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/208.jpg', 'flipped': True, 'width': 600, 'boxes': array([[256, 140, 346, 230]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/209.jpg', 'flipped': True, 'width': 600, 'boxes': array([[251, 135, 350, 234]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/210.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/211.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/212.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/213.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/214.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/215.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/216.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/217.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/218.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/219.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/220.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/221.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/222.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/223.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/224.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/225.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/226.jpg', 'flipped': True, 'width': 600, 'boxes': array([[309, 149, 321, 161],
       [217, 197, 232, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/227.jpg', 'flipped': True, 'width': 600, 'boxes': array([[297, 140, 333, 176]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/228.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/229.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/230.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/231.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353,  46, 413, 106],
       [ 95, 109, 179, 193],
       [170, 174, 269, 273],
       [268, 121, 370, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/232.jpg', 'flipped': True, 'width': 600, 'boxes': array([[259, 115, 379, 235],
       [162, 173, 273, 284]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/233.jpg', 'flipped': True, 'width': 600, 'boxes': array([[253, 111, 385, 243]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/234.jpg', 'flipped': True, 'width': 600, 'boxes': array([[246, 103, 393, 250]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/235.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 186, 374, 204]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/236.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/237.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/238.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/239.jpg', 'flipped': True, 'width': 600, 'boxes': array([[217, 197, 232, 212],
       [309, 149, 321, 161]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/240.jpg', 'flipped': True, 'width': 600, 'boxes': array([[212, 193, 239, 220]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/241.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/242.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/243.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/244.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353,  46, 413, 106],
       [ 95, 109, 179, 193],
       [170, 174, 269, 273],
       [268, 121, 370, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/245.jpg', 'flipped': True, 'width': 600, 'boxes': array([[162, 173, 273, 284],
       [259, 115, 379, 235]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/246.jpg', 'flipped': True, 'width': 600, 'boxes': array([[161, 167, 191, 197]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/247.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/248.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/249.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/250.jpg', 'flipped': True, 'width': 600, 'boxes': array([[121, 124, 154, 157]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/251.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/252.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/253.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/254.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353,  46, 413, 106],
       [ 95, 109, 179, 193],
       [170, 174, 269, 273],
       [268, 121, 370, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/255.jpg', 'flipped': True, 'width': 600, 'boxes': array([[414,  83, 432, 101]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/256.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/257.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/258.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/259.jpg', 'flipped': True, 'width': 600, 'boxes': array([[372,  58, 396,  82]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/260.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/261.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/262.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/263.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353,  46, 413, 106],
       [ 95, 109, 179, 193],
       [170, 174, 269, 273],
       [268, 121, 370, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/264.jpg', 'flipped': True, 'width': 600, 'boxes': array([[370, 324, 385, 339]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/265.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/266.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/267.jpg', 'flipped': True, 'width': 600, 'boxes': array([[333, 337, 354, 358]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/268.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/269.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/270.jpg', 'flipped': True, 'width': 600, 'boxes': array([[304, 141, 322, 159]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/271.jpg', 'flipped': True, 'width': 600, 'boxes': array([[295, 132, 325, 162]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/272.jpg', 'flipped': True, 'width': 600, 'boxes': array([[285, 121, 330, 166]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/273.jpg', 'flipped': True, 'width': 600, 'boxes': array([[273, 112, 336, 175]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/274.jpg', 'flipped': True, 'width': 600, 'boxes': array([[263, 104, 338, 179]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/275.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/276.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/277.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/278.jpg', 'flipped': True, 'width': 600, 'boxes': array([[336, 180, 390, 234],
       [264, 134, 342, 212],
       [ 64, 108, 160, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/279.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/280.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/281.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/282.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/283.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/284.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/285.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/286.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/287.jpg', 'flipped': True, 'width': 600, 'boxes': array([[336, 180, 390, 234],
       [264, 134, 342, 212],
       [ 64, 108, 160, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/288.jpg', 'flipped': True, 'width': 600, 'boxes': array([[234, 120, 351, 237]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/289.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/290.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/291.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/292.jpg', 'flipped': True, 'width': 600, 'boxes': array([[336, 180, 390, 234],
       [264, 134, 342, 212],
       [ 64, 108, 160, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/293.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/294.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/295.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/296.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/297.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/298.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/299.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/300.jpg', 'flipped': True, 'width': 600, 'boxes': array([[134, 126, 146, 138]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/301.jpg', 'flipped': True, 'width': 600, 'boxes': array([[127, 108, 160, 141],
       [302, 120, 335, 153]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/302.jpg', 'flipped': True, 'width': 600, 'boxes': array([[122,  91, 179, 148],
       [284,  98, 344, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/303.jpg', 'flipped': True, 'width': 600, 'boxes': array([[121,  70, 196, 145],
       [266,  71, 353, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/304.jpg', 'flipped': True, 'width': 600, 'boxes': array([[302, 120, 335, 153],
       [127, 108, 160, 141]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/305.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284,  98, 344, 158],
       [122,  91, 179, 148]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/306.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266,  71, 353, 158],
       [121,  70, 196, 145]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/307.jpg', 'flipped': True, 'width': 600, 'boxes': array([[212, 194, 221, 203],
       [422, 192, 431, 201],
       [310, 152, 313, 155]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/308.jpg', 'flipped': True, 'width': 600, 'boxes': array([[294, 146, 312, 164],
       [196, 191, 217, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/309.jpg', 'flipped': True, 'width': 600, 'boxes': array([[192, 191, 216, 215],
       [399, 177, 438, 216],
       [279, 140, 309, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/310.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 176, 436, 230],
       [273, 136, 309, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/311.jpg', 'flipped': True, 'width': 600, 'boxes': array([[257, 135, 305, 183],
       [392,  96, 413, 117]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/312.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  89, 418, 128],
       [405,  52, 429,  76],
       [243, 132, 312, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/313.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363,  87, 420, 144],
       [391,  50, 430,  89],
       [234, 130, 315, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/314.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  93, 419, 156],
       [381,  48, 432,  99],
       [225, 127, 324, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/315.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  89, 418, 128],
       [405,  52, 429,  76],
       [243, 132, 312, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/316.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363,  87, 420, 144],
       [391,  50, 430,  89],
       [234, 130, 315, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/317.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  93, 419, 156],
       [381,  48, 432,  99],
       [225, 127, 324, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/318.jpg', 'flipped': True, 'width': 600, 'boxes': array([[392,  96, 413, 117],
       [257, 135, 305, 183]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/319.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  89, 418, 128],
       [405,  52, 429,  76],
       [243, 132, 312, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/320.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363,  87, 420, 144],
       [391,  50, 430,  89],
       [234, 130, 315, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/321.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  93, 419, 156],
       [381,  48, 432,  99],
       [225, 127, 324, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/322.jpg', 'flipped': True, 'width': 600, 'boxes': array([[422, 192, 431, 201],
       [212, 194, 221, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/323.jpg', 'flipped': True, 'width': 600, 'boxes': array([[196, 191, 217, 212],
       [409, 180, 433, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/324.jpg', 'flipped': True, 'width': 600, 'boxes': array([[192, 191, 216, 215],
       [399, 177, 438, 216],
       [279, 140, 309, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/325.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 176, 436, 230],
       [273, 136, 309, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/326.jpg', 'flipped': True, 'width': 600, 'boxes': array([[422, 192, 431, 201],
       [212, 194, 221, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/327.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409, 180, 433, 204],
       [196, 191, 217, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/328.jpg', 'flipped': True, 'width': 600, 'boxes': array([[192, 191, 216, 215],
       [399, 177, 438, 216],
       [279, 140, 309, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/329.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/330.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/331.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/332.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/333.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 86,  93, 197, 204],
       [327, 183, 411, 267],
       [250, 100, 376, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/334.jpg', 'flipped': True, 'width': 600, 'boxes': array([[245, 101, 377, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/335.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/336.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/337.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/338.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/339.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 86,  93, 197, 204],
       [327, 183, 411, 267],
       [250, 100, 376, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/340.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/341.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/342.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/343.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/344.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/345.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/346.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/347.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/348.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/349.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/350.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 86,  93, 197, 204],
       [327, 183, 411, 267],
       [250, 100, 376, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/351.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/352.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/353.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/354.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/355.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/356.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/357.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/358.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/359.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/360.jpg', 'flipped': True, 'width': 600, 'boxes': array([[308, 144, 320, 156]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/361.jpg', 'flipped': True, 'width': 600, 'boxes': array([[381, 334, 393, 346],
       [351, 175, 378, 202],
       [114, 120, 147, 153],
       [159, 167, 180, 188],
       [293, 133, 326, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/362.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371, 323, 404, 356],
       [348, 172, 384, 208],
       [ 99, 115, 153, 169],
       [144, 158, 192, 206],
       [284, 128, 335, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/363.jpg', 'flipped': True, 'width': 600, 'boxes': array([[361, 317, 418, 374],
       [333, 164, 396, 227],
       [ 90, 116, 165, 191],
       [152, 163, 215, 226],
       [270, 121, 345, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/364.jpg', 'flipped': True, 'width': 600, 'boxes': array([[250, 108, 358, 216],
       [349, 315, 433, 399]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/365.jpg', 'flipped': True, 'width': 600, 'boxes': array([[381, 334, 393, 346],
       [351, 175, 378, 202],
       [114, 120, 147, 153],
       [159, 167, 180, 188],
       [293, 133, 326, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/366.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371, 323, 404, 356],
       [348, 172, 384, 208],
       [ 99, 115, 153, 169],
       [144, 158, 192, 206],
       [284, 128, 335, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/367.jpg', 'flipped': True, 'width': 600, 'boxes': array([[361, 317, 418, 374],
       [333, 164, 396, 227],
       [ 90, 116, 165, 191],
       [152, 163, 215, 226],
       [270, 121, 345, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/368.jpg', 'flipped': True, 'width': 600, 'boxes': array([[381, 334, 393, 346],
       [351, 175, 378, 202],
       [114, 120, 147, 153],
       [159, 167, 180, 188],
       [293, 133, 326, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/369.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371, 323, 404, 356],
       [348, 172, 384, 208],
       [ 99, 115, 153, 169],
       [144, 158, 192, 206],
       [284, 128, 335, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/370.jpg', 'flipped': True, 'width': 600, 'boxes': array([[361, 317, 418, 374],
       [333, 164, 396, 227],
       [ 90, 116, 165, 191],
       [152, 163, 215, 226],
       [270, 121, 345, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/371.jpg', 'flipped': True, 'width': 600, 'boxes': array([[381, 334, 393, 346],
       [351, 175, 378, 202],
       [114, 120, 147, 153],
       [159, 167, 180, 188],
       [293, 133, 326, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/372.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371, 323, 404, 356],
       [348, 172, 384, 208],
       [ 99, 115, 153, 169],
       [144, 158, 192, 206],
       [284, 128, 335, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/373.jpg', 'flipped': True, 'width': 600, 'boxes': array([[361, 317, 418, 374],
       [333, 164, 396, 227],
       [ 90, 116, 165, 191],
       [152, 163, 215, 226],
       [270, 121, 345, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/374.jpg', 'flipped': True, 'width': 600, 'boxes': array([[381, 334, 393, 346],
       [351, 175, 378, 202],
       [114, 120, 147, 153],
       [159, 167, 180, 188],
       [293, 133, 326, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/375.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371, 323, 404, 356],
       [348, 172, 384, 208],
       [ 99, 115, 153, 169],
       [144, 158, 192, 206],
       [284, 128, 335, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/376.jpg', 'flipped': True, 'width': 600, 'boxes': array([[361, 317, 418, 374],
       [333, 164, 396, 227],
       [ 90, 116, 165, 191],
       [152, 163, 215, 226],
       [270, 121, 345, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/377.jpg', 'flipped': True, 'width': 600, 'boxes': array([[349, 315, 433, 399],
       [250, 108, 358, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/378.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 419, 270, 431],
       [125, 136, 143, 154],
       [168, 181, 180, 193],
       [386, 339, 395, 348],
       [306, 148, 324, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/379.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/380.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/381.jpg', 'flipped': True, 'width': 600, 'boxes': array([[103, 137, 169, 203],
       [147, 191, 207, 251],
       [346, 348, 430, 432],
       [282, 153, 360, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/382.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/383.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/384.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 419, 270, 431],
       [125, 136, 143, 154],
       [168, 181, 180, 193],
       [386, 339, 395, 348],
       [306, 148, 324, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/385.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/386.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/387.jpg', 'flipped': True, 'width': 600, 'boxes': array([[103, 137, 169, 203],
       [147, 191, 207, 251],
       [346, 348, 430, 432],
       [282, 153, 360, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/388.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332, 353, 437, 458]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/389.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 419, 270, 431],
       [125, 136, 143, 154],
       [168, 181, 180, 193],
       [386, 339, 395, 348],
       [306, 148, 324, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/390.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/391.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/392.jpg', 'flipped': True, 'width': 600, 'boxes': array([[103, 137, 169, 203],
       [147, 191, 207, 251],
       [346, 348, 430, 432],
       [282, 153, 360, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/393.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 419, 270, 431],
       [125, 136, 143, 154],
       [168, 181, 180, 193],
       [386, 339, 395, 348],
       [306, 148, 324, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/394.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/395.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/396.jpg', 'flipped': True, 'width': 600, 'boxes': array([[103, 137, 169, 203],
       [147, 191, 207, 251],
       [346, 348, 430, 432],
       [282, 153, 360, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/397.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/398.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 419, 270, 431],
       [125, 136, 143, 154],
       [168, 181, 180, 193],
       [386, 339, 395, 348],
       [306, 148, 324, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/399.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/400.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/401.jpg', 'flipped': True, 'width': 600, 'boxes': array([[308, 142, 320, 154]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/402.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/403.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/404.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/405.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332,  35, 398, 101],
       [376,  56, 451, 131],
       [105,  95, 180, 170],
       [158, 144, 233, 219],
       [269,  91, 371, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/406.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/407.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/408.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/409.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/410.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/411.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/412.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/413.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/414.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332,  35, 398, 101],
       [376,  56, 451, 131],
       [105,  95, 180, 170],
       [158, 144, 233, 219],
       [269,  91, 371, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/415.jpg', 'flipped': True, 'width': 600, 'boxes': array([[318,  31, 405, 118],
       [357,  47, 465, 155],
       [153, 138, 246, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/416.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/417.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/418.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/419.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332,  35, 398, 101],
       [376,  56, 451, 131],
       [105,  95, 180, 170],
       [158, 144, 233, 219],
       [269,  91, 371, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/420.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/421.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/422.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/423.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/424.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/425.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/426.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332,  35, 398, 101],
       [376,  56, 451, 131],
       [105,  95, 180, 170],
       [158, 144, 233, 219],
       [269,  91, 371, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/427.jpg', 'flipped': True, 'width': 600, 'boxes': array([[318,  31, 405, 118],
       [357,  47, 465, 155],
       [153, 138, 246, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/428.jpg', 'flipped': True, 'width': 600, 'boxes': array([[340,  40, 466, 166]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/429.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/430.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/431.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/432.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332,  35, 398, 101],
       [376,  56, 451, 131],
       [105,  95, 180, 170],
       [158, 144, 233, 219],
       [269,  91, 371, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/433.jpg', 'flipped': True, 'width': 600, 'boxes': array([[318,  31, 405, 118],
       [357,  47, 465, 155],
       [153, 138, 246, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/434.jpg', 'flipped': True, 'width': 600, 'boxes': array([[293, 120, 323, 150],
       [378, 322, 393, 337]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/435.jpg', 'flipped': True, 'width': 600, 'boxes': array([[270, 100, 327, 157],
       [358, 297, 403, 342]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/436.jpg', 'flipped': True, 'width': 600, 'boxes': array([[378, 322, 393, 337],
       [293, 120, 323, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/437.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 297, 403, 342],
       [270, 100, 327, 157]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/438.jpg', 'flipped': True, 'width': 600, 'boxes': array([[309, 142, 324, 157],
       [363, 186, 378, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/439.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 335, 397, 350],
       [360, 185, 384, 209],
       [306, 141, 330, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/440.jpg', 'flipped': True, 'width': 600, 'boxes': array([[374, 332, 404, 362],
       [357, 184, 393, 220],
       [300, 134, 339, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/441.jpg', 'flipped': True, 'width': 600, 'boxes': array([[369, 332, 405, 368],
       [352, 178, 403, 229],
       [292, 130, 346, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/442.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 325, 417, 379],
       [347, 175, 413, 241],
       [290, 130, 350, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/443.jpg', 'flipped': True, 'width': 600, 'boxes': array([[287, 128, 359, 200]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/444.jpg', 'flipped': True, 'width': 600, 'boxes': array([[287, 125, 371, 209]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/445.jpg', 'flipped': True, 'width': 600, 'boxes': array([[276, 118, 381, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/446.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 186, 378, 201],
       [309, 142, 324, 157]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/447.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 335, 397, 350],
       [360, 185, 384, 209],
       [306, 141, 330, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/448.jpg', 'flipped': True, 'width': 600, 'boxes': array([[374, 332, 404, 362],
       [357, 184, 393, 220],
       [300, 134, 339, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/449.jpg', 'flipped': True, 'width': 600, 'boxes': array([[369, 332, 405, 368],
       [352, 178, 403, 229],
       [292, 130, 346, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/450.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 325, 417, 379],
       [347, 175, 413, 241],
       [290, 130, 350, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/451.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 335, 397, 350],
       [360, 185, 384, 209],
       [306, 141, 330, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/452.jpg', 'flipped': True, 'width': 600, 'boxes': array([[374, 332, 404, 362],
       [357, 184, 393, 220],
       [300, 134, 339, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/453.jpg', 'flipped': True, 'width': 600, 'boxes': array([[369, 332, 405, 368],
       [352, 178, 403, 229],
       [292, 130, 346, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/454.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 325, 417, 379],
       [347, 175, 413, 241],
       [290, 130, 350, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/455.jpg', 'flipped': True, 'width': 600, 'boxes': array([[170, 168, 206, 204],
       [386, 336, 398, 348],
       [370, 191, 379, 200],
       [310, 142, 331, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/456.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 166, 217, 214],
       [384, 333, 411, 360],
       [372, 192, 390, 210],
       [309, 139, 342, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/457.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 161, 235, 227],
       [387, 336, 420, 369],
       [370, 189, 406, 225],
       [304, 134, 355, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/458.jpg', 'flipped': True, 'width': 600, 'boxes': array([[167, 160, 242, 235],
       [383, 332, 437, 386],
       [376, 194, 409, 227],
       [299, 130, 365, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/459.jpg', 'flipped': True, 'width': 600, 'boxes': array([[295, 125, 376, 206],
       [386, 338, 446, 398]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/460.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 120, 384, 213],
       [386, 337, 458, 409]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/461.jpg', 'flipped': True, 'width': 600, 'boxes': array([[287, 115, 392, 220]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/462.jpg', 'flipped': True, 'width': 600, 'boxes': array([[276, 109, 402, 235]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/463.jpg', 'flipped': True, 'width': 600, 'boxes': array([[257,  95, 416, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/464.jpg', 'flipped': True, 'width': 600, 'boxes': array([[170, 168, 206, 204],
       [386, 336, 398, 348],
       [370, 191, 379, 200],
       [310, 142, 331, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/465.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 166, 217, 214],
       [384, 333, 411, 360],
       [372, 192, 390, 210],
       [309, 139, 342, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/466.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 161, 235, 227],
       [387, 336, 420, 369],
       [370, 189, 406, 225],
       [304, 134, 355, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/467.jpg', 'flipped': True, 'width': 600, 'boxes': array([[167, 160, 242, 235],
       [383, 332, 437, 386],
       [376, 194, 409, 227],
       [299, 130, 365, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/468.jpg', 'flipped': True, 'width': 600, 'boxes': array([[170, 168, 206, 204],
       [386, 336, 398, 348],
       [370, 191, 379, 200],
       [310, 142, 331, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/469.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 166, 217, 214],
       [384, 333, 411, 360],
       [372, 192, 390, 210],
       [309, 139, 342, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/470.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 161, 235, 227],
       [387, 336, 420, 369],
       [370, 189, 406, 225],
       [304, 134, 355, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/471.jpg', 'flipped': True, 'width': 600, 'boxes': array([[167, 160, 242, 235],
       [383, 332, 437, 386],
       [376, 194, 409, 227],
       [299, 130, 365, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/472.jpg', 'flipped': True, 'width': 600, 'boxes': array([[386, 338, 446, 398],
       [295, 125, 376, 206]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/473.jpg', 'flipped': True, 'width': 600, 'boxes': array([[386, 337, 458, 409],
       [291, 120, 384, 213]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/474.jpg', 'flipped': True, 'width': 600, 'boxes': array([[171, 169, 192, 190]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/475.jpg', 'flipped': True, 'width': 600, 'boxes': array([[170, 168, 206, 204],
       [386, 336, 398, 348],
       [370, 191, 379, 200],
       [310, 142, 331, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/476.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 166, 217, 214],
       [384, 333, 411, 360],
       [372, 192, 390, 210],
       [309, 139, 342, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/477.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 161, 235, 227],
       [387, 336, 420, 369],
       [370, 189, 406, 225],
       [304, 134, 355, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/478.jpg', 'flipped': True, 'width': 600, 'boxes': array([[167, 160, 242, 235],
       [383, 332, 437, 386],
       [376, 194, 409, 227],
       [299, 130, 365, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/479.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 186, 372, 195],
       [172, 173, 178, 179],
       [307, 138, 325, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/480.jpg', 'flipped': True, 'width': 600, 'boxes': array([[263, 305, 269, 311],
       [355, 184, 379, 208],
       [168, 170, 186, 188],
       [384, 330, 402, 348],
       [300, 133, 330, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/481.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 299, 279, 320],
       [347, 183, 383, 219],
       [158, 162, 194, 198],
       [380, 328, 407, 355],
       [287, 125, 341, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/482.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 296, 288, 332],
       [342, 183, 390, 231],
       [150, 155, 204, 209],
       [377, 327, 416, 366],
       [275, 114, 350, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/483.jpg', 'flipped': True, 'width': 600, 'boxes': array([[242, 288, 299, 345],
       [139, 144, 214, 219],
       [369, 325, 420, 376],
       [269, 113, 356, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/484.jpg', 'flipped': True, 'width': 600, 'boxes': array([[256, 105, 367, 216]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/485.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 101, 375, 227]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/486.jpg', 'flipped': True, 'width': 600, 'boxes': array([[244,  95, 382, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/487.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240,  93, 387, 240]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/488.jpg', 'flipped': True, 'width': 600, 'boxes': array([[236,  90, 395, 249]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/489.jpg', 'flipped': True, 'width': 600, 'boxes': array([[236,  92, 398, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/490.jpg', 'flipped': True, 'width': 600, 'boxes': array([[230,  86, 404, 260]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/491.jpg', 'flipped': True, 'width': 600, 'boxes': array([[263, 305, 269, 311],
       [355, 184, 379, 208],
       [168, 170, 186, 188],
       [384, 330, 402, 348],
       [300, 133, 330, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/492.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 299, 279, 320],
       [347, 183, 383, 219],
       [158, 162, 194, 198],
       [380, 328, 407, 355],
       [287, 125, 341, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/493.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 296, 288, 332],
       [342, 183, 390, 231],
       [150, 155, 204, 209],
       [377, 327, 416, 366],
       [275, 114, 350, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/494.jpg', 'flipped': True, 'width': 600, 'boxes': array([[242, 288, 299, 345],
       [139, 144, 214, 219],
       [369, 325, 420, 376],
       [269, 113, 356, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/495.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 186, 372, 195],
       [172, 173, 178, 179],
       [307, 138, 325, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/496.jpg', 'flipped': True, 'width': 600, 'boxes': array([[263, 305, 269, 311],
       [355, 184, 379, 208],
       [168, 170, 186, 188],
       [384, 330, 402, 348],
       [300, 133, 330, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/497.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 299, 279, 320],
       [347, 183, 383, 219],
       [158, 162, 194, 198],
       [380, 328, 407, 355],
       [287, 125, 341, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/498.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 296, 288, 332],
       [342, 183, 390, 231],
       [150, 155, 204, 209],
       [377, 327, 416, 366],
       [275, 114, 350, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/499.jpg', 'flipped': True, 'width': 600, 'boxes': array([[242, 288, 299, 345],
       [139, 144, 214, 219],
       [369, 325, 420, 376],
       [269, 113, 356, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/500.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 186, 372, 195],
       [172, 173, 178, 179],
       [307, 138, 325, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/501.jpg', 'flipped': True, 'width': 600, 'boxes': array([[263, 305, 269, 311],
       [355, 184, 379, 208],
       [168, 170, 186, 188],
       [384, 330, 402, 348],
       [300, 133, 330, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
Filtered 0 roidb entries: 1000 -> 1000
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0327 09:29:46.905964 31190 solver.cpp:48] Initializing solver from parameters: 
train_net: "/home/sgabriel/py-faster-rcnn/models/pascal_voc/ZF/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 50000
snapshot: 0
snapshot_prefix: "zf_faster_rcnn"
average_loss: 100
iter_size: 2
I0327 09:29:46.906008 31190 solver.cpp:81] Creating training net from train_net file: /home/sgabriel/py-faster-rcnn/models/pascal_voc/ZF/faster_rcnn_end2end/train.prototxt
I0327 09:29:46.925552 31190 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "bbox_loss"
  loss_weight: 1
}
I0327 09:29:46.925981 31190 layer_factory.hpp:77] Creating layer input-data
I0327 09:29:47.275079 31190 net.cpp:106] Creating Layer input-data
I0327 09:29:47.275108 31190 net.cpp:411] input-data -> data
I0327 09:29:47.275130 31190 net.cpp:411] input-data -> im_info
I0327 09:29:47.275136 31190 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0327 09:29:47.332088 31190 net.cpp:150] Setting up input-data
I0327 09:29:47.332118 31190 net.cpp:157] Top shape: 1 3 600 600 (1080000)
I0327 09:29:47.332126 31190 net.cpp:157] Top shape: 1 3 (3)
I0327 09:29:47.332134 31190 net.cpp:157] Top shape: 1 4 (4)
I0327 09:29:47.332139 31190 net.cpp:165] Memory required for data: 4320028
I0327 09:29:47.332152 31190 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0327 09:29:47.333510 31190 net.cpp:106] Creating Layer data_input-data_0_split
I0327 09:29:47.333523 31190 net.cpp:454] data_input-data_0_split <- data
I0327 09:29:47.333539 31190 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0327 09:29:47.333554 31190 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0327 09:29:47.333621 31190 net.cpp:150] Setting up data_input-data_0_split
I0327 09:29:47.333631 31190 net.cpp:157] Top shape: 1 3 600 600 (1080000)
I0327 09:29:47.333639 31190 net.cpp:157] Top shape: 1 3 600 600 (1080000)
I0327 09:29:47.333645 31190 net.cpp:165] Memory required for data: 12960028
I0327 09:29:47.333652 31190 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0327 09:29:47.333662 31190 net.cpp:106] Creating Layer im_info_input-data_1_split
I0327 09:29:47.333669 31190 net.cpp:454] im_info_input-data_1_split <- im_info
I0327 09:29:47.333678 31190 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0327 09:29:47.333688 31190 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0327 09:29:47.333736 31190 net.cpp:150] Setting up im_info_input-data_1_split
I0327 09:29:47.333745 31190 net.cpp:157] Top shape: 1 3 (3)
I0327 09:29:47.333751 31190 net.cpp:157] Top shape: 1 3 (3)
I0327 09:29:47.333756 31190 net.cpp:165] Memory required for data: 12960052
I0327 09:29:47.333761 31190 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0327 09:29:47.333768 31190 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0327 09:29:47.333775 31190 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0327 09:29:47.333782 31190 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0327 09:29:47.333791 31190 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0327 09:29:47.333839 31190 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0327 09:29:47.333847 31190 net.cpp:157] Top shape: 1 4 (4)
I0327 09:29:47.333854 31190 net.cpp:157] Top shape: 1 4 (4)
I0327 09:29:47.333859 31190 net.cpp:165] Memory required for data: 12960084
I0327 09:29:47.333864 31190 layer_factory.hpp:77] Creating layer conv1
I0327 09:29:47.333885 31190 net.cpp:106] Creating Layer conv1
I0327 09:29:47.333891 31190 net.cpp:454] conv1 <- data_input-data_0_split_0
I0327 09:29:47.333902 31190 net.cpp:411] conv1 -> conv1
I0327 09:29:47.335971 31190 net.cpp:150] Setting up conv1
I0327 09:29:47.335989 31190 net.cpp:157] Top shape: 1 96 300 300 (8640000)
I0327 09:29:47.335995 31190 net.cpp:165] Memory required for data: 47520084
I0327 09:29:47.336026 31190 layer_factory.hpp:77] Creating layer relu1
I0327 09:29:47.336042 31190 net.cpp:106] Creating Layer relu1
I0327 09:29:47.336048 31190 net.cpp:454] relu1 <- conv1
I0327 09:29:47.336058 31190 net.cpp:397] relu1 -> conv1 (in-place)
I0327 09:29:47.336071 31190 net.cpp:150] Setting up relu1
I0327 09:29:47.336079 31190 net.cpp:157] Top shape: 1 96 300 300 (8640000)
I0327 09:29:47.336084 31190 net.cpp:165] Memory required for data: 82080084
I0327 09:29:47.336089 31190 layer_factory.hpp:77] Creating layer norm1
I0327 09:29:47.336099 31190 net.cpp:106] Creating Layer norm1
I0327 09:29:47.336104 31190 net.cpp:454] norm1 <- conv1
I0327 09:29:47.336113 31190 net.cpp:411] norm1 -> norm1
I0327 09:29:47.336269 31190 net.cpp:150] Setting up norm1
I0327 09:29:47.336279 31190 net.cpp:157] Top shape: 1 96 300 300 (8640000)
I0327 09:29:47.336283 31190 net.cpp:165] Memory required for data: 116640084
I0327 09:29:47.336289 31190 layer_factory.hpp:77] Creating layer pool1
I0327 09:29:47.336302 31190 net.cpp:106] Creating Layer pool1
I0327 09:29:47.336308 31190 net.cpp:454] pool1 <- norm1
I0327 09:29:47.336314 31190 net.cpp:411] pool1 -> pool1
I0327 09:29:47.336362 31190 net.cpp:150] Setting up pool1
I0327 09:29:47.336370 31190 net.cpp:157] Top shape: 1 96 151 151 (2188896)
I0327 09:29:47.336374 31190 net.cpp:165] Memory required for data: 125395668
I0327 09:29:47.336380 31190 layer_factory.hpp:77] Creating layer conv2
I0327 09:29:47.336392 31190 net.cpp:106] Creating Layer conv2
I0327 09:29:47.336397 31190 net.cpp:454] conv2 <- pool1
I0327 09:29:47.336405 31190 net.cpp:411] conv2 -> conv2
I0327 09:29:47.338896 31190 net.cpp:150] Setting up conv2
I0327 09:29:47.338913 31190 net.cpp:157] Top shape: 1 256 76 76 (1478656)
I0327 09:29:47.338919 31190 net.cpp:165] Memory required for data: 131310292
I0327 09:29:47.338937 31190 layer_factory.hpp:77] Creating layer relu2
I0327 09:29:47.338953 31190 net.cpp:106] Creating Layer relu2
I0327 09:29:47.338959 31190 net.cpp:454] relu2 <- conv2
I0327 09:29:47.338968 31190 net.cpp:397] relu2 -> conv2 (in-place)
I0327 09:29:47.338979 31190 net.cpp:150] Setting up relu2
I0327 09:29:47.338985 31190 net.cpp:157] Top shape: 1 256 76 76 (1478656)
I0327 09:29:47.338992 31190 net.cpp:165] Memory required for data: 137224916
I0327 09:29:47.338999 31190 layer_factory.hpp:77] Creating layer norm2
I0327 09:29:47.339030 31190 net.cpp:106] Creating Layer norm2
I0327 09:29:47.339037 31190 net.cpp:454] norm2 <- conv2
I0327 09:29:47.339051 31190 net.cpp:411] norm2 -> norm2
I0327 09:29:47.339186 31190 net.cpp:150] Setting up norm2
I0327 09:29:47.339200 31190 net.cpp:157] Top shape: 1 256 76 76 (1478656)
I0327 09:29:47.339208 31190 net.cpp:165] Memory required for data: 143139540
I0327 09:29:47.339216 31190 layer_factory.hpp:77] Creating layer pool2
I0327 09:29:47.339232 31190 net.cpp:106] Creating Layer pool2
I0327 09:29:47.339239 31190 net.cpp:454] pool2 <- norm2
I0327 09:29:47.339251 31190 net.cpp:411] pool2 -> pool2
I0327 09:29:47.339303 31190 net.cpp:150] Setting up pool2
I0327 09:29:47.339315 31190 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0327 09:29:47.339323 31190 net.cpp:165] Memory required for data: 144697044
I0327 09:29:47.339331 31190 layer_factory.hpp:77] Creating layer conv3
I0327 09:29:47.339350 31190 net.cpp:106] Creating Layer conv3
I0327 09:29:47.339357 31190 net.cpp:454] conv3 <- pool2
I0327 09:29:47.339371 31190 net.cpp:411] conv3 -> conv3
I0327 09:29:47.344275 31190 net.cpp:150] Setting up conv3
I0327 09:29:47.344296 31190 net.cpp:157] Top shape: 1 384 39 39 (584064)
I0327 09:29:47.344307 31190 net.cpp:165] Memory required for data: 147033300
I0327 09:29:47.344329 31190 layer_factory.hpp:77] Creating layer relu3
I0327 09:29:47.344347 31190 net.cpp:106] Creating Layer relu3
I0327 09:29:47.344354 31190 net.cpp:454] relu3 <- conv3
I0327 09:29:47.344367 31190 net.cpp:397] relu3 -> conv3 (in-place)
I0327 09:29:47.344380 31190 net.cpp:150] Setting up relu3
I0327 09:29:47.344391 31190 net.cpp:157] Top shape: 1 384 39 39 (584064)
I0327 09:29:47.344398 31190 net.cpp:165] Memory required for data: 149369556
I0327 09:29:47.344406 31190 layer_factory.hpp:77] Creating layer conv4
I0327 09:29:47.344424 31190 net.cpp:106] Creating Layer conv4
I0327 09:29:47.344440 31190 net.cpp:454] conv4 <- conv3
I0327 09:29:47.344454 31190 net.cpp:411] conv4 -> conv4
I0327 09:29:47.349210 31190 net.cpp:150] Setting up conv4
I0327 09:29:47.349230 31190 net.cpp:157] Top shape: 1 384 39 39 (584064)
I0327 09:29:47.349238 31190 net.cpp:165] Memory required for data: 151705812
I0327 09:29:47.349254 31190 layer_factory.hpp:77] Creating layer relu4
I0327 09:29:47.349269 31190 net.cpp:106] Creating Layer relu4
I0327 09:29:47.349277 31190 net.cpp:454] relu4 <- conv4
I0327 09:29:47.349289 31190 net.cpp:397] relu4 -> conv4 (in-place)
I0327 09:29:47.349301 31190 net.cpp:150] Setting up relu4
I0327 09:29:47.349311 31190 net.cpp:157] Top shape: 1 384 39 39 (584064)
I0327 09:29:47.349318 31190 net.cpp:165] Memory required for data: 154042068
I0327 09:29:47.349326 31190 layer_factory.hpp:77] Creating layer conv5
I0327 09:29:47.349351 31190 net.cpp:106] Creating Layer conv5
I0327 09:29:47.349359 31190 net.cpp:454] conv5 <- conv4
I0327 09:29:47.349370 31190 net.cpp:411] conv5 -> conv5
I0327 09:29:47.352641 31190 net.cpp:150] Setting up conv5
I0327 09:29:47.352660 31190 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0327 09:29:47.352669 31190 net.cpp:165] Memory required for data: 155599572
I0327 09:29:47.352697 31190 layer_factory.hpp:77] Creating layer relu5
I0327 09:29:47.352710 31190 net.cpp:106] Creating Layer relu5
I0327 09:29:47.352716 31190 net.cpp:454] relu5 <- conv5
I0327 09:29:47.352728 31190 net.cpp:397] relu5 -> conv5 (in-place)
I0327 09:29:47.352741 31190 net.cpp:150] Setting up relu5
I0327 09:29:47.352751 31190 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0327 09:29:47.352756 31190 net.cpp:165] Memory required for data: 157157076
I0327 09:29:47.352764 31190 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0327 09:29:47.352778 31190 net.cpp:106] Creating Layer conv5_relu5_0_split
I0327 09:29:47.352784 31190 net.cpp:454] conv5_relu5_0_split <- conv5
I0327 09:29:47.352800 31190 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0327 09:29:47.352813 31190 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0327 09:29:47.352862 31190 net.cpp:150] Setting up conv5_relu5_0_split
I0327 09:29:47.352874 31190 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0327 09:29:47.352885 31190 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0327 09:29:47.352890 31190 net.cpp:165] Memory required for data: 160272084
I0327 09:29:47.352898 31190 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0327 09:29:47.352921 31190 net.cpp:106] Creating Layer rpn_conv/3x3
I0327 09:29:47.352928 31190 net.cpp:454] rpn_conv/3x3 <- conv5_relu5_0_split_0
I0327 09:29:47.352941 31190 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0327 09:29:47.368221 31190 net.cpp:150] Setting up rpn_conv/3x3
I0327 09:29:47.368238 31190 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0327 09:29:47.368247 31190 net.cpp:165] Memory required for data: 161829588
I0327 09:29:47.368260 31190 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0327 09:29:47.368273 31190 net.cpp:106] Creating Layer rpn_relu/3x3
I0327 09:29:47.368279 31190 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0327 09:29:47.368291 31190 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0327 09:29:47.368302 31190 net.cpp:150] Setting up rpn_relu/3x3
I0327 09:29:47.368310 31190 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0327 09:29:47.368316 31190 net.cpp:165] Memory required for data: 163387092
I0327 09:29:47.368324 31190 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0327 09:29:47.368335 31190 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0327 09:29:47.368340 31190 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0327 09:29:47.368353 31190 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0327 09:29:47.368365 31190 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0327 09:29:47.368408 31190 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0327 09:29:47.368418 31190 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0327 09:29:47.368432 31190 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0327 09:29:47.368440 31190 net.cpp:165] Memory required for data: 166502100
I0327 09:29:47.368449 31190 layer_factory.hpp:77] Creating layer rpn_cls_score
I0327 09:29:47.368468 31190 net.cpp:106] Creating Layer rpn_cls_score
I0327 09:29:47.368475 31190 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0327 09:29:47.368487 31190 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0327 09:29:47.368890 31190 net.cpp:150] Setting up rpn_cls_score
I0327 09:29:47.368904 31190 net.cpp:157] Top shape: 1 18 39 39 (27378)
I0327 09:29:47.368911 31190 net.cpp:165] Memory required for data: 166611612
I0327 09:29:47.368924 31190 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0327 09:29:47.368934 31190 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0327 09:29:47.368940 31190 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0327 09:29:47.368952 31190 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0327 09:29:47.368963 31190 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0327 09:29:47.369007 31190 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0327 09:29:47.369017 31190 net.cpp:157] Top shape: 1 18 39 39 (27378)
I0327 09:29:47.369027 31190 net.cpp:157] Top shape: 1 18 39 39 (27378)
I0327 09:29:47.369032 31190 net.cpp:165] Memory required for data: 166830636
I0327 09:29:47.369040 31190 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0327 09:29:47.369057 31190 net.cpp:106] Creating Layer rpn_bbox_pred
I0327 09:29:47.369065 31190 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0327 09:29:47.369078 31190 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0327 09:29:47.369559 31190 net.cpp:150] Setting up rpn_bbox_pred
I0327 09:29:47.369571 31190 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0327 09:29:47.369578 31190 net.cpp:165] Memory required for data: 167049660
I0327 09:29:47.369591 31190 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0327 09:29:47.369602 31190 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0327 09:29:47.369609 31190 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0327 09:29:47.369621 31190 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0327 09:29:47.369632 31190 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0327 09:29:47.369679 31190 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0327 09:29:47.369689 31190 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0327 09:29:47.369699 31190 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0327 09:29:47.369705 31190 net.cpp:165] Memory required for data: 167487708
I0327 09:29:47.369712 31190 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0327 09:29:47.369729 31190 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0327 09:29:47.369736 31190 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0327 09:29:47.369747 31190 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0327 09:29:47.369784 31190 net.cpp:150] Setting up rpn_cls_score_reshape
I0327 09:29:47.369794 31190 net.cpp:157] Top shape: 1 2 351 39 (27378)
I0327 09:29:47.369801 31190 net.cpp:165] Memory required for data: 167597220
I0327 09:29:47.369810 31190 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0327 09:29:47.369822 31190 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0327 09:29:47.369828 31190 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0327 09:29:47.369838 31190 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0327 09:29:47.369851 31190 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0327 09:29:47.369892 31190 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0327 09:29:47.369902 31190 net.cpp:157] Top shape: 1 2 351 39 (27378)
I0327 09:29:47.369911 31190 net.cpp:157] Top shape: 1 2 351 39 (27378)
I0327 09:29:47.369917 31190 net.cpp:165] Memory required for data: 167816244
I0327 09:29:47.369925 31190 layer_factory.hpp:77] Creating layer rpn-data
I0327 09:29:47.400403 31190 net.cpp:106] Creating Layer rpn-data
I0327 09:29:47.400419 31190 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0327 09:29:47.400434 31190 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0327 09:29:47.400440 31190 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0327 09:29:47.400444 31190 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0327 09:29:47.400450 31190 net.cpp:411] rpn-data -> rpn_labels
I0327 09:29:47.400462 31190 net.cpp:411] rpn-data -> rpn_bbox_targets
I0327 09:29:47.400470 31190 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0327 09:29:47.400477 31190 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0327 09:29:47.401981 31190 net.cpp:150] Setting up rpn-data
I0327 09:29:47.401994 31190 net.cpp:157] Top shape: 1 1 351 39 (13689)
I0327 09:29:47.402009 31190 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0327 09:29:47.402014 31190 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0327 09:29:47.402017 31190 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0327 09:29:47.402021 31190 net.cpp:165] Memory required for data: 168528072
I0327 09:29:47.402025 31190 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0327 09:29:47.402036 31190 net.cpp:106] Creating Layer rpn_loss_cls
I0327 09:29:47.402041 31190 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0327 09:29:47.402047 31190 net.cpp:454] rpn_loss_cls <- rpn_labels
I0327 09:29:47.402052 31190 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0327 09:29:47.402066 31190 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0327 09:29:47.402173 31190 net.cpp:150] Setting up rpn_loss_cls
I0327 09:29:47.402179 31190 net.cpp:157] Top shape: (1)
I0327 09:29:47.402182 31190 net.cpp:160]     with loss weight 1
I0327 09:29:47.402199 31190 net.cpp:165] Memory required for data: 168528076
I0327 09:29:47.402201 31190 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0327 09:29:47.402221 31190 net.cpp:106] Creating Layer rpn_loss_bbox
I0327 09:29:47.402226 31190 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0327 09:29:47.402230 31190 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0327 09:29:47.402235 31190 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0327 09:29:47.402240 31190 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0327 09:29:47.402246 31190 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0327 09:29:47.402644 31190 net.cpp:150] Setting up rpn_loss_bbox
I0327 09:29:47.402652 31190 net.cpp:157] Top shape: (1)
I0327 09:29:47.402655 31190 net.cpp:160]     with loss weight 1
I0327 09:29:47.402660 31190 net.cpp:165] Memory required for data: 168528080
I0327 09:29:47.402663 31190 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0327 09:29:47.402670 31190 net.cpp:106] Creating Layer rpn_cls_prob
I0327 09:29:47.402674 31190 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0327 09:29:47.402693 31190 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0327 09:29:47.402745 31190 net.cpp:150] Setting up rpn_cls_prob
I0327 09:29:47.402751 31190 net.cpp:157] Top shape: 1 2 351 39 (27378)
I0327 09:29:47.402755 31190 net.cpp:165] Memory required for data: 168637592
I0327 09:29:47.402758 31190 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0327 09:29:47.402771 31190 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0327 09:29:47.402776 31190 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0327 09:29:47.402781 31190 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0327 09:29:47.402804 31190 net.cpp:150] Setting up rpn_cls_prob_reshape
I0327 09:29:47.402811 31190 net.cpp:157] Top shape: 1 18 39 39 (27378)
I0327 09:29:47.402813 31190 net.cpp:165] Memory required for data: 168747104
I0327 09:29:47.402817 31190 layer_factory.hpp:77] Creating layer proposal
I0327 09:29:47.466346 31190 net.cpp:106] Creating Layer proposal
I0327 09:29:47.466362 31190 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0327 09:29:47.466369 31190 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0327 09:29:47.466375 31190 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0327 09:29:47.466382 31190 net.cpp:411] proposal -> rpn_rois
I0327 09:29:47.480717 31190 net.cpp:150] Setting up proposal
I0327 09:29:47.480746 31190 net.cpp:157] Top shape: 1 5 (5)
I0327 09:29:47.480751 31190 net.cpp:165] Memory required for data: 168747124
I0327 09:29:47.480756 31190 layer_factory.hpp:77] Creating layer roi-data
I0327 09:29:47.488055 31190 net.cpp:106] Creating Layer roi-data
I0327 09:29:47.488067 31190 net.cpp:454] roi-data <- rpn_rois
I0327 09:29:47.488086 31190 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0327 09:29:47.488093 31190 net.cpp:411] roi-data -> rois
I0327 09:29:47.488101 31190 net.cpp:411] roi-data -> labels
I0327 09:29:47.488108 31190 net.cpp:411] roi-data -> bbox_targets
I0327 09:29:47.488114 31190 net.cpp:411] roi-data -> bbox_inside_weights
I0327 09:29:47.488121 31190 net.cpp:411] roi-data -> bbox_outside_weights
I0327 09:29:47.488629 31190 net.cpp:150] Setting up roi-data
I0327 09:29:47.488641 31190 net.cpp:157] Top shape: 1 5 (5)
I0327 09:29:47.488646 31190 net.cpp:157] Top shape: 1 1 (1)
I0327 09:29:47.488651 31190 net.cpp:157] Top shape: 1 8 (8)
I0327 09:29:47.488654 31190 net.cpp:157] Top shape: 1 8 (8)
I0327 09:29:47.488658 31190 net.cpp:157] Top shape: 1 8 (8)
I0327 09:29:47.488662 31190 net.cpp:165] Memory required for data: 168747244
I0327 09:29:47.488665 31190 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0327 09:29:47.488679 31190 net.cpp:106] Creating Layer roi_pool_conv5
I0327 09:29:47.488684 31190 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_1
I0327 09:29:47.488690 31190 net.cpp:454] roi_pool_conv5 <- rois
I0327 09:29:47.488696 31190 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0327 09:29:47.488706 31190 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0327 09:29:47.488744 31190 net.cpp:150] Setting up roi_pool_conv5
I0327 09:29:47.488750 31190 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0327 09:29:47.488754 31190 net.cpp:165] Memory required for data: 168784108
I0327 09:29:47.488757 31190 layer_factory.hpp:77] Creating layer fc6
I0327 09:29:47.488766 31190 net.cpp:106] Creating Layer fc6
I0327 09:29:47.488770 31190 net.cpp:454] fc6 <- roi_pool_conv5
I0327 09:29:47.488776 31190 net.cpp:411] fc6 -> fc6
I0327 09:29:47.586804 31190 net.cpp:150] Setting up fc6
I0327 09:29:47.586834 31190 net.cpp:157] Top shape: 1 4096 (4096)
I0327 09:29:47.586838 31190 net.cpp:165] Memory required for data: 168800492
I0327 09:29:47.586864 31190 layer_factory.hpp:77] Creating layer relu6
I0327 09:29:47.586876 31190 net.cpp:106] Creating Layer relu6
I0327 09:29:47.586881 31190 net.cpp:454] relu6 <- fc6
I0327 09:29:47.586889 31190 net.cpp:397] relu6 -> fc6 (in-place)
I0327 09:29:47.586899 31190 net.cpp:150] Setting up relu6
I0327 09:29:47.586902 31190 net.cpp:157] Top shape: 1 4096 (4096)
I0327 09:29:47.586906 31190 net.cpp:165] Memory required for data: 168816876
I0327 09:29:47.586908 31190 layer_factory.hpp:77] Creating layer drop6
I0327 09:29:47.586925 31190 net.cpp:106] Creating Layer drop6
I0327 09:29:47.586927 31190 net.cpp:454] drop6 <- fc6
I0327 09:29:47.586932 31190 net.cpp:397] drop6 -> fc6 (in-place)
I0327 09:29:47.586968 31190 net.cpp:150] Setting up drop6
I0327 09:29:47.586974 31190 net.cpp:157] Top shape: 1 4096 (4096)
I0327 09:29:47.586982 31190 net.cpp:165] Memory required for data: 168833260
I0327 09:29:47.586985 31190 layer_factory.hpp:77] Creating layer fc7
I0327 09:29:47.586993 31190 net.cpp:106] Creating Layer fc7
I0327 09:29:47.586997 31190 net.cpp:454] fc7 <- fc6
I0327 09:29:47.587002 31190 net.cpp:411] fc7 -> fc7
I0327 09:29:47.631325 31190 net.cpp:150] Setting up fc7
I0327 09:29:47.631356 31190 net.cpp:157] Top shape: 1 4096 (4096)
I0327 09:29:47.631366 31190 net.cpp:165] Memory required for data: 168849644
I0327 09:29:47.631374 31190 layer_factory.hpp:77] Creating layer relu7
I0327 09:29:47.631386 31190 net.cpp:106] Creating Layer relu7
I0327 09:29:47.631392 31190 net.cpp:454] relu7 <- fc7
I0327 09:29:47.631399 31190 net.cpp:397] relu7 -> fc7 (in-place)
I0327 09:29:47.631409 31190 net.cpp:150] Setting up relu7
I0327 09:29:47.631414 31190 net.cpp:157] Top shape: 1 4096 (4096)
I0327 09:29:47.631417 31190 net.cpp:165] Memory required for data: 168866028
I0327 09:29:47.631422 31190 layer_factory.hpp:77] Creating layer drop7
I0327 09:29:47.631431 31190 net.cpp:106] Creating Layer drop7
I0327 09:29:47.631435 31190 net.cpp:454] drop7 <- fc7
I0327 09:29:47.631440 31190 net.cpp:397] drop7 -> fc7 (in-place)
I0327 09:29:47.631463 31190 net.cpp:150] Setting up drop7
I0327 09:29:47.631469 31190 net.cpp:157] Top shape: 1 4096 (4096)
I0327 09:29:47.631471 31190 net.cpp:165] Memory required for data: 168882412
I0327 09:29:47.631474 31190 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0327 09:29:47.631481 31190 net.cpp:106] Creating Layer fc7_drop7_0_split
I0327 09:29:47.631489 31190 net.cpp:454] fc7_drop7_0_split <- fc7
I0327 09:29:47.631492 31190 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0327 09:29:47.631500 31190 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0327 09:29:47.631534 31190 net.cpp:150] Setting up fc7_drop7_0_split
I0327 09:29:47.631539 31190 net.cpp:157] Top shape: 1 4096 (4096)
I0327 09:29:47.631543 31190 net.cpp:157] Top shape: 1 4096 (4096)
I0327 09:29:47.631546 31190 net.cpp:165] Memory required for data: 168915180
I0327 09:29:47.631551 31190 layer_factory.hpp:77] Creating layer cls_score
I0327 09:29:47.631557 31190 net.cpp:106] Creating Layer cls_score
I0327 09:29:47.631561 31190 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0327 09:29:47.631568 31190 net.cpp:411] cls_score -> cls_score
I0327 09:29:47.631794 31190 net.cpp:150] Setting up cls_score
I0327 09:29:47.631803 31190 net.cpp:157] Top shape: 1 2 (2)
I0327 09:29:47.631808 31190 net.cpp:165] Memory required for data: 168915188
I0327 09:29:47.631819 31190 layer_factory.hpp:77] Creating layer bbox_pred
I0327 09:29:47.631826 31190 net.cpp:106] Creating Layer bbox_pred
I0327 09:29:47.631831 31190 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0327 09:29:47.631845 31190 net.cpp:411] bbox_pred -> bbox_pred
I0327 09:29:47.632484 31190 net.cpp:150] Setting up bbox_pred
I0327 09:29:47.632493 31190 net.cpp:157] Top shape: 1 8 (8)
I0327 09:29:47.632498 31190 net.cpp:165] Memory required for data: 168915220
I0327 09:29:47.632508 31190 layer_factory.hpp:77] Creating layer loss_cls
I0327 09:29:47.632517 31190 net.cpp:106] Creating Layer loss_cls
I0327 09:29:47.632522 31190 net.cpp:454] loss_cls <- cls_score
I0327 09:29:47.632529 31190 net.cpp:454] loss_cls <- labels
I0327 09:29:47.632537 31190 net.cpp:411] loss_cls -> cls_loss
I0327 09:29:47.632547 31190 layer_factory.hpp:77] Creating layer loss_cls
I0327 09:29:47.632625 31190 net.cpp:150] Setting up loss_cls
I0327 09:29:47.632633 31190 net.cpp:157] Top shape: (1)
I0327 09:29:47.632638 31190 net.cpp:160]     with loss weight 1
I0327 09:29:47.632650 31190 net.cpp:165] Memory required for data: 168915224
I0327 09:29:47.632655 31190 layer_factory.hpp:77] Creating layer loss_bbox
I0327 09:29:47.632664 31190 net.cpp:106] Creating Layer loss_bbox
I0327 09:29:47.632669 31190 net.cpp:454] loss_bbox <- bbox_pred
I0327 09:29:47.632676 31190 net.cpp:454] loss_bbox <- bbox_targets
I0327 09:29:47.632683 31190 net.cpp:454] loss_bbox <- bbox_inside_weights
I0327 09:29:47.632688 31190 net.cpp:454] loss_bbox <- bbox_outside_weights
I0327 09:29:47.632695 31190 net.cpp:411] loss_bbox -> bbox_loss
I0327 09:29:47.632761 31190 net.cpp:150] Setting up loss_bbox
I0327 09:29:47.632769 31190 net.cpp:157] Top shape: (1)
I0327 09:29:47.632774 31190 net.cpp:160]     with loss weight 1
I0327 09:29:47.632782 31190 net.cpp:165] Memory required for data: 168915228
I0327 09:29:47.632787 31190 net.cpp:226] loss_bbox needs backward computation.
I0327 09:29:47.632794 31190 net.cpp:226] loss_cls needs backward computation.
I0327 09:29:47.632800 31190 net.cpp:226] bbox_pred needs backward computation.
I0327 09:29:47.632805 31190 net.cpp:226] cls_score needs backward computation.
I0327 09:29:47.632812 31190 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0327 09:29:47.632817 31190 net.cpp:226] drop7 needs backward computation.
I0327 09:29:47.632822 31190 net.cpp:226] relu7 needs backward computation.
I0327 09:29:47.632827 31190 net.cpp:226] fc7 needs backward computation.
I0327 09:29:47.632833 31190 net.cpp:226] drop6 needs backward computation.
I0327 09:29:47.632838 31190 net.cpp:226] relu6 needs backward computation.
I0327 09:29:47.632843 31190 net.cpp:226] fc6 needs backward computation.
I0327 09:29:47.632848 31190 net.cpp:226] roi_pool_conv5 needs backward computation.
I0327 09:29:47.632855 31190 net.cpp:226] roi-data needs backward computation.
I0327 09:29:47.632861 31190 net.cpp:226] proposal needs backward computation.
I0327 09:29:47.632869 31190 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0327 09:29:47.632874 31190 net.cpp:226] rpn_cls_prob needs backward computation.
I0327 09:29:47.632879 31190 net.cpp:226] rpn_loss_bbox needs backward computation.
I0327 09:29:47.632887 31190 net.cpp:226] rpn_loss_cls needs backward computation.
I0327 09:29:47.632894 31190 net.cpp:226] rpn-data needs backward computation.
I0327 09:29:47.632902 31190 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0327 09:29:47.632907 31190 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0327 09:29:47.632913 31190 net.cpp:226] rpn_bbox_pred_rpn_bbox_pred_0_split needs backward computation.
I0327 09:29:47.632920 31190 net.cpp:226] rpn_bbox_pred needs backward computation.
I0327 09:29:47.632925 31190 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0327 09:29:47.632931 31190 net.cpp:226] rpn_cls_score needs backward computation.
I0327 09:29:47.632937 31190 net.cpp:226] rpn/output_rpn_relu/3x3_0_split needs backward computation.
I0327 09:29:47.632943 31190 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0327 09:29:47.632948 31190 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0327 09:29:47.632956 31190 net.cpp:228] conv5_relu5_0_split does not need backward computation.
I0327 09:29:47.632961 31190 net.cpp:228] relu5 does not need backward computation.
I0327 09:29:47.632966 31190 net.cpp:228] conv5 does not need backward computation.
I0327 09:29:47.632972 31190 net.cpp:228] relu4 does not need backward computation.
I0327 09:29:47.632977 31190 net.cpp:228] conv4 does not need backward computation.
I0327 09:29:47.632983 31190 net.cpp:228] relu3 does not need backward computation.
I0327 09:29:47.632988 31190 net.cpp:228] conv3 does not need backward computation.
I0327 09:29:47.632995 31190 net.cpp:228] pool2 does not need backward computation.
I0327 09:29:47.633000 31190 net.cpp:228] norm2 does not need backward computation.
I0327 09:29:47.633007 31190 net.cpp:228] relu2 does not need backward computation.
I0327 09:29:47.633011 31190 net.cpp:228] conv2 does not need backward computation.
I0327 09:29:47.633018 31190 net.cpp:228] pool1 does not need backward computation.
I0327 09:29:47.633023 31190 net.cpp:228] norm1 does not need backward computation.
I0327 09:29:47.633029 31190 net.cpp:228] relu1 does not need backward computation.
I0327 09:29:47.633034 31190 net.cpp:228] conv1 does not need backward computation.
I0327 09:29:47.633041 31190 net.cpp:228] gt_boxes_input-data_2_split does not need backward computation.
I0327 09:29:47.633047 31190 net.cpp:228] im_info_input-data_1_split does not need backward computation.
I0327 09:29:47.633054 31190 net.cpp:228] data_input-data_0_split does not need backward computation.
I0327 09:29:47.633060 31190 net.cpp:228] input-data does not need backward computation.
I0327 09:29:47.633064 31190 net.cpp:270] This network produces output bbox_loss
I0327 09:29:47.633070 31190 net.cpp:270] This network produces output cls_loss
I0327 09:29:47.633075 31190 net.cpp:270] This network produces output rpn_cls_loss
I0327 09:29:47.633081 31190 net.cpp:270] This network produces output rpn_loss_bbox
I0327 09:29:47.633121 31190 net.cpp:283] Network initialization done.
I0327 09:29:47.633268 31190 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ../../data/imagenet_models/ZF.v2.caffemodel
I0327 09:29:49.913811 31190 net.cpp:816] Ignoring source layer pool5_spm6
I0327 09:29:49.913846 31190 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0327 09:29:49.957937 31190 net.cpp:816] Ignoring source layer fc8
I0327 09:29:49.957962 31190 net.cpp:816] Ignoring source layer prob
Solving...
/home/sgabriel/py-faster-rcnn/tools/../lib/rpn/proposal_target_layer.py:166: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  fg_inds = npr.choice(fg_inds, size=fg_rois_per_this_image, replace=False)
/home/sgabriel/py-faster-rcnn/tools/../lib/rpn/proposal_target_layer.py:177: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  bg_inds = npr.choice(bg_inds, size=bg_rois_per_this_image, replace=False)
/home/sgabriel/py-faster-rcnn/tools/../lib/rpn/proposal_target_layer.py:184: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  labels[fg_rois_per_this_image:] = 0
/home/sgabriel/py-faster-rcnn/tools/../lib/rpn/proposal_target_layer.py:127: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  bbox_targets[ind, start:end] = bbox_target_data[ind, 1:]
/home/sgabriel/py-faster-rcnn/tools/../lib/rpn/proposal_target_layer.py:128: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  bbox_inside_weights[ind, start:end] = cfg.TRAIN.BBOX_INSIDE_WEIGHTS
I0327 09:29:50.950907 31190 solver.cpp:229] Iteration 0, loss = 2.9269
I0327 09:29:50.950958 31190 solver.cpp:245]     Train net output #0: bbox_loss = 0.000566708 (* 1 = 0.000566708 loss)
I0327 09:29:50.950968 31190 solver.cpp:245]     Train net output #1: cls_loss = 0.655162 (* 1 = 0.655162 loss)
I0327 09:29:50.950973 31190 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.582411 (* 1 = 0.582411 loss)
I0327 09:29:50.950978 31190 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 2.05547 (* 1 = 2.05547 loss)
I0327 09:29:50.950987 31190 sgd_solver.cpp:106] Iteration 0, lr = 0.001
Wrote snapshot to: /home/sgabriel/py-faster-rcnn/output/default/voc_2007_trainval/zf_faster_rcnn_iter_1.caffemodel
done solving

real	0m25.333s
user	0m5.960s
sys	0m2.109s
+ set +x
grep: experiments/logs/faster_rcnn_end2end_ZF_.txt.2017-03-27_09-29-28: No such file or directory
+ echo

+ ../../tools/test_net.py --gpu 1 --def ../../models/pascal_voc/ZF/faster_rcnn_end2end/test.prototxt --net ../../output/default/voc_2007_trainval/zf_faster_rcnn_iter_49000.caffemodel --imdb CNNDATA_trainval --cfg ../../experiments/cfgs/roost.yml
<function <lambda> at 0x2aaad9d05e60>
<function <lambda> at 0x2aaad9d05ed8>
<function <lambda> at 0x2aaad9d05f50>
<function <lambda> at 0x2aaad9d0a050>
Called with args:
Namespace(caffemodel='../../output/default/voc_2007_trainval/zf_faster_rcnn_iter_49000.caffemodel', cfg_file='../../experiments/cfgs/roost.yml', comp_mode=False, gpu_id=1, imdb_name='CNNDATA_trainval', max_per_image=100, prototxt='../../models/pascal_voc/ZF/faster_rcnn_end2end/test.prototxt', set_cfgs=None, vis=False, wait=True)
Using config:
{'DATA_DIR': '/home/sgabriel/py-faster-rcnn/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 1,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/sgabriel/py-faster-rcnn/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 17,
 'ROOT_DIR': '/home/sgabriel/py-faster-rcnn',
 'TEST': {'BBOX_REG': False,
          'HAS_RPN': True,
          'MAX_SIZE': 600,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 4,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 600,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 100,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': False}
../../tools/test_net.py:80: RuntimeWarning: to-Python converter for boost::shared_ptr<caffe::Blob<float> > already registered; second conversion method ignored.
  caffe.set_mode_gpu()
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0327 09:29:56.539465 31230 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn/output"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  inner_product_param {
    num_output: 2
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  inner_product_param {
    num_output: 8
  }
}
layer {
  name: "cls_prob"
  type: "Softmax"
  bottom: "cls_score"
  top: "cls_prob"
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0327 09:29:56.539638 31230 net.cpp:413] Input 0 -> data
I0327 09:29:56.564615 31230 net.cpp:413] Input 1 -> im_info
I0327 09:29:56.564677 31230 layer_factory.hpp:77] Creating layer conv1
I0327 09:29:56.564704 31230 net.cpp:106] Creating Layer conv1
I0327 09:29:56.564709 31230 net.cpp:454] conv1 <- data
I0327 09:29:56.564715 31230 net.cpp:411] conv1 -> conv1
I0327 09:29:56.565603 31230 net.cpp:150] Setting up conv1
I0327 09:29:56.565618 31230 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0327 09:29:56.565623 31230 net.cpp:165] Memory required for data: 4816896
I0327 09:29:56.565636 31230 layer_factory.hpp:77] Creating layer relu1
I0327 09:29:56.565649 31230 net.cpp:106] Creating Layer relu1
I0327 09:29:56.565654 31230 net.cpp:454] relu1 <- conv1
I0327 09:29:56.565659 31230 net.cpp:397] relu1 -> conv1 (in-place)
I0327 09:29:56.565667 31230 net.cpp:150] Setting up relu1
I0327 09:29:56.565672 31230 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0327 09:29:56.565676 31230 net.cpp:165] Memory required for data: 9633792
I0327 09:29:56.565680 31230 layer_factory.hpp:77] Creating layer norm1
I0327 09:29:56.565688 31230 net.cpp:106] Creating Layer norm1
I0327 09:29:56.565692 31230 net.cpp:454] norm1 <- conv1
I0327 09:29:56.565697 31230 net.cpp:411] norm1 -> norm1
I0327 09:29:56.565805 31230 net.cpp:150] Setting up norm1
I0327 09:29:56.565812 31230 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0327 09:29:56.565815 31230 net.cpp:165] Memory required for data: 14450688
I0327 09:29:56.565819 31230 layer_factory.hpp:77] Creating layer pool1
I0327 09:29:56.565825 31230 net.cpp:106] Creating Layer pool1
I0327 09:29:56.565829 31230 net.cpp:454] pool1 <- norm1
I0327 09:29:56.565836 31230 net.cpp:411] pool1 -> pool1
I0327 09:29:56.565870 31230 net.cpp:150] Setting up pool1
I0327 09:29:56.565876 31230 net.cpp:157] Top shape: 1 96 57 57 (311904)
I0327 09:29:56.565878 31230 net.cpp:165] Memory required for data: 15698304
I0327 09:29:56.565882 31230 layer_factory.hpp:77] Creating layer conv2
I0327 09:29:56.565891 31230 net.cpp:106] Creating Layer conv2
I0327 09:29:56.565896 31230 net.cpp:454] conv2 <- pool1
I0327 09:29:56.565901 31230 net.cpp:411] conv2 -> conv2
I0327 09:29:56.568470 31230 net.cpp:150] Setting up conv2
I0327 09:29:56.568482 31230 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0327 09:29:56.568486 31230 net.cpp:165] Memory required for data: 16559488
I0327 09:29:56.568505 31230 layer_factory.hpp:77] Creating layer relu2
I0327 09:29:56.568513 31230 net.cpp:106] Creating Layer relu2
I0327 09:29:56.568517 31230 net.cpp:454] relu2 <- conv2
I0327 09:29:56.568523 31230 net.cpp:397] relu2 -> conv2 (in-place)
I0327 09:29:56.568532 31230 net.cpp:150] Setting up relu2
I0327 09:29:56.568537 31230 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0327 09:29:56.568541 31230 net.cpp:165] Memory required for data: 17420672
I0327 09:29:56.568544 31230 layer_factory.hpp:77] Creating layer norm2
I0327 09:29:56.568550 31230 net.cpp:106] Creating Layer norm2
I0327 09:29:56.568553 31230 net.cpp:454] norm2 <- conv2
I0327 09:29:56.568558 31230 net.cpp:411] norm2 -> norm2
I0327 09:29:56.568650 31230 net.cpp:150] Setting up norm2
I0327 09:29:56.568656 31230 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0327 09:29:56.568660 31230 net.cpp:165] Memory required for data: 18281856
I0327 09:29:56.568663 31230 layer_factory.hpp:77] Creating layer pool2
I0327 09:29:56.568670 31230 net.cpp:106] Creating Layer pool2
I0327 09:29:56.568675 31230 net.cpp:454] pool2 <- norm2
I0327 09:29:56.568680 31230 net.cpp:411] pool2 -> pool2
I0327 09:29:56.568711 31230 net.cpp:150] Setting up pool2
I0327 09:29:56.568717 31230 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0327 09:29:56.568720 31230 net.cpp:165] Memory required for data: 18512256
I0327 09:29:56.568723 31230 layer_factory.hpp:77] Creating layer conv3
I0327 09:29:56.568732 31230 net.cpp:106] Creating Layer conv3
I0327 09:29:56.568734 31230 net.cpp:454] conv3 <- pool2
I0327 09:29:56.568739 31230 net.cpp:411] conv3 -> conv3
I0327 09:29:56.571271 31230 net.cpp:150] Setting up conv3
I0327 09:29:56.571283 31230 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0327 09:29:56.571287 31230 net.cpp:165] Memory required for data: 18857856
I0327 09:29:56.571302 31230 layer_factory.hpp:77] Creating layer relu3
I0327 09:29:56.571311 31230 net.cpp:106] Creating Layer relu3
I0327 09:29:56.571316 31230 net.cpp:454] relu3 <- conv3
I0327 09:29:56.571321 31230 net.cpp:397] relu3 -> conv3 (in-place)
I0327 09:29:56.571328 31230 net.cpp:150] Setting up relu3
I0327 09:29:56.571333 31230 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0327 09:29:56.571336 31230 net.cpp:165] Memory required for data: 19203456
I0327 09:29:56.571341 31230 layer_factory.hpp:77] Creating layer conv4
I0327 09:29:56.571349 31230 net.cpp:106] Creating Layer conv4
I0327 09:29:56.571352 31230 net.cpp:454] conv4 <- conv3
I0327 09:29:56.571357 31230 net.cpp:411] conv4 -> conv4
I0327 09:29:56.575083 31230 net.cpp:150] Setting up conv4
I0327 09:29:56.575095 31230 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0327 09:29:56.575098 31230 net.cpp:165] Memory required for data: 19549056
I0327 09:29:56.575105 31230 layer_factory.hpp:77] Creating layer relu4
I0327 09:29:56.575117 31230 net.cpp:106] Creating Layer relu4
I0327 09:29:56.575121 31230 net.cpp:454] relu4 <- conv4
I0327 09:29:56.575126 31230 net.cpp:397] relu4 -> conv4 (in-place)
I0327 09:29:56.575134 31230 net.cpp:150] Setting up relu4
I0327 09:29:56.575139 31230 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0327 09:29:56.575142 31230 net.cpp:165] Memory required for data: 19894656
I0327 09:29:56.575145 31230 layer_factory.hpp:77] Creating layer conv5
I0327 09:29:56.575155 31230 net.cpp:106] Creating Layer conv5
I0327 09:29:56.575158 31230 net.cpp:454] conv5 <- conv4
I0327 09:29:56.575165 31230 net.cpp:411] conv5 -> conv5
I0327 09:29:56.577678 31230 net.cpp:150] Setting up conv5
I0327 09:29:56.577689 31230 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0327 09:29:56.577693 31230 net.cpp:165] Memory required for data: 20125056
I0327 09:29:56.577706 31230 layer_factory.hpp:77] Creating layer relu5
I0327 09:29:56.577713 31230 net.cpp:106] Creating Layer relu5
I0327 09:29:56.577716 31230 net.cpp:454] relu5 <- conv5
I0327 09:29:56.577723 31230 net.cpp:397] relu5 -> conv5 (in-place)
I0327 09:29:56.577729 31230 net.cpp:150] Setting up relu5
I0327 09:29:56.577734 31230 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0327 09:29:56.577738 31230 net.cpp:165] Memory required for data: 20355456
I0327 09:29:56.577740 31230 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0327 09:29:56.577750 31230 net.cpp:106] Creating Layer conv5_relu5_0_split
I0327 09:29:56.577754 31230 net.cpp:454] conv5_relu5_0_split <- conv5
I0327 09:29:56.577762 31230 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0327 09:29:56.577769 31230 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0327 09:29:56.577806 31230 net.cpp:150] Setting up conv5_relu5_0_split
I0327 09:29:56.577811 31230 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0327 09:29:56.577818 31230 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0327 09:29:56.577821 31230 net.cpp:165] Memory required for data: 20816256
I0327 09:29:56.577826 31230 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0327 09:29:56.577836 31230 net.cpp:106] Creating Layer rpn_conv/3x3
I0327 09:29:56.577841 31230 net.cpp:454] rpn_conv/3x3 <- conv5_relu5_0_split_0
I0327 09:29:56.577847 31230 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0327 09:29:56.589948 31230 net.cpp:150] Setting up rpn_conv/3x3
I0327 09:29:56.589967 31230 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0327 09:29:56.589972 31230 net.cpp:165] Memory required for data: 21046656
I0327 09:29:56.589979 31230 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0327 09:29:56.589992 31230 net.cpp:106] Creating Layer rpn_relu/3x3
I0327 09:29:56.589995 31230 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0327 09:29:56.590000 31230 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0327 09:29:56.590008 31230 net.cpp:150] Setting up rpn_relu/3x3
I0327 09:29:56.590013 31230 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0327 09:29:56.590016 31230 net.cpp:165] Memory required for data: 21277056
I0327 09:29:56.590020 31230 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0327 09:29:56.590025 31230 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0327 09:29:56.590029 31230 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0327 09:29:56.590034 31230 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0327 09:29:56.590041 31230 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0327 09:29:56.590077 31230 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0327 09:29:56.590083 31230 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0327 09:29:56.590087 31230 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0327 09:29:56.590090 31230 net.cpp:165] Memory required for data: 21737856
I0327 09:29:56.590093 31230 layer_factory.hpp:77] Creating layer rpn_cls_score
I0327 09:29:56.590104 31230 net.cpp:106] Creating Layer rpn_cls_score
I0327 09:29:56.590109 31230 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0327 09:29:56.590126 31230 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0327 09:29:56.590423 31230 net.cpp:150] Setting up rpn_cls_score
I0327 09:29:56.590435 31230 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0327 09:29:56.590438 31230 net.cpp:165] Memory required for data: 21754056
I0327 09:29:56.590445 31230 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0327 09:29:56.590454 31230 net.cpp:106] Creating Layer rpn_bbox_pred
I0327 09:29:56.590459 31230 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0327 09:29:56.590464 31230 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0327 09:29:56.590838 31230 net.cpp:150] Setting up rpn_bbox_pred
I0327 09:29:56.590847 31230 net.cpp:157] Top shape: 1 36 15 15 (8100)
I0327 09:29:56.590849 31230 net.cpp:165] Memory required for data: 21786456
I0327 09:29:56.590857 31230 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0327 09:29:56.590869 31230 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0327 09:29:56.590873 31230 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0327 09:29:56.590878 31230 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0327 09:29:56.590909 31230 net.cpp:150] Setting up rpn_cls_score_reshape
I0327 09:29:56.590915 31230 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0327 09:29:56.590919 31230 net.cpp:165] Memory required for data: 21802656
I0327 09:29:56.590922 31230 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0327 09:29:56.590929 31230 net.cpp:106] Creating Layer rpn_cls_prob
I0327 09:29:56.590932 31230 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0327 09:29:56.590939 31230 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0327 09:29:56.590994 31230 net.cpp:150] Setting up rpn_cls_prob
I0327 09:29:56.591001 31230 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0327 09:29:56.591003 31230 net.cpp:165] Memory required for data: 21818856
I0327 09:29:56.591007 31230 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0327 09:29:56.591012 31230 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0327 09:29:56.591017 31230 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0327 09:29:56.591023 31230 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0327 09:29:56.591042 31230 net.cpp:150] Setting up rpn_cls_prob_reshape
I0327 09:29:56.591048 31230 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0327 09:29:56.591050 31230 net.cpp:165] Memory required for data: 21835056
I0327 09:29:56.591054 31230 layer_factory.hpp:77] Creating layer proposal
I0327 09:29:56.594125 31230 net.cpp:106] Creating Layer proposal
I0327 09:29:56.594146 31230 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0327 09:29:56.594154 31230 net.cpp:454] proposal <- rpn_bbox_pred
I0327 09:29:56.594161 31230 net.cpp:454] proposal <- im_info
I0327 09:29:56.594179 31230 net.cpp:411] proposal -> rois
I0327 09:29:56.595414 31230 net.cpp:150] Setting up proposal
I0327 09:29:56.595437 31230 net.cpp:157] Top shape: 1 5 (5)
I0327 09:29:56.595443 31230 net.cpp:165] Memory required for data: 21835076
I0327 09:29:56.595451 31230 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0327 09:29:56.595469 31230 net.cpp:106] Creating Layer roi_pool_conv5
I0327 09:29:56.595479 31230 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_1
I0327 09:29:56.595487 31230 net.cpp:454] roi_pool_conv5 <- rois
I0327 09:29:56.595497 31230 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0327 09:29:56.595515 31230 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0327 09:29:56.595578 31230 net.cpp:150] Setting up roi_pool_conv5
I0327 09:29:56.595587 31230 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0327 09:29:56.595593 31230 net.cpp:165] Memory required for data: 21871940
I0327 09:29:56.595599 31230 layer_factory.hpp:77] Creating layer fc6
I0327 09:29:56.595613 31230 net.cpp:106] Creating Layer fc6
I0327 09:29:56.595621 31230 net.cpp:454] fc6 <- roi_pool_conv5
I0327 09:29:56.595631 31230 net.cpp:411] fc6 -> fc6
I0327 09:29:56.698557 31230 net.cpp:150] Setting up fc6
I0327 09:29:56.698588 31230 net.cpp:157] Top shape: 1 4096 (4096)
I0327 09:29:56.698592 31230 net.cpp:165] Memory required for data: 21888324
I0327 09:29:56.698621 31230 layer_factory.hpp:77] Creating layer relu6
I0327 09:29:56.698638 31230 net.cpp:106] Creating Layer relu6
I0327 09:29:56.698647 31230 net.cpp:454] relu6 <- fc6
I0327 09:29:56.698657 31230 net.cpp:397] relu6 -> fc6 (in-place)
I0327 09:29:56.698670 31230 net.cpp:150] Setting up relu6
I0327 09:29:56.698679 31230 net.cpp:157] Top shape: 1 4096 (4096)
I0327 09:29:56.698685 31230 net.cpp:165] Memory required for data: 21904708
I0327 09:29:56.698691 31230 layer_factory.hpp:77] Creating layer drop6
I0327 09:29:56.698709 31230 net.cpp:106] Creating Layer drop6
I0327 09:29:56.698714 31230 net.cpp:454] drop6 <- fc6
I0327 09:29:56.698726 31230 net.cpp:397] drop6 -> fc6 (in-place)
I0327 09:29:56.698767 31230 net.cpp:150] Setting up drop6
I0327 09:29:56.698776 31230 net.cpp:157] Top shape: 1 4096 (4096)
I0327 09:29:56.698781 31230 net.cpp:165] Memory required for data: 21921092
I0327 09:29:56.698787 31230 layer_factory.hpp:77] Creating layer fc7
I0327 09:29:56.698799 31230 net.cpp:106] Creating Layer fc7
I0327 09:29:56.698806 31230 net.cpp:454] fc7 <- fc6
I0327 09:29:56.698815 31230 net.cpp:411] fc7 -> fc7
I0327 09:29:56.744702 31230 net.cpp:150] Setting up fc7
I0327 09:29:56.744735 31230 net.cpp:157] Top shape: 1 4096 (4096)
I0327 09:29:56.744738 31230 net.cpp:165] Memory required for data: 21937476
I0327 09:29:56.744751 31230 layer_factory.hpp:77] Creating layer relu7
I0327 09:29:56.744767 31230 net.cpp:106] Creating Layer relu7
I0327 09:29:56.744776 31230 net.cpp:454] relu7 <- fc7
I0327 09:29:56.744786 31230 net.cpp:397] relu7 -> fc7 (in-place)
I0327 09:29:56.744802 31230 net.cpp:150] Setting up relu7
I0327 09:29:56.744809 31230 net.cpp:157] Top shape: 1 4096 (4096)
I0327 09:29:56.744814 31230 net.cpp:165] Memory required for data: 21953860
I0327 09:29:56.744820 31230 layer_factory.hpp:77] Creating layer drop7
I0327 09:29:56.744832 31230 net.cpp:106] Creating Layer drop7
I0327 09:29:56.744838 31230 net.cpp:454] drop7 <- fc7
I0327 09:29:56.744848 31230 net.cpp:397] drop7 -> fc7 (in-place)
I0327 09:29:56.744885 31230 net.cpp:150] Setting up drop7
I0327 09:29:56.744892 31230 net.cpp:157] Top shape: 1 4096 (4096)
I0327 09:29:56.744896 31230 net.cpp:165] Memory required for data: 21970244
I0327 09:29:56.744904 31230 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0327 09:29:56.744916 31230 net.cpp:106] Creating Layer fc7_drop7_0_split
I0327 09:29:56.744923 31230 net.cpp:454] fc7_drop7_0_split <- fc7
I0327 09:29:56.744933 31230 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0327 09:29:56.744946 31230 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0327 09:29:56.744992 31230 net.cpp:150] Setting up fc7_drop7_0_split
I0327 09:29:56.744999 31230 net.cpp:157] Top shape: 1 4096 (4096)
I0327 09:29:56.745007 31230 net.cpp:157] Top shape: 1 4096 (4096)
I0327 09:29:56.745013 31230 net.cpp:165] Memory required for data: 22003012
I0327 09:29:56.745020 31230 layer_factory.hpp:77] Creating layer cls_score
I0327 09:29:56.745038 31230 net.cpp:106] Creating Layer cls_score
I0327 09:29:56.745046 31230 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0327 09:29:56.745059 31230 net.cpp:411] cls_score -> cls_score
I0327 09:29:56.745173 31230 net.cpp:150] Setting up cls_score
I0327 09:29:56.745182 31230 net.cpp:157] Top shape: 1 2 (2)
I0327 09:29:56.745187 31230 net.cpp:165] Memory required for data: 22003020
I0327 09:29:56.745198 31230 layer_factory.hpp:77] Creating layer bbox_pred
I0327 09:29:56.745215 31230 net.cpp:106] Creating Layer bbox_pred
I0327 09:29:56.745223 31230 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0327 09:29:56.745235 31230 net.cpp:411] bbox_pred -> bbox_pred
I0327 09:29:56.746119 31230 net.cpp:150] Setting up bbox_pred
I0327 09:29:56.746130 31230 net.cpp:157] Top shape: 1 8 (8)
I0327 09:29:56.746137 31230 net.cpp:165] Memory required for data: 22003052
I0327 09:29:56.746150 31230 layer_factory.hpp:77] Creating layer cls_prob
I0327 09:29:56.746162 31230 net.cpp:106] Creating Layer cls_prob
I0327 09:29:56.746170 31230 net.cpp:454] cls_prob <- cls_score
I0327 09:29:56.746182 31230 net.cpp:411] cls_prob -> cls_prob
I0327 09:29:56.746251 31230 net.cpp:150] Setting up cls_prob
I0327 09:29:56.746258 31230 net.cpp:157] Top shape: 1 2 (2)
I0327 09:29:56.746264 31230 net.cpp:165] Memory required for data: 22003060
I0327 09:29:56.746271 31230 net.cpp:228] cls_prob does not need backward computation.
I0327 09:29:56.746279 31230 net.cpp:228] bbox_pred does not need backward computation.
I0327 09:29:56.746284 31230 net.cpp:228] cls_score does not need backward computation.
I0327 09:29:56.746291 31230 net.cpp:228] fc7_drop7_0_split does not need backward computation.
I0327 09:29:56.746297 31230 net.cpp:228] drop7 does not need backward computation.
I0327 09:29:56.746304 31230 net.cpp:228] relu7 does not need backward computation.
I0327 09:29:56.746309 31230 net.cpp:228] fc7 does not need backward computation.
I0327 09:29:56.746316 31230 net.cpp:228] drop6 does not need backward computation.
I0327 09:29:56.746322 31230 net.cpp:228] relu6 does not need backward computation.
I0327 09:29:56.746328 31230 net.cpp:228] fc6 does not need backward computation.
I0327 09:29:56.746335 31230 net.cpp:228] roi_pool_conv5 does not need backward computation.
I0327 09:29:56.746342 31230 net.cpp:228] proposal does not need backward computation.
I0327 09:29:56.746350 31230 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0327 09:29:56.746356 31230 net.cpp:228] rpn_cls_prob does not need backward computation.
I0327 09:29:56.746363 31230 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0327 09:29:56.746371 31230 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0327 09:29:56.746378 31230 net.cpp:228] rpn_cls_score does not need backward computation.
I0327 09:29:56.746386 31230 net.cpp:228] rpn/output_rpn_relu/3x3_0_split does not need backward computation.
I0327 09:29:56.746394 31230 net.cpp:228] rpn_relu/3x3 does not need backward computation.
I0327 09:29:56.746402 31230 net.cpp:228] rpn_conv/3x3 does not need backward computation.
I0327 09:29:56.746408 31230 net.cpp:228] conv5_relu5_0_split does not need backward computation.
I0327 09:29:56.746415 31230 net.cpp:228] relu5 does not need backward computation.
I0327 09:29:56.746421 31230 net.cpp:228] conv5 does not need backward computation.
I0327 09:29:56.746433 31230 net.cpp:228] relu4 does not need backward computation.
I0327 09:29:56.746440 31230 net.cpp:228] conv4 does not need backward computation.
I0327 09:29:56.746448 31230 net.cpp:228] relu3 does not need backward computation.
I0327 09:29:56.746454 31230 net.cpp:228] conv3 does not need backward computation.
I0327 09:29:56.746460 31230 net.cpp:228] pool2 does not need backward computation.
I0327 09:29:56.746466 31230 net.cpp:228] norm2 does not need backward computation.
I0327 09:29:56.746474 31230 net.cpp:228] relu2 does not need backward computation.
I0327 09:29:56.746479 31230 net.cpp:228] conv2 does not need backward computation.
I0327 09:29:56.746486 31230 net.cpp:228] pool1 does not need backward computation.
I0327 09:29:56.746493 31230 net.cpp:228] norm1 does not need backward computation.
I0327 09:29:56.746500 31230 net.cpp:228] relu1 does not need backward computation.
I0327 09:29:56.746505 31230 net.cpp:228] conv1 does not need backward computation.
I0327 09:29:56.746511 31230 net.cpp:270] This network produces output bbox_pred
I0327 09:29:56.746518 31230 net.cpp:270] This network produces output cls_prob
I0327 09:29:56.746557 31230 net.cpp:283] Network initialization done.
I0327 09:29:58.856654 31230 net.cpp:816] Ignoring source layer input-data
I0327 09:29:58.856688 31230 net.cpp:816] Ignoring source layer data_input-data_0_split
I0327 09:29:58.856693 31230 net.cpp:816] Ignoring source layer im_info_input-data_1_split
I0327 09:29:58.856696 31230 net.cpp:816] Ignoring source layer gt_boxes_input-data_2_split
I0327 09:29:58.861999 31230 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0327 09:29:58.862047 31230 net.cpp:816] Ignoring source layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0327 09:29:58.862054 31230 net.cpp:816] Ignoring source layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0327 09:29:58.862057 31230 net.cpp:816] Ignoring source layer rpn-data
I0327 09:29:58.862061 31230 net.cpp:816] Ignoring source layer rpn_loss_cls
I0327 09:29:58.862064 31230 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0327 09:29:58.862071 31230 net.cpp:816] Ignoring source layer roi-data
I0327 09:29:58.910583 31230 net.cpp:816] Ignoring source layer loss_cls
I0327 09:29:58.910605 31230 net.cpp:816] Ignoring source layer loss_bbox
NET
<caffe._caffe.Net object at 0x2aaada1aae68>
im_detect: 1/500 0.216s 0.000s
im_detect: 2/500 0.163s 0.000s
im_detect: 3/500 0.145s 0.000s
im_detect: 4/500 0.139s 0.000s
im_detect: 5/500 0.132s 0.000s
im_detect: 6/500 0.134s 0.000s
im_detect: 7/500 0.132s 0.000s
im_detect: 8/500 0.129s 0.000s
im_detect: 9/500 0.127s 0.000s
im_detect: 10/500 0.125s 0.000s
im_detect: 11/500 0.123s 0.000s
im_detect: 12/500 0.122s 0.000s
im_detect: 13/500 0.121s 0.000s
im_detect: 14/500 0.120s 0.000s
im_detect: 15/500 0.118s 0.000s
im_detect: 16/500 0.117s 0.000s
im_detect: 17/500 0.117s 0.000s
im_detect: 18/500 0.115s 0.000s
im_detect: 19/500 0.114s 0.000s
im_detect: 20/500 0.114s 0.000s
im_detect: 21/500 0.113s 0.000s
im_detect: 22/500 0.113s 0.000s
im_detect: 23/500 0.113s 0.000s
im_detect: 24/500 0.112s 0.000s
im_detect: 25/500 0.112s 0.000s
im_detect: 26/500 0.112s 0.000s
im_detect: 27/500 0.112s 0.000s
im_detect: 28/500 0.111s 0.000s
im_detect: 29/500 0.111s 0.000s
im_detect: 30/500 0.111s 0.000s
im_detect: 31/500 0.111s 0.000s
im_detect: 32/500 0.111s 0.000s
im_detect: 33/500 0.111s 0.000s
im_detect: 34/500 0.110s 0.000s
im_detect: 35/500 0.111s 0.000s
im_detect: 36/500 0.111s 0.000s
im_detect: 37/500 0.111s 0.000s
im_detect: 38/500 0.111s 0.000s
im_detect: 39/500 0.111s 0.000s
im_detect: 40/500 0.111s 0.000s
im_detect: 41/500 0.111s 0.000s
im_detect: 42/500 0.110s 0.000s
im_detect: 43/500 0.110s 0.000s
im_detect: 44/500 0.110s 0.000s
im_detect: 45/500 0.110s 0.000s
im_detect: 46/500 0.110s 0.000s
im_detect: 47/500 0.110s 0.000s
im_detect: 48/500 0.110s 0.000s
im_detect: 49/500 0.110s 0.000s
im_detect: 50/500 0.110s 0.000s
im_detect: 51/500 0.110s 0.000s
im_detect: 52/500 0.110s 0.000s
im_detect: 53/500 0.110s 0.000s
im_detect: 54/500 0.110s 0.000s
im_detect: 55/500 0.110s 0.000s
im_detect: 56/500 0.110s 0.000s
im_detect: 57/500 0.110s 0.000s
im_detect: 58/500 0.109s 0.000s
im_detect: 59/500 0.109s 0.000s
im_detect: 60/500 0.109s 0.000s
im_detect: 61/500 0.109s 0.000s
im_detect: 62/500 0.109s 0.000s
im_detect: 63/500 0.109s 0.000s
im_detect: 64/500 0.109s 0.000s
im_detect: 65/500 0.108s 0.000s
im_detect: 66/500 0.108s 0.000s
im_detect: 67/500 0.108s 0.000s
im_detect: 68/500 0.108s 0.000s
im_detect: 69/500 0.108s 0.000s
im_detect: 70/500 0.108s 0.000s
im_detect: 71/500 0.108s 0.000s
im_detect: 72/500 0.108s 0.000s
im_detect: 73/500 0.108s 0.000s
im_detect: 74/500 0.108s 0.000s
im_detect: 75/500 0.108s 0.000s
im_detect: 76/500 0.108s 0.000s
im_detect: 77/500 0.108s 0.000s
im_detect: 78/500 0.108s 0.000s
im_detect: 79/500 0.107s 0.000s
im_detect: 80/500 0.107s 0.000s
im_detect: 81/500 0.107s 0.000s
im_detect: 82/500 0.107s 0.000s
im_detect: 83/500 0.107s 0.000s
im_detect: 84/500 0.107s 0.000s
im_detect: 85/500 0.107s 0.000s
im_detect: 86/500 0.107s 0.000s
im_detect: 87/500 0.107s 0.000s
im_detect: 88/500 0.107s 0.000s
im_detect: 89/500 0.106s 0.000s
im_detect: 90/500 0.106s 0.000s
im_detect: 91/500 0.106s 0.000s
im_detect: 92/500 0.107s 0.000s
im_detect: 93/500 0.107s 0.000s
im_detect: 94/500 0.106s 0.000s
im_detect: 95/500 0.106s 0.000s
im_detect: 96/500 0.106s 0.000s
im_detect: 97/500 0.106s 0.000s
im_detect: 98/500 0.107s 0.000s
im_detect: 99/500 0.107s 0.000s
im_detect: 100/500 0.107s 0.000s
im_detect: 101/500 0.106s 0.000s
im_detect: 102/500 0.106s 0.000s
im_detect: 103/500 0.106s 0.000s
im_detect: 104/500 0.106s 0.000s
im_detect: 105/500 0.106s 0.000s
im_detect: 106/500 0.106s 0.000s
im_detect: 107/500 0.106s 0.000s
im_detect: 108/500 0.106s 0.000s
im_detect: 109/500 0.106s 0.000s
im_detect: 110/500 0.106s 0.000s
im_detect: 111/500 0.106s 0.000s
im_detect: 112/500 0.106s 0.000s
im_detect: 113/500 0.106s 0.000s
im_detect: 114/500 0.106s 0.000s
im_detect: 115/500 0.106s 0.000s
im_detect: 116/500 0.106s 0.000s
im_detect: 117/500 0.106s 0.000s
im_detect: 118/500 0.106s 0.000s
im_detect: 119/500 0.106s 0.000s
im_detect: 120/500 0.106s 0.000s
im_detect: 121/500 0.105s 0.000s
im_detect: 122/500 0.105s 0.000s
im_detect: 123/500 0.106s 0.000s
im_detect: 124/500 0.106s 0.000s
im_detect: 125/500 0.106s 0.000s
im_detect: 126/500 0.106s 0.000s
im_detect: 127/500 0.106s 0.000s
im_detect: 128/500 0.106s 0.000s
im_detect: 129/500 0.105s 0.000s
im_detect: 130/500 0.105s 0.000s
im_detect: 131/500 0.105s 0.000s
im_detect: 132/500 0.105s 0.000s
im_detect: 133/500 0.105s 0.000s
im_detect: 134/500 0.106s 0.000s
im_detect: 135/500 0.105s 0.000s
im_detect: 136/500 0.105s 0.000s
im_detect: 137/500 0.105s 0.000s
im_detect: 138/500 0.105s 0.000s
im_detect: 139/500 0.105s 0.000s
im_detect: 140/500 0.105s 0.000s
im_detect: 141/500 0.105s 0.000s
im_detect: 142/500 0.105s 0.000s
im_detect: 143/500 0.105s 0.000s
im_detect: 144/500 0.105s 0.000s
im_detect: 145/500 0.105s 0.000s
im_detect: 146/500 0.105s 0.000s
im_detect: 147/500 0.105s 0.000s
im_detect: 148/500 0.105s 0.000s
im_detect: 149/500 0.105s 0.000s
im_detect: 150/500 0.105s 0.000s
im_detect: 151/500 0.105s 0.000s
im_detect: 152/500 0.105s 0.000s
im_detect: 153/500 0.105s 0.000s
im_detect: 154/500 0.105s 0.000s
im_detect: 155/500 0.105s 0.000s
im_detect: 156/500 0.105s 0.000s
im_detect: 157/500 0.105s 0.000s
im_detect: 158/500 0.105s 0.000s
im_detect: 159/500 0.104s 0.000s
im_detect: 160/500 0.104s 0.000s
im_detect: 161/500 0.104s 0.000s
im_detect: 162/500 0.104s 0.000s
im_detect: 163/500 0.104s 0.000s
im_detect: 164/500 0.104s 0.000s
im_detect: 165/500 0.104s 0.000s
im_detect: 166/500 0.104s 0.000s
im_detect: 167/500 0.104s 0.000s
im_detect: 168/500 0.104s 0.000s
im_detect: 169/500 0.104s 0.000s
im_detect: 170/500 0.104s 0.000s
im_detect: 171/500 0.104s 0.000s
im_detect: 172/500 0.104s 0.000s
im_detect: 173/500 0.104s 0.000s
im_detect: 174/500 0.104s 0.000s
im_detect: 175/500 0.104s 0.000s
im_detect: 176/500 0.104s 0.000s
im_detect: 177/500 0.104s 0.000s
im_detect: 178/500 0.104s 0.000s
im_detect: 179/500 0.104s 0.000s
im_detect: 180/500 0.104s 0.000s
im_detect: 181/500 0.104s 0.000s
im_detect: 182/500 0.103s 0.000s
im_detect: 183/500 0.103s 0.000s
im_detect: 184/500 0.103s 0.000s
im_detect: 185/500 0.103s 0.000s
im_detect: 186/500 0.103s 0.000s
im_detect: 187/500 0.103s 0.000s
im_detect: 188/500 0.103s 0.000s
im_detect: 189/500 0.103s 0.000s
im_detect: 190/500 0.103s 0.000s
im_detect: 191/500 0.103s 0.000s
im_detect: 192/500 0.103s 0.000s
im_detect: 193/500 0.103s 0.000s
im_detect: 194/500 0.103s 0.000s
im_detect: 195/500 0.103s 0.000s
im_detect: 196/500 0.103s 0.000s
im_detect: 197/500 0.103s 0.000s
im_detect: 198/500 0.103s 0.000s
im_detect: 199/500 0.103s 0.000s
im_detect: 200/500 0.103s 0.000s
im_detect: 201/500 0.103s 0.000s
im_detect: 202/500 0.103s 0.000s
im_detect: 203/500 0.103s 0.000s
im_detect: 204/500 0.103s 0.000s
im_detect: 205/500 0.103s 0.000s
im_detect: 206/500 0.103s 0.000s
im_detect: 207/500 0.103s 0.000s
im_detect: 208/500 0.103s 0.000s
im_detect: 209/500 0.103s 0.000s
im_detect: 210/500 0.103s 0.000s
im_detect: 211/500 0.103s 0.000s
im_detect: 212/500 0.103s 0.000s
im_detect: 213/500 0.103s 0.000s
im_detect: 214/500 0.103s 0.000s
im_detect: 215/500 0.103s 0.000s
im_detect: 216/500 0.103s 0.000s
im_detect: 217/500 0.103s 0.000s
im_detect: 218/500 0.103s 0.000s
im_detect: 219/500 0.103s 0.000s
im_detect: 220/500 0.103s 0.000s
im_detect: 221/500 0.103s 0.000s
im_detect: 222/500 0.103s 0.000s
im_detect: 223/500 0.103s 0.000s
im_detect: 224/500 0.103s 0.000s
im_detect: 225/500 0.103s 0.000s
im_detect: 226/500 0.103s 0.000s
im_detect: 227/500 0.103s 0.000s
im_detect: 228/500 0.103s 0.000s
im_detect: 229/500 0.103s 0.000s
im_detect: 230/500 0.103s 0.000s
im_detect: 231/500 0.103s 0.000s
im_detect: 232/500 0.103s 0.000s
im_detect: 233/500 0.103s 0.000s
im_detect: 234/500 0.103s 0.000s
im_detect: 235/500 0.103s 0.000s
im_detect: 236/500 0.103s 0.000s
im_detect: 237/500 0.103s 0.000s
im_detect: 238/500 0.103s 0.000s
im_detect: 239/500 0.103s 0.000s
im_detect: 240/500 0.103s 0.000s
im_detect: 241/500 0.103s 0.000s
im_detect: 242/500 0.103s 0.000s
im_detect: 243/500 0.103s 0.000s
im_detect: 244/500 0.103s 0.000s
im_detect: 245/500 0.103s 0.000s
im_detect: 246/500 0.103s 0.000s
im_detect: 247/500 0.103s 0.000s
im_detect: 248/500 0.103s 0.000s
im_detect: 249/500 0.103s 0.000s
im_detect: 250/500 0.103s 0.000s
im_detect: 251/500 0.103s 0.000s
im_detect: 252/500 0.103s 0.000s
im_detect: 253/500 0.103s 0.000s
im_detect: 254/500 0.103s 0.000s
im_detect: 255/500 0.103s 0.000s
im_detect: 256/500 0.103s 0.000s
im_detect: 257/500 0.103s 0.000s
im_detect: 258/500 0.103s 0.000s
im_detect: 259/500 0.103s 0.000s
im_detect: 260/500 0.103s 0.000s
im_detect: 261/500 0.103s 0.000s
im_detect: 262/500 0.103s 0.000s
im_detect: 263/500 0.103s 0.000s
im_detect: 264/500 0.103s 0.000s
im_detect: 265/500 0.103s 0.000s
im_detect: 266/500 0.103s 0.000s
im_detect: 267/500 0.103s 0.000s
im_detect: 268/500 0.104s 0.000s
im_detect: 269/500 0.104s 0.000s
im_detect: 270/500 0.104s 0.000s
im_detect: 271/500 0.104s 0.000s
im_detect: 272/500 0.104s 0.000s
im_detect: 273/500 0.104s 0.000s
im_detect: 274/500 0.104s 0.000s
im_detect: 275/500 0.104s 0.000s
im_detect: 276/500 0.104s 0.000s
im_detect: 277/500 0.104s 0.000s
im_detect: 278/500 0.104s 0.000s
im_detect: 279/500 0.104s 0.000s
im_detect: 280/500 0.104s 0.000s
im_detect: 281/500 0.104s 0.000s
im_detect: 282/500 0.104s 0.000s
im_detect: 283/500 0.104s 0.000s
im_detect: 284/500 0.104s 0.000s
im_detect: 285/500 0.104s 0.000s
im_detect: 286/500 0.104s 0.000s
im_detect: 287/500 0.104s 0.000s
im_detect: 288/500 0.104s 0.000s
im_detect: 289/500 0.104s 0.000s
im_detect: 290/500 0.104s 0.000s
im_detect: 291/500 0.104s 0.000s
im_detect: 292/500 0.104s 0.000s
im_detect: 293/500 0.104s 0.000s
im_detect: 294/500 0.104s 0.000s
im_detect: 295/500 0.104s 0.000s
im_detect: 296/500 0.104s 0.000s
im_detect: 297/500 0.104s 0.000s
im_detect: 298/500 0.104s 0.000s
im_detect: 299/500 0.104s 0.000s
im_detect: 300/500 0.104s 0.000s
im_detect: 301/500 0.104s 0.000s
im_detect: 302/500 0.104s 0.000s
im_detect: 303/500 0.104s 0.000s
im_detect: 304/500 0.104s 0.000s
im_detect: 305/500 0.104s 0.000s
im_detect: 306/500 0.104s 0.000s
im_detect: 307/500 0.104s 0.000s
im_detect: 308/500 0.104s 0.000s
im_detect: 309/500 0.104s 0.000s
im_detect: 310/500 0.104s 0.000s
im_detect: 311/500 0.104s 0.000s
im_detect: 312/500 0.104s 0.000s
im_detect: 313/500 0.104s 0.000s
im_detect: 314/500 0.104s 0.000s
im_detect: 315/500 0.104s 0.000s
im_detect: 316/500 0.104s 0.000s
im_detect: 317/500 0.104s 0.000s
im_detect: 318/500 0.104s 0.000s
im_detect: 319/500 0.104s 0.000s
im_detect: 320/500 0.104s 0.000s
im_detect: 321/500 0.104s 0.000s
im_detect: 322/500 0.104s 0.000s
im_detect: 323/500 0.104s 0.000s
im_detect: 324/500 0.103s 0.000s
im_detect: 325/500 0.103s 0.000s
im_detect: 326/500 0.104s 0.000s
im_detect: 327/500 0.104s 0.000s
im_detect: 328/500 0.104s 0.000s
im_detect: 329/500 0.103s 0.000s
im_detect: 330/500 0.103s 0.000s
im_detect: 331/500 0.103s 0.000s
im_detect: 332/500 0.103s 0.000s
im_detect: 333/500 0.103s 0.000s
im_detect: 334/500 0.103s 0.000s
im_detect: 335/500 0.103s 0.000s
im_detect: 336/500 0.103s 0.000s
im_detect: 337/500 0.104s 0.000s
im_detect: 338/500 0.103s 0.000s
im_detect: 339/500 0.103s 0.000s
im_detect: 340/500 0.103s 0.000s
im_detect: 341/500 0.103s 0.000s
im_detect: 342/500 0.103s 0.000s
im_detect: 343/500 0.103s 0.000s
im_detect: 344/500 0.103s 0.000s
im_detect: 345/500 0.103s 0.000s
im_detect: 346/500 0.103s 0.000s
im_detect: 347/500 0.103s 0.000s
im_detect: 348/500 0.103s 0.000s
im_detect: 349/500 0.103s 0.000s
im_detect: 350/500 0.103s 0.000s
im_detect: 351/500 0.103s 0.000s
im_detect: 352/500 0.103s 0.000s
im_detect: 353/500 0.103s 0.000s
im_detect: 354/500 0.103s 0.000s
im_detect: 355/500 0.103s 0.000s
im_detect: 356/500 0.103s 0.000s
im_detect: 357/500 0.103s 0.000s
im_detect: 358/500 0.103s 0.000s
im_detect: 359/500 0.103s 0.000s
im_detect: 360/500 0.103s 0.000s
im_detect: 361/500 0.103s 0.000s
im_detect: 362/500 0.103s 0.000s
im_detect: 363/500 0.103s 0.000s
im_detect: 364/500 0.103s 0.000s
im_detect: 365/500 0.103s 0.000s
im_detect: 366/500 0.103s 0.000s
im_detect: 367/500 0.103s 0.000s
im_detect: 368/500 0.103s 0.000s
im_detect: 369/500 0.103s 0.000s
im_detect: 370/500 0.103s 0.000s
im_detect: 371/500 0.103s 0.000s
im_detect: 372/500 0.103s 0.000s
im_detect: 373/500 0.103s 0.000s
im_detect: 374/500 0.103s 0.000s
im_detect: 375/500 0.103s 0.000s
im_detect: 376/500 0.103s 0.000s
im_detect: 377/500 0.103s 0.000s
im_detect: 378/500 0.103s 0.000s
im_detect: 379/500 0.103s 0.000s
im_detect: 380/500 0.103s 0.000s
im_detect: 381/500 0.103s 0.000s
im_detect: 382/500 0.103s 0.000s
im_detect: 383/500 0.103s 0.000s
im_detect: 384/500 0.103s 0.000s
im_detect: 385/500 0.103s 0.000s
im_detect: 386/500 0.103s 0.000s
im_detect: 387/500 0.103s 0.000s
im_detect: 388/500 0.103s 0.000s
im_detect: 389/500 0.103s 0.000s
im_detect: 390/500 0.103s 0.000s
im_detect: 391/500 0.103s 0.000s
im_detect: 392/500 0.103s 0.000s
im_detect: 393/500 0.103s 0.000s
im_detect: 394/500 0.103s 0.000s
im_detect: 395/500 0.103s 0.000s
im_detect: 396/500 0.103s 0.000s
im_detect: 397/500 0.103s 0.000s
im_detect: 398/500 0.103s 0.000s
im_detect: 399/500 0.103s 0.000s
im_detect: 400/500 0.103s 0.000s
im_detect: 401/500 0.103s 0.000s
im_detect: 402/500 0.103s 0.000s
im_detect: 403/500 0.103s 0.000s
im_detect: 404/500 0.103s 0.000s
im_detect: 405/500 0.103s 0.000s
im_detect: 406/500 0.103s 0.000s
im_detect: 407/500 0.103s 0.000s
im_detect: 408/500 0.103s 0.000s
im_detect: 409/500 0.103s 0.000s
im_detect: 410/500 0.103s 0.000s
im_detect: 411/500 0.103s 0.000s
im_detect: 412/500 0.103s 0.000s
im_detect: 413/500 0.103s 0.000s
im_detect: 414/500 0.103s 0.000s
im_detect: 415/500 0.103s 0.000s
im_detect: 416/500 0.103s 0.000s
im_detect: 417/500 0.103s 0.000s
im_detect: 418/500 0.103s 0.000s
im_detect: 419/500 0.103s 0.000s
im_detect: 420/500 0.103s 0.000s
im_detect: 421/500 0.103s 0.000s
im_detect: 422/500 0.103s 0.000s
im_detect: 423/500 0.103s 0.000s
im_detect: 424/500 0.103s 0.000s
im_detect: 425/500 0.103s 0.000s
im_detect: 426/500 0.103s 0.000s
im_detect: 427/500 0.103s 0.000s
im_detect: 428/500 0.103s 0.000s
im_detect: 429/500 0.103s 0.000s
im_detect: 430/500 0.103s 0.000s
im_detect: 431/500 0.103s 0.000s
im_detect: 432/500 0.103s 0.000s
im_detect: 433/500 0.103s 0.000s
im_detect: 434/500 0.103s 0.000s
im_detect: 435/500 0.103s 0.000s
im_detect: 436/500 0.103s 0.000s
im_detect: 437/500 0.103s 0.000s
im_detect: 438/500 0.103s 0.000s
im_detect: 439/500 0.103s 0.000s
im_detect: 440/500 0.103s 0.000s
im_detect: 441/500 0.103s 0.000s
im_detect: 442/500 0.103s 0.000s
im_detect: 443/500 0.103s 0.000s
im_detect: 444/500 0.103s 0.000s
im_detect: 445/500 0.103s 0.000s
im_detect: 446/500 0.103s 0.000s
im_detect: 447/500 0.103s 0.000s
im_detect: 448/500 0.103s 0.000s
im_detect: 449/500 0.103s 0.000s
im_detect: 450/500 0.103s 0.000s
im_detect: 451/500 0.103s 0.000s
im_detect: 452/500 0.103s 0.000s
im_detect: 453/500 0.103s 0.000s
im_detect: 454/500 0.103s 0.000s
im_detect: 455/500 0.103s 0.000s
im_detect: 456/500 0.103s 0.000s
im_detect: 457/500 0.103s 0.000s
im_detect: 458/500 0.103s 0.000s
im_detect: 459/500 0.103s 0.000s
im_detect: 460/500 0.103s 0.000s
im_detect: 461/500 0.103s 0.000s
im_detect: 462/500 0.103s 0.000s
im_detect: 463/500 0.103s 0.000s
im_detect: 464/500 0.103s 0.000s
im_detect: 465/500 0.103s 0.000s
im_detect: 466/500 0.103s 0.000s
im_detect: 467/500 0.103s 0.000s
im_detect: 468/500 0.103s 0.000s
im_detect: 469/500 0.103s 0.000s
im_detect: 470/500 0.103s 0.000s
im_detect: 471/500 0.103s 0.000s
im_detect: 472/500 0.103s 0.000s
im_detect: 473/500 0.103s 0.000s
im_detect: 474/500 0.103s 0.000s
im_detect: 475/500 0.103s 0.000s
im_detect: 476/500 0.103s 0.000s
im_detect: 477/500 0.103s 0.000s
im_detect: 478/500 0.103s 0.000s
im_detect: 479/500 0.103s 0.000s
im_detect: 480/500 0.103s 0.000s
im_detect: 481/500 0.103s 0.000s
im_detect: 482/500 0.103s 0.000s
im_detect: 483/500 0.103s 0.000s
im_detect: 484/500 0.103s 0.000s
im_detect: 485/500 0.103s 0.000s
im_detect: 486/500 0.103s 0.000s
im_detect: 487/500 0.103s 0.000s
im_detect: 488/500 0.103s 0.000s
im_detect: 489/500 0.103s 0.000s
im_detect: 490/500 0.103s 0.000s
im_detect: 491/500 0.103s 0.000s
im_detect: 492/500 0.103s 0.000s
im_detect: 493/500 0.103s 0.000s
im_detect: 494/500 0.103s 0.000s
im_detect: 495/500 0.103s 0.000s
im_detect: 496/500 0.103s 0.000s
im_detect: 497/500 0.103s 0.000s
im_detect: 498/500 0.103s 0.000s
im_detect: 499/500 0.103s 0.000s
im_detect: 500/500 0.103s 0.000s
Evaluating detections
Writing roost VOC results file
VOC07 metric? Yes
/home/sgabriel/py-faster-rcnn/data/VOCdevkit2007/annotations_cache
AP for roost = 0.3021
Mean AP = 0.3021
~~~~~~~~
Results:
0.302
0.302
~~~~~~~~

--------------------------------------------------------------
Results computed with the **unofficial** Python eval code.
Results should be very close to the official MATLAB eval code.
Recompute with `./tools/reval.py --matlab ...` for your paper.
-- Thanks, The Management
--------------------------------------------------------------

real	1m1.251s
user	2m7.700s
sys	0m3.455s
