+ set -e
+ export PYTHONUNBUFFERED=True
+ PYTHONUNBUFFERED=True
+ GPU_ID=1
+ NET=ZF
+ NET_lc=zf
+ DATASET=cnn_data
+ array=($@)
+ len=3
+ EXTRA_ARGS=
+ EXTRA_ARGS_SLUG=
+ case $DATASET in
+ TRAIN_IMDB=CNNDATA_trainval
+ TEST_IMDB=CNNDATA_test
+ PT_DIR=pascal_voc
+ ITERS=1
++ date +%Y-%m-%d_%H-%M-%S
+ LOG=experiments/logs/faster_rcnn_end2end_ZF_.txt.2017-04-06_18-19-50
+ exec
++ tee -a experiments/logs/faster_rcnn_end2end_ZF_.txt.2017-04-06_18-19-50
tee: experiments/logs/faster_rcnn_end2end_ZF_.txt.2017-04-06_18-19-50: No such file or directory
+ echo Logging output to experiments/logs/faster_rcnn_end2end_ZF_.txt.2017-04-06_18-19-50
Logging output to experiments/logs/faster_rcnn_end2end_ZF_.txt.2017-04-06_18-19-50
+ ../../tools/train_net.py --gpu 1 --solver ../../models/pascal_voc/ZF/faster_rcnn_end2end/solver.prototxt --weights ../../data/imagenet_models/ZF.v2.caffemodel --imdb CNNDATA_trainval --iters 1 --cfg ../../experiments/cfgs/roost.yml
<function <lambda> at 0x2aaad7b422a8>
<function <lambda> at 0x2aaad7b42320>
<function <lambda> at 0x2aaad7b42398>
<function <lambda> at 0x2aaad7b42410>
Called with args:
Namespace(cfg_file='../../experiments/cfgs/roost.yml', gpu_id=1, imdb_name='CNNDATA_trainval', max_iters=1, pretrained_model='../../data/imagenet_models/ZF.v2.caffemodel', randomize=False, set_cfgs=None, solver='../../models/pascal_voc/ZF/faster_rcnn_end2end/solver.prototxt')
Using config:
{'DATA_DIR': '/home/sgabriel/py-faster-rcnn/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 1,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/sgabriel/py-faster-rcnn/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 17,
 'ROOT_DIR': '/home/sgabriel/py-faster-rcnn',
 'TEST': {'BBOX_REG': False,
          'HAS_RPN': True,
          'MAX_SIZE': 600,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 4,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 600,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': False}
../../tools/train_net.py:101: RuntimeWarning: to-Python converter for boost::shared_ptr<caffe::Blob<float> > already registered; second conversion method ignored.
  caffe.set_mode_gpu()
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /home/sgabriel/py-faster-rcnn/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
done
1000 roidb entries
Output will be saved to `/home/sgabriel/py-faster-rcnn/output/default/voc_2007_trainval`
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/1.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 194, 396, 212],
       [169, 173, 184, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/2.jpg', 'flipped': False, 'width': 600, 'boxes': array([[372, 185, 399, 212],
       [165, 166, 189, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 784.,  625.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/3.jpg', 'flipped': False, 'width': 600, 'boxes': array([[368, 179, 407, 218],
       [162, 163, 192, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,   961.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/4.jpg', 'flipped': False, 'width': 600, 'boxes': array([[363, 175, 417, 229],
       [163, 162, 202, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  1600.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/5.jpg', 'flipped': False, 'width': 600, 'boxes': array([[170, 173, 182, 185]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/6.jpg', 'flipped': False, 'width': 600, 'boxes': array([[169, 173, 184, 188],
       [378, 194, 396, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  361.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/7.jpg', 'flipped': False, 'width': 600, 'boxes': array([[165, 166, 189, 190],
       [372, 185, 399, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  784.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/8.jpg', 'flipped': False, 'width': 600, 'boxes': array([[162, 163, 192, 193],
       [368, 179, 407, 218]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/9.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163, 162, 202, 201],
       [363, 175, 417, 229]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,  3025.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/10.jpg', 'flipped': False, 'width': 600, 'boxes': array([[154, 149, 211, 206]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/11.jpg', 'flipped': False, 'width': 600, 'boxes': array([[150, 145, 216, 211]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/12.jpg', 'flipped': False, 'width': 600, 'boxes': array([[145, 140, 220, 215]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/13.jpg', 'flipped': False, 'width': 600, 'boxes': array([[381, 189, 396, 204],
       [226, 388, 241, 403],
       [168, 159, 195, 186],
       [373, 185, 391, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  784.,  361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/14.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 185, 413, 215],
       [220, 373, 262, 415],
       [166, 143, 220, 197],
       [372, 173, 408, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1849.,  3025.,  1369.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/15.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 173, 426, 221],
       [214, 362, 280, 428],
       [159, 137, 231, 209],
       [367, 158, 421, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  4489.,  5329.,  3025.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/16.jpg', 'flipped': False, 'width': 600, 'boxes': array([[203, 364, 284, 445],
       [152, 130, 242, 220],
       [364, 144, 430, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 6724.,  8281.,  4489.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/17.jpg', 'flipped': False, 'width': 600, 'boxes': array([[381, 189, 396, 204],
       [226, 388, 241, 403],
       [168, 159, 195, 186],
       [373, 185, 391, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  784.,  361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/18.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 185, 413, 215],
       [220, 373, 262, 415],
       [166, 143, 220, 197],
       [372, 173, 408, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1849.,  3025.,  1369.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/19.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 173, 426, 221],
       [214, 362, 280, 428],
       [159, 137, 231, 209],
       [367, 158, 421, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  4489.,  5329.,  3025.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/20.jpg', 'flipped': False, 'width': 600, 'boxes': array([[203, 364, 284, 445],
       [152, 130, 242, 220],
       [364, 144, 430, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 6724.,  8281.,  4489.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/21.jpg', 'flipped': False, 'width': 600, 'boxes': array([[143, 116, 257, 230]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 13225.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/22.jpg', 'flipped': False, 'width': 600, 'boxes': array([[381, 189, 396, 204],
       [226, 388, 241, 403],
       [168, 159, 195, 186],
       [373, 185, 391, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  784.,  361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/23.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 185, 413, 215],
       [220, 373, 262, 415],
       [166, 143, 220, 197],
       [372, 173, 408, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1849.,  3025.,  1369.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/24.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 173, 426, 221],
       [214, 362, 280, 428],
       [159, 137, 231, 209],
       [367, 158, 421, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  4489.,  5329.,  3025.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/25.jpg', 'flipped': False, 'width': 600, 'boxes': array([[203, 364, 284, 445],
       [152, 130, 242, 220],
       [364, 144, 430, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 6724.,  8281.,  4489.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/26.jpg', 'flipped': False, 'width': 600, 'boxes': array([[381, 189, 396, 204],
       [226, 388, 241, 403],
       [168, 159, 195, 186],
       [373, 185, 391, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  784.,  361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/27.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 185, 413, 215],
       [220, 373, 262, 415],
       [166, 143, 220, 197],
       [372, 173, 408, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1849.,  3025.,  1369.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/28.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 173, 426, 221],
       [214, 362, 280, 428],
       [159, 137, 231, 209],
       [367, 158, 421, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  4489.,  5329.,  3025.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/29.jpg', 'flipped': False, 'width': 600, 'boxes': array([[371, 194, 383, 206]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/30.jpg', 'flipped': False, 'width': 600, 'boxes': array([[272, 149, 287, 164],
       [155, 172, 182, 199],
       [362, 191, 386, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  784.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/31.jpg', 'flipped': False, 'width': 600, 'boxes': array([[267, 145, 291, 169],
       [149, 166, 188, 205],
       [348, 183, 390, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,  1849.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/32.jpg', 'flipped': False, 'width': 600, 'boxes': array([[259, 137, 298, 176],
       [141, 165, 192, 216],
       [344, 183, 389, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,  2704.,  2116.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/33.jpg', 'flipped': False, 'width': 600, 'boxes': array([[251, 131, 302, 182],
       [132, 156, 201, 225],
       [340, 182, 391, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2704.,  4900.,  2704.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/34.jpg', 'flipped': False, 'width': 600, 'boxes': array([[242, 126, 308, 192],
       [125, 151, 203, 229],
       [328, 173, 397, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  6241.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/35.jpg', 'flipped': False, 'width': 600, 'boxes': array([[228, 118, 315, 205],
       [110, 146, 209, 245],
       [322, 173, 400, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  10000.,   6241.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/36.jpg', 'flipped': False, 'width': 600, 'boxes': array([[272, 149, 287, 164],
       [155, 172, 182, 199],
       [362, 191, 386, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  784.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/37.jpg', 'flipped': False, 'width': 600, 'boxes': array([[267, 145, 291, 169],
       [149, 166, 188, 205],
       [348, 183, 390, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,  1849.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/38.jpg', 'flipped': False, 'width': 600, 'boxes': array([[259, 137, 298, 176],
       [141, 165, 192, 216],
       [344, 183, 389, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,  2704.,  2116.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/39.jpg', 'flipped': False, 'width': 600, 'boxes': array([[251, 131, 302, 182],
       [132, 156, 201, 225],
       [340, 182, 391, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2704.,  4900.,  2704.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/40.jpg', 'flipped': False, 'width': 600, 'boxes': array([[242, 126, 308, 192],
       [125, 151, 203, 229],
       [328, 173, 397, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  6241.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/41.jpg', 'flipped': False, 'width': 600, 'boxes': array([[228, 118, 315, 205],
       [110, 146, 209, 245],
       [322, 173, 400, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  10000.,   6241.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/42.jpg', 'flipped': False, 'width': 600, 'boxes': array([[ 97, 141, 217, 261]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 14641.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/43.jpg', 'flipped': False, 'width': 600, 'boxes': array([[ 93, 136, 219, 262]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 16129.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/44.jpg', 'flipped': False, 'width': 600, 'boxes': array([[272, 149, 287, 164],
       [155, 172, 182, 199],
       [362, 191, 386, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  784.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/45.jpg', 'flipped': False, 'width': 600, 'boxes': array([[267, 145, 291, 169],
       [149, 166, 188, 205],
       [348, 183, 390, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,  1849.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/46.jpg', 'flipped': False, 'width': 600, 'boxes': array([[259, 137, 298, 176],
       [141, 165, 192, 216],
       [344, 183, 389, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,  2704.,  2116.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/47.jpg', 'flipped': False, 'width': 600, 'boxes': array([[251, 131, 302, 182],
       [132, 156, 201, 225],
       [340, 182, 391, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2704.,  4900.,  2704.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/48.jpg', 'flipped': False, 'width': 600, 'boxes': array([[242, 126, 308, 192],
       [125, 151, 203, 229],
       [328, 173, 397, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  6241.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/49.jpg', 'flipped': False, 'width': 600, 'boxes': array([[228, 118, 315, 205],
       [110, 146, 209, 245],
       [322, 173, 400, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  10000.,   6241.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/50.jpg', 'flipped': False, 'width': 600, 'boxes': array([[225, 395, 246, 416],
       [379, 200, 400, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 484.,  484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/51.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 388, 257, 421],
       [381, 196, 393, 208],
       [376, 195, 406, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   169.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/52.jpg', 'flipped': False, 'width': 600, 'boxes': array([[321, 282, 333, 294],
       [223, 388, 268, 433],
       [282, 140, 309, 167],
       [379, 187, 406, 214],
       [382, 192, 433, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,  2116.,   784.,   784.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/53.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/54.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 388, 257, 421],
       [381, 196, 393, 208],
       [376, 195, 406, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   169.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/55.jpg', 'flipped': False, 'width': 600, 'boxes': array([[321, 282, 333, 294],
       [223, 388, 268, 433],
       [282, 140, 309, 167],
       [379, 187, 406, 214],
       [382, 192, 433, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,  2116.,   784.,   784.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/56.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/57.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 337, 269, 382],
       [224, 378, 299, 453],
       [277, 118, 358, 199],
       [367, 174, 436, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  5776.,  6724.,  4900.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/58.jpg', 'flipped': False, 'width': 600, 'boxes': array([[321, 282, 333, 294],
       [223, 388, 268, 433],
       [282, 140, 309, 167],
       [379, 187, 406, 214],
       [382, 192, 433, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,  2116.,   784.,   784.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/59.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/60.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 337, 269, 382],
       [224, 378, 299, 453],
       [277, 118, 358, 199],
       [367, 174, 436, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  5776.,  6724.,  4900.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/61.jpg', 'flipped': False, 'width': 600, 'boxes': array([[229, 398, 241, 410]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/62.jpg', 'flipped': False, 'width': 600, 'boxes': array([[225, 395, 246, 416],
       [379, 200, 400, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 484.,  484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/63.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 388, 257, 421],
       [381, 196, 393, 208],
       [376, 195, 406, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   169.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/64.jpg', 'flipped': False, 'width': 600, 'boxes': array([[321, 282, 333, 294],
       [223, 388, 268, 433],
       [282, 140, 309, 167],
       [379, 187, 406, 214],
       [382, 192, 433, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,  2116.,   784.,   784.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/65.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/66.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 337, 269, 382],
       [224, 378, 299, 453],
       [277, 118, 358, 199],
       [367, 174, 436, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  5776.,  6724.,  4900.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/67.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/68.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 337, 269, 382],
       [224, 378, 299, 453],
       [277, 118, 358, 199],
       [367, 174, 436, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  5776.,  6724.,  4900.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/69.jpg', 'flipped': False, 'width': 600, 'boxes': array([[321, 282, 333, 294],
       [223, 388, 268, 433],
       [282, 140, 309, 167],
       [379, 187, 406, 214],
       [382, 192, 433, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,  2116.,   784.,   784.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/70.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/71.jpg', 'flipped': False, 'width': 600, 'boxes': array([[217, 392, 253, 428],
       [168, 167, 222, 221],
       [377, 194, 395, 212],
       [375, 190, 393, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  3025.,   361.,   361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/72.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 190, 418, 232],
       [373, 187, 394, 208],
       [283, 147, 295, 159],
       [163, 161, 241, 239],
       [215, 385, 260, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.,   484.,   169.,  6241.,  2116.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/73.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/74.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/75.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/76.jpg', 'flipped': False, 'width': 600, 'boxes': array([[217, 392, 253, 428],
       [168, 167, 222, 221],
       [377, 194, 395, 212],
       [375, 190, 393, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  3025.,   361.,   361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/77.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 190, 418, 232],
       [373, 187, 394, 208],
       [283, 147, 295, 159],
       [163, 161, 241, 239],
       [215, 385, 260, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.,   484.,   169.,  6241.,  2116.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/78.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/79.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/80.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/81.jpg', 'flipped': False, 'width': 600, 'boxes': array([[219, 335, 267, 383],
       [267, 118, 357, 208],
       [346, 127, 535, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,   8281.,  36100.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/82.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 190, 418, 232],
       [373, 187, 394, 208],
       [283, 147, 295, 159],
       [163, 161, 241, 239],
       [215, 385, 260, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.,   484.,   169.,  6241.,  2116.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/83.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/84.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/85.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/86.jpg', 'flipped': False, 'width': 600, 'boxes': array([[219, 335, 267, 383],
       [267, 118, 357, 208],
       [346, 127, 535, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,   8281.,  36100.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/87.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/88.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/89.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/90.jpg', 'flipped': False, 'width': 600, 'boxes': array([[170, 170, 206, 206],
       [223, 397, 244, 418]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/91.jpg', 'flipped': False, 'width': 600, 'boxes': array([[217, 392, 253, 428],
       [168, 167, 222, 221],
       [377, 194, 395, 212],
       [375, 190, 393, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  3025.,   361.,   361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/92.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 190, 418, 232],
       [373, 187, 394, 208],
       [283, 147, 295, 159],
       [163, 161, 241, 239],
       [215, 385, 260, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.,   484.,   169.,  6241.,  2116.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/93.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/94.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/95.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/96.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 400, 236, 412]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/97.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 397, 244, 418],
       [170, 170, 206, 206]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/98.jpg', 'flipped': False, 'width': 600, 'boxes': array([[217, 392, 253, 428],
       [168, 167, 222, 221],
       [377, 194, 395, 212],
       [375, 190, 393, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  3025.,   361.,   361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/99.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 190, 418, 232],
       [373, 187, 394, 208],
       [283, 147, 295, 159],
       [163, 161, 241, 239],
       [215, 385, 260, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.,   484.,   169.,  6241.,  2116.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/100.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/101.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/103.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/104.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/105.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/106.jpg', 'flipped': False, 'width': 600, 'boxes': array([[219, 335, 267, 383],
       [267, 118, 357, 208],
       [346, 127, 535, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,   8281.,  36100.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/107.jpg', 'flipped': False, 'width': 600, 'boxes': array([[374, 196, 386, 208],
       [148, 172, 175, 199]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  784.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/108.jpg', 'flipped': False, 'width': 600, 'boxes': array([[214, 398, 229, 413],
       [155, 166, 185, 196],
       [364, 186, 394, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  961.,  961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/109.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 394, 237, 424],
       [152, 158, 191, 197],
       [271, 141, 289, 159],
       [362, 184, 389, 211],
       [347, 167, 422, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.,   361.,   784.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/110.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/111.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/112.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 394, 237, 424],
       [152, 158, 191, 197],
       [271, 141, 289, 159],
       [362, 184, 389, 211],
       [347, 167, 422, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.,   361.,   784.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/113.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/114.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/115.jpg', 'flipped': False, 'width': 600, 'boxes': array([[216, 333, 243, 360],
       [174, 364, 276, 466],
       [113, 102, 275, 264],
       [235, 109, 316, 190],
       [320, 145, 452, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   784.,  10609.,  26569.,   6724.,  17689.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/116.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 394, 237, 424],
       [152, 158, 191, 197],
       [271, 141, 289, 159],
       [362, 184, 389, 211],
       [347, 167, 422, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.,   361.,   784.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/117.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/118.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/119.jpg', 'flipped': False, 'width': 600, 'boxes': array([[216, 333, 243, 360],
       [174, 364, 276, 466],
       [113, 102, 275, 264],
       [235, 109, 316, 190],
       [320, 145, 452, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   784.,  10609.,  26569.,   6724.,  17689.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/120.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224,  97, 326, 199],
       [209, 326, 251, 368]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 10609.,   1849.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/121.jpg', 'flipped': False, 'width': 600, 'boxes': array([[156, 180, 168, 192]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/122.jpg', 'flipped': False, 'width': 600, 'boxes': array([[148, 172, 175, 199],
       [374, 196, 386, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 784.,  169.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/123.jpg', 'flipped': False, 'width': 600, 'boxes': array([[214, 398, 229, 413],
       [155, 166, 185, 196],
       [364, 186, 394, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  961.,  961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/124.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 394, 237, 424],
       [152, 158, 191, 197],
       [271, 141, 289, 159],
       [362, 184, 389, 211],
       [347, 167, 422, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.,   361.,   784.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/125.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/126.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/127.jpg', 'flipped': False, 'width': 600, 'boxes': array([[216, 333, 243, 360],
       [174, 364, 276, 466],
       [113, 102, 275, 264],
       [235, 109, 316, 190],
       [320, 145, 452, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   784.,  10609.,  26569.,   6724.,  17689.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/128.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/129.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/130.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/131.jpg', 'flipped': False, 'width': 600, 'boxes': array([[214, 398, 229, 413],
       [155, 166, 185, 196],
       [364, 186, 394, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  961.,  961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/132.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 394, 237, 424],
       [152, 158, 191, 197],
       [271, 141, 289, 159],
       [362, 184, 389, 211],
       [347, 167, 422, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.,   361.,   784.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/133.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/134.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/135.jpg', 'flipped': False, 'width': 600, 'boxes': array([[216, 333, 243, 360],
       [174, 364, 276, 466],
       [113, 102, 275, 264],
       [235, 109, 316, 190],
       [320, 145, 452, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   784.,  10609.,  26569.,   6724.,  17689.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/136.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/137.jpg', 'flipped': False, 'width': 600, 'boxes': array([[216, 333, 243, 360],
       [174, 364, 276, 466],
       [113, 102, 275, 264],
       [235, 109, 316, 190],
       [320, 145, 452, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   784.,  10609.,  26569.,   6724.,  17689.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/138.jpg', 'flipped': False, 'width': 600, 'boxes': array([[209, 326, 251, 368],
       [224,  97, 326, 199]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1849.,  10609.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/139.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/140.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/141.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 158, 192, 182],
       [228, 392, 240, 404],
       [385, 185, 406, 206],
       [375, 179, 396, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  169.,  484.,  484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/142.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/143.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/144.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 158, 192, 182],
       [228, 392, 240, 404],
       [385, 185, 406, 206],
       [375, 179, 396, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  169.,  484.,  484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/145.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/146.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/147.jpg', 'flipped': False, 'width': 600, 'boxes': array([[285, 109, 339, 163],
       [151,  99, 262, 210],
       [353, 128, 485, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,  12544.,  17689.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/148.jpg', 'flipped': False, 'width': 600, 'boxes': array([[334, 105, 514, 285],
       [147,  95, 279, 227]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 32761.,  17689.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/149.jpg', 'flipped': False, 'width': 600, 'boxes': array([[325,  96, 523, 294],
       [151,  88, 310, 247]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 39601.,  25600.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/150.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 158, 192, 182],
       [228, 392, 240, 404],
       [385, 185, 406, 206],
       [375, 179, 396, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  169.,  484.,  484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/151.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/152.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/153.jpg', 'flipped': False, 'width': 600, 'boxes': array([[285, 109, 339, 163],
       [151,  99, 262, 210],
       [353, 128, 485, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,  12544.,  17689.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/154.jpg', 'flipped': False, 'width': 600, 'boxes': array([[147,  95, 279, 227],
       [334, 105, 514, 285]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 17689.,  32761.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/155.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  88, 310, 247],
       [325,  96, 523, 294]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 25600.,  39601.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/156.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/157.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/158.jpg', 'flipped': False, 'width': 600, 'boxes': array([[285, 109, 339, 163],
       [151,  99, 262, 210],
       [353, 128, 485, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,  12544.,  17689.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/159.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 158, 192, 182],
       [228, 392, 240, 404],
       [385, 185, 406, 206],
       [375, 179, 396, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  169.,  484.,  484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/160.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/161.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/162.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/163.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/164.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 187, 388, 199]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/165.jpg', 'flipped': False, 'width': 600, 'boxes': array([[373, 175, 400, 202]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 784.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/166.jpg', 'flipped': False, 'width': 600, 'boxes': array([[374, 166, 416, 208]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/167.jpg', 'flipped': False, 'width': 600, 'boxes': array([[371, 154, 440, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/168.jpg', 'flipped': False, 'width': 600, 'boxes': array([[371, 147, 458, 234]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 7744.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/169.jpg', 'flipped': False, 'width': 600, 'boxes': array([[369, 134, 480, 245]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/170.jpg', 'flipped': False, 'width': 600, 'boxes': array([[365, 122, 497, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 17689.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/171.jpg', 'flipped': False, 'width': 600, 'boxes': array([[345, 102, 516, 273]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 29584.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/172.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 196, 390, 208]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/173.jpg', 'flipped': False, 'width': 600, 'boxes': array([[371, 195, 407, 231],
       [377, 199, 392, 214]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/174.jpg', 'flipped': False, 'width': 600, 'boxes': array([[283, 151, 292, 160],
       [377, 196, 398, 217],
       [345, 162, 438, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  100.,   484.,  8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/175.jpg', 'flipped': False, 'width': 600, 'boxes': array([[275, 142, 308, 175],
       [375, 191, 393, 209],
       [365, 190, 428, 253],
       [328, 149, 478, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,    361.,   4096.,  22801.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/176.jpg', 'flipped': False, 'width': 600, 'boxes': array([[277, 148, 331, 202],
       [374, 193, 413, 232],
       [336, 176, 447, 287],
       [291, 123, 513, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,   1600.,  12544.,  49729.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/177.jpg', 'flipped': False, 'width': 600, 'boxes': array([[377, 199, 392, 214],
       [371, 195, 407, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  256.,  1369.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/178.jpg', 'flipped': False, 'width': 600, 'boxes': array([[283, 151, 292, 160],
       [377, 196, 398, 217],
       [345, 162, 438, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  100.,   484.,  8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/179.jpg', 'flipped': False, 'width': 600, 'boxes': array([[275, 142, 308, 175],
       [375, 191, 393, 209],
       [365, 190, 428, 253],
       [328, 149, 478, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,    361.,   4096.,  22801.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/180.jpg', 'flipped': False, 'width': 600, 'boxes': array([[277, 148, 331, 202],
       [374, 193, 413, 232],
       [336, 176, 447, 287],
       [291, 123, 513, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,   1600.,  12544.,  49729.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/181.jpg', 'flipped': False, 'width': 600, 'boxes': array([[275, 142, 308, 175],
       [375, 191, 393, 209],
       [365, 190, 428, 253],
       [328, 149, 478, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,    361.,   4096.,  22801.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/182.jpg', 'flipped': False, 'width': 600, 'boxes': array([[277, 148, 331, 202],
       [374, 193, 413, 232],
       [336, 176, 447, 287],
       [291, 123, 513, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,   1600.,  12544.,  49729.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/183.jpg', 'flipped': False, 'width': 600, 'boxes': array([[283, 151, 292, 160],
       [377, 196, 398, 217],
       [345, 162, 438, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  100.,   484.,  8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/184.jpg', 'flipped': False, 'width': 600, 'boxes': array([[275, 142, 308, 175],
       [375, 191, 393, 209],
       [365, 190, 428, 253],
       [328, 149, 478, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,    361.,   4096.,  22801.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/185.jpg', 'flipped': False, 'width': 600, 'boxes': array([[277, 148, 331, 202],
       [374, 193, 413, 232],
       [336, 176, 447, 287],
       [291, 123, 513, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,   1600.,  12544.,  49729.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/186.jpg', 'flipped': False, 'width': 600, 'boxes': array([[279, 157, 345, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/187.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/188.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/189.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/190.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/191.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/192.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/193.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/194.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/195.jpg', 'flipped': False, 'width': 600, 'boxes': array([[372, 194, 399, 221],
       [357, 196, 423, 262]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  4489.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/196.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/197.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/198.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/199.jpg', 'flipped': False, 'width': 600, 'boxes': array([[379, 196, 385, 202]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 49.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/200.jpg', 'flipped': False, 'width': 600, 'boxes': array([[368, 197, 404, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/201.jpg', 'flipped': False, 'width': 600, 'boxes': array([[357, 196, 423, 262],
       [372, 194, 399, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,   784.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/202.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/203.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/204.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/205.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/206.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/207.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/208.jpg', 'flipped': False, 'width': 600, 'boxes': array([[253, 140, 343, 230]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 8281.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/209.jpg', 'flipped': False, 'width': 600, 'boxes': array([[249, 135, 348, 234]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 10000.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/210.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/211.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/212.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/213.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/214.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/215.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/216.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/217.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/218.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/219.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/220.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/221.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/222.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/223.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/224.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/225.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/226.jpg', 'flipped': False, 'width': 600, 'boxes': array([[278, 149, 290, 161],
       [367, 197, 382, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/227.jpg', 'flipped': False, 'width': 600, 'boxes': array([[266, 140, 302, 176]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/228.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/229.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/230.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/231.jpg', 'flipped': False, 'width': 600, 'boxes': array([[186,  46, 246, 106],
       [420, 109, 504, 193],
       [330, 174, 429, 273],
       [229, 121, 331, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3721.,   7225.,  10000.,  10609.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/232.jpg', 'flipped': False, 'width': 600, 'boxes': array([[220, 115, 340, 235],
       [326, 173, 437, 284]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 14641.,  12544.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/233.jpg', 'flipped': False, 'width': 600, 'boxes': array([[214, 111, 346, 243]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 17689.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/234.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 103, 353, 250]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 21904.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/235.jpg', 'flipped': False, 'width': 600, 'boxes': array([[225, 186, 243, 204]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/236.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/237.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/238.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/239.jpg', 'flipped': False, 'width': 600, 'boxes': array([[367, 197, 382, 212],
       [278, 149, 290, 161]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  169.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/240.jpg', 'flipped': False, 'width': 600, 'boxes': array([[360, 193, 387, 220]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 784.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/241.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/242.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/243.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/244.jpg', 'flipped': False, 'width': 600, 'boxes': array([[186,  46, 246, 106],
       [420, 109, 504, 193],
       [330, 174, 429, 273],
       [229, 121, 331, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3721.,   7225.,  10000.,  10609.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/245.jpg', 'flipped': False, 'width': 600, 'boxes': array([[326, 173, 437, 284],
       [220, 115, 340, 235]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.,  14641.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/246.jpg', 'flipped': False, 'width': 600, 'boxes': array([[408, 167, 438, 197]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 961.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/247.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/248.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/249.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/250.jpg', 'flipped': False, 'width': 600, 'boxes': array([[445, 124, 478, 157]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/251.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/252.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/253.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/254.jpg', 'flipped': False, 'width': 600, 'boxes': array([[186,  46, 246, 106],
       [420, 109, 504, 193],
       [330, 174, 429, 273],
       [229, 121, 331, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3721.,   7225.,  10000.,  10609.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/255.jpg', 'flipped': False, 'width': 600, 'boxes': array([[167,  83, 185, 101]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/256.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/257.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/258.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/259.jpg', 'flipped': False, 'width': 600, 'boxes': array([[203,  58, 227,  82]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/260.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/261.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/262.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/263.jpg', 'flipped': False, 'width': 600, 'boxes': array([[186,  46, 246, 106],
       [420, 109, 504, 193],
       [330, 174, 429, 273],
       [229, 121, 331, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3721.,   7225.,  10000.,  10609.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/264.jpg', 'flipped': False, 'width': 600, 'boxes': array([[214, 324, 229, 339]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/265.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/266.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/267.jpg', 'flipped': False, 'width': 600, 'boxes': array([[245, 337, 266, 358]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 484.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/268.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/269.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/270.jpg', 'flipped': False, 'width': 600, 'boxes': array([[277, 141, 295, 159]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/271.jpg', 'flipped': False, 'width': 600, 'boxes': array([[274, 132, 304, 162]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 961.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/272.jpg', 'flipped': False, 'width': 600, 'boxes': array([[269, 121, 314, 166]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/273.jpg', 'flipped': False, 'width': 600, 'boxes': array([[263, 112, 326, 175]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4096.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/274.jpg', 'flipped': False, 'width': 600, 'boxes': array([[261, 104, 336, 179]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/275.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/276.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/277.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/278.jpg', 'flipped': False, 'width': 600, 'boxes': array([[209, 180, 263, 234],
       [257, 134, 335, 212],
       [439, 108, 535, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  6241.,  9409.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/279.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/280.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/281.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/282.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/283.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/284.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/285.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/286.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/287.jpg', 'flipped': False, 'width': 600, 'boxes': array([[209, 180, 263, 234],
       [257, 134, 335, 212],
       [439, 108, 535, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  6241.,  9409.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/288.jpg', 'flipped': False, 'width': 600, 'boxes': array([[248, 120, 365, 237]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 13924.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/289.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/290.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/291.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/292.jpg', 'flipped': False, 'width': 600, 'boxes': array([[209, 180, 263, 234],
       [257, 134, 335, 212],
       [439, 108, 535, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  6241.,  9409.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/293.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/294.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/295.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/296.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/297.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/298.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/299.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/300.jpg', 'flipped': False, 'width': 600, 'boxes': array([[453, 126, 465, 138]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/301.jpg', 'flipped': False, 'width': 600, 'boxes': array([[439, 108, 472, 141],
       [264, 120, 297, 153]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1156.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/302.jpg', 'flipped': False, 'width': 600, 'boxes': array([[420,  91, 477, 148],
       [255,  98, 315, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3721.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/303.jpg', 'flipped': False, 'width': 600, 'boxes': array([[403,  70, 478, 145],
       [246,  71, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.,  7744.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/304.jpg', 'flipped': False, 'width': 600, 'boxes': array([[264, 120, 297, 153],
       [439, 108, 472, 141]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1156.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/305.jpg', 'flipped': False, 'width': 600, 'boxes': array([[255,  98, 315, 158],
       [420,  91, 477, 148]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3364.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/306.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246,  71, 333, 158],
       [403,  70, 478, 145]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 7744.,  5776.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/307.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 194, 387, 203],
       [168, 192, 177, 201],
       [286, 152, 289, 155]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,  100.,   16.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/308.jpg', 'flipped': False, 'width': 600, 'boxes': array([[287, 146, 305, 164],
       [382, 191, 403, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/309.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 191, 407, 215],
       [161, 177, 200, 216],
       [290, 140, 320, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/310.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163, 176, 217, 230],
       [290, 136, 326, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  1369.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/311.jpg', 'flipped': False, 'width': 600, 'boxes': array([[294, 135, 342, 183],
       [186,  96, 207, 117]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,   484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/312.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181,  89, 220, 128],
       [170,  52, 194,  76],
       [287, 132, 356, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,   625.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/313.jpg', 'flipped': False, 'width': 600, 'boxes': array([[179,  87, 236, 144],
       [169,  50, 208,  89],
       [284, 130, 365, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  6724.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/314.jpg', 'flipped': False, 'width': 600, 'boxes': array([[180,  93, 243, 156],
       [167,  48, 218,  99],
       [275, 127, 374, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4096.,   2704.,  10000.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/315.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181,  89, 220, 128],
       [170,  52, 194,  76],
       [287, 132, 356, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,   625.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/316.jpg', 'flipped': False, 'width': 600, 'boxes': array([[179,  87, 236, 144],
       [169,  50, 208,  89],
       [284, 130, 365, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  6724.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/317.jpg', 'flipped': False, 'width': 600, 'boxes': array([[180,  93, 243, 156],
       [167,  48, 218,  99],
       [275, 127, 374, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4096.,   2704.,  10000.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/318.jpg', 'flipped': False, 'width': 600, 'boxes': array([[186,  96, 207, 117],
       [294, 135, 342, 183]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  2401.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/319.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181,  89, 220, 128],
       [170,  52, 194,  76],
       [287, 132, 356, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,   625.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/320.jpg', 'flipped': False, 'width': 600, 'boxes': array([[179,  87, 236, 144],
       [169,  50, 208,  89],
       [284, 130, 365, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  6724.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/321.jpg', 'flipped': False, 'width': 600, 'boxes': array([[180,  93, 243, 156],
       [167,  48, 218,  99],
       [275, 127, 374, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4096.,   2704.,  10000.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/322.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 192, 177, 201],
       [378, 194, 387, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,  100.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/323.jpg', 'flipped': False, 'width': 600, 'boxes': array([[382, 191, 403, 212],
       [166, 180, 190, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 484.,  625.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/324.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 191, 407, 215],
       [161, 177, 200, 216],
       [290, 140, 320, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/325.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163, 176, 217, 230],
       [290, 136, 326, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  1369.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/326.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 192, 177, 201],
       [378, 194, 387, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,  100.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/327.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166, 180, 190, 204],
       [382, 191, 403, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/328.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 191, 407, 215],
       [161, 177, 200, 216],
       [290, 140, 320, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/329.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/330.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/331.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/332.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/333.jpg', 'flipped': False, 'width': 600, 'boxes': array([[402,  93, 513, 204],
       [188, 183, 272, 267],
       [223, 100, 349, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.,   7225.,  16129.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/334.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 101, 354, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 17689.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/335.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/336.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/337.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/338.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/339.jpg', 'flipped': False, 'width': 600, 'boxes': array([[402,  93, 513, 204],
       [188, 183, 272, 267],
       [223, 100, 349, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.,   7225.,  16129.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/340.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/341.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/342.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/343.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/344.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/345.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/346.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/347.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/348.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/349.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/350.jpg', 'flipped': False, 'width': 600, 'boxes': array([[402,  93, 513, 204],
       [188, 183, 272, 267],
       [223, 100, 349, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.,   7225.,  16129.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/351.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/352.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/353.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/354.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/355.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/356.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/357.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/358.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/359.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/360.jpg', 'flipped': False, 'width': 600, 'boxes': array([[279, 144, 291, 156]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/361.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 334, 218, 346],
       [221, 175, 248, 202],
       [452, 120, 485, 153],
       [419, 167, 440, 188],
       [273, 133, 306, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   784.,  1156.,   484.,  1156.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/362.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 323, 228, 356],
       [215, 172, 251, 208],
       [446, 115, 500, 169],
       [407, 158, 455, 206],
       [264, 128, 315, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  3025.,  2401.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/363.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181, 317, 238, 374],
       [203, 164, 266, 227],
       [434, 116, 509, 191],
       [384, 163, 447, 226],
       [254, 121, 329, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  4096.,  5776.,  4096.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/364.jpg', 'flipped': False, 'width': 600, 'boxes': array([[241, 108, 349, 216],
       [166, 315, 250, 399]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 11881.,   7225.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/365.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 334, 218, 346],
       [221, 175, 248, 202],
       [452, 120, 485, 153],
       [419, 167, 440, 188],
       [273, 133, 306, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   784.,  1156.,   484.,  1156.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/366.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 323, 228, 356],
       [215, 172, 251, 208],
       [446, 115, 500, 169],
       [407, 158, 455, 206],
       [264, 128, 315, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  3025.,  2401.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/367.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181, 317, 238, 374],
       [203, 164, 266, 227],
       [434, 116, 509, 191],
       [384, 163, 447, 226],
       [254, 121, 329, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  4096.,  5776.,  4096.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/368.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 334, 218, 346],
       [221, 175, 248, 202],
       [452, 120, 485, 153],
       [419, 167, 440, 188],
       [273, 133, 306, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   784.,  1156.,   484.,  1156.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/369.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 323, 228, 356],
       [215, 172, 251, 208],
       [446, 115, 500, 169],
       [407, 158, 455, 206],
       [264, 128, 315, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  3025.,  2401.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/370.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181, 317, 238, 374],
       [203, 164, 266, 227],
       [434, 116, 509, 191],
       [384, 163, 447, 226],
       [254, 121, 329, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  4096.,  5776.,  4096.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/371.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 334, 218, 346],
       [221, 175, 248, 202],
       [452, 120, 485, 153],
       [419, 167, 440, 188],
       [273, 133, 306, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   784.,  1156.,   484.,  1156.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/372.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 323, 228, 356],
       [215, 172, 251, 208],
       [446, 115, 500, 169],
       [407, 158, 455, 206],
       [264, 128, 315, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  3025.,  2401.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/373.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181, 317, 238, 374],
       [203, 164, 266, 227],
       [434, 116, 509, 191],
       [384, 163, 447, 226],
       [254, 121, 329, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  4096.,  5776.,  4096.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/374.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 334, 218, 346],
       [221, 175, 248, 202],
       [452, 120, 485, 153],
       [419, 167, 440, 188],
       [273, 133, 306, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   784.,  1156.,   484.,  1156.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/375.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 323, 228, 356],
       [215, 172, 251, 208],
       [446, 115, 500, 169],
       [407, 158, 455, 206],
       [264, 128, 315, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  3025.,  2401.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/376.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181, 317, 238, 374],
       [203, 164, 266, 227],
       [434, 116, 509, 191],
       [384, 163, 447, 226],
       [254, 121, 329, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  4096.,  5776.,  4096.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/377.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166, 315, 250, 399],
       [241, 108, 349, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7225.,  11881.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/378.jpg', 'flipped': False, 'width': 600, 'boxes': array([[329, 419, 341, 431],
       [456, 136, 474, 154],
       [419, 181, 431, 193],
       [204, 339, 213, 348],
       [275, 148, 293, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  361.,  169.,  100.,  361.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/379.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/380.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/381.jpg', 'flipped': False, 'width': 600, 'boxes': array([[430, 137, 496, 203],
       [392, 191, 452, 251],
       [169, 348, 253, 432],
       [239, 153, 317, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  3721.,  7225.,  6241.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/382.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/383.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/384.jpg', 'flipped': False, 'width': 600, 'boxes': array([[329, 419, 341, 431],
       [456, 136, 474, 154],
       [419, 181, 431, 193],
       [204, 339, 213, 348],
       [275, 148, 293, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  361.,  169.,  100.,  361.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/385.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/386.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/387.jpg', 'flipped': False, 'width': 600, 'boxes': array([[430, 137, 496, 203],
       [392, 191, 452, 251],
       [169, 348, 253, 432],
       [239, 153, 317, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  3721.,  7225.,  6241.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/388.jpg', 'flipped': False, 'width': 600, 'boxes': array([[162, 353, 267, 458]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 11236.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/389.jpg', 'flipped': False, 'width': 600, 'boxes': array([[329, 419, 341, 431],
       [456, 136, 474, 154],
       [419, 181, 431, 193],
       [204, 339, 213, 348],
       [275, 148, 293, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  361.,  169.,  100.,  361.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/390.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/391.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/392.jpg', 'flipped': False, 'width': 600, 'boxes': array([[430, 137, 496, 203],
       [392, 191, 452, 251],
       [169, 348, 253, 432],
       [239, 153, 317, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  3721.,  7225.,  6241.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/393.jpg', 'flipped': False, 'width': 600, 'boxes': array([[329, 419, 341, 431],
       [456, 136, 474, 154],
       [419, 181, 431, 193],
       [204, 339, 213, 348],
       [275, 148, 293, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  361.,  169.,  100.,  361.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/394.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/395.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/396.jpg', 'flipped': False, 'width': 600, 'boxes': array([[430, 137, 496, 203],
       [392, 191, 452, 251],
       [169, 348, 253, 432],
       [239, 153, 317, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  3721.,  7225.,  6241.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/397.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/398.jpg', 'flipped': False, 'width': 600, 'boxes': array([[329, 419, 341, 431],
       [456, 136, 474, 154],
       [419, 181, 431, 193],
       [204, 339, 213, 348],
       [275, 148, 293, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  361.,  169.,  100.,  361.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/399.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/400.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/401.jpg', 'flipped': False, 'width': 600, 'boxes': array([[279, 142, 291, 154]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/402.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/403.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/404.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/405.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  35, 267, 101],
       [148,  56, 223, 131],
       [419,  95, 494, 170],
       [366, 144, 441, 219],
       [228,  91, 330, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4489.,   5776.,   5776.,   5776.,  10609.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/406.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/407.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/408.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/409.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/410.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/411.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/412.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/413.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/414.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  35, 267, 101],
       [148,  56, 223, 131],
       [419,  95, 494, 170],
       [366, 144, 441, 219],
       [228,  91, 330, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4489.,   5776.,   5776.,   5776.,  10609.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/415.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  31, 281, 118],
       [134,  47, 242, 155],
       [353, 138, 446, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  11881.,   8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/416.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/417.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/418.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/419.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  35, 267, 101],
       [148,  56, 223, 131],
       [419,  95, 494, 170],
       [366, 144, 441, 219],
       [228,  91, 330, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4489.,   5776.,   5776.,   5776.,  10609.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/420.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/421.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/422.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/423.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/424.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/425.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/426.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  35, 267, 101],
       [148,  56, 223, 131],
       [419,  95, 494, 170],
       [366, 144, 441, 219],
       [228,  91, 330, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4489.,   5776.,   5776.,   5776.,  10609.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/427.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  31, 281, 118],
       [134,  47, 242, 155],
       [353, 138, 446, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  11881.,   8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/428.jpg', 'flipped': False, 'width': 600, 'boxes': array([[133,  40, 259, 166]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 16129.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/429.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/430.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/431.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/432.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  35, 267, 101],
       [148,  56, 223, 131],
       [419,  95, 494, 170],
       [366, 144, 441, 219],
       [228,  91, 330, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4489.,   5776.,   5776.,   5776.,  10609.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/433.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  31, 281, 118],
       [134,  47, 242, 155],
       [353, 138, 446, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  11881.,   8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/434.jpg', 'flipped': False, 'width': 600, 'boxes': array([[276, 120, 306, 150],
       [206, 322, 221, 337]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 961.,  256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/435.jpg', 'flipped': False, 'width': 600, 'boxes': array([[272, 100, 329, 157],
       [196, 297, 241, 342]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  2116.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/436.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 322, 221, 337],
       [276, 120, 306, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  961.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/437.jpg', 'flipped': False, 'width': 600, 'boxes': array([[196, 297, 241, 342],
       [272, 100, 329, 157]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/438.jpg', 'flipped': False, 'width': 600, 'boxes': array([[275, 142, 290, 157],
       [221, 186, 236, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/439.jpg', 'flipped': False, 'width': 600, 'boxes': array([[202, 335, 217, 350],
       [215, 185, 239, 209],
       [269, 141, 293, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  625.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/440.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 332, 225, 362],
       [206, 184, 242, 220],
       [260, 134, 299, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1369.,  1600.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/441.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194, 332, 230, 368],
       [196, 178, 247, 229],
       [253, 130, 307, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2704.,  3025.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/442.jpg', 'flipped': False, 'width': 600, 'boxes': array([[182, 325, 236, 379],
       [186, 175, 252, 241],
       [249, 130, 309, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4489.,  3721.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/443.jpg', 'flipped': False, 'width': 600, 'boxes': array([[240, 128, 312, 200]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5329.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/444.jpg', 'flipped': False, 'width': 600, 'boxes': array([[228, 125, 312, 209]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 7225.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/445.jpg', 'flipped': False, 'width': 600, 'boxes': array([[218, 118, 323, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 11236.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/446.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 186, 236, 201],
       [275, 142, 290, 157]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/447.jpg', 'flipped': False, 'width': 600, 'boxes': array([[202, 335, 217, 350],
       [215, 185, 239, 209],
       [269, 141, 293, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  625.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/448.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 332, 225, 362],
       [206, 184, 242, 220],
       [260, 134, 299, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1369.,  1600.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/449.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194, 332, 230, 368],
       [196, 178, 247, 229],
       [253, 130, 307, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2704.,  3025.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/450.jpg', 'flipped': False, 'width': 600, 'boxes': array([[182, 325, 236, 379],
       [186, 175, 252, 241],
       [249, 130, 309, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4489.,  3721.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/451.jpg', 'flipped': False, 'width': 600, 'boxes': array([[202, 335, 217, 350],
       [215, 185, 239, 209],
       [269, 141, 293, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  625.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/452.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 332, 225, 362],
       [206, 184, 242, 220],
       [260, 134, 299, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1369.,  1600.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/453.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194, 332, 230, 368],
       [196, 178, 247, 229],
       [253, 130, 307, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2704.,  3025.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/454.jpg', 'flipped': False, 'width': 600, 'boxes': array([[182, 325, 236, 379],
       [186, 175, 252, 241],
       [249, 130, 309, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4489.,  3721.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/455.jpg', 'flipped': False, 'width': 600, 'boxes': array([[393, 168, 429, 204],
       [201, 336, 213, 348],
       [220, 191, 229, 200],
       [268, 142, 289, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   169.,   100.,   484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/456.jpg', 'flipped': False, 'width': 600, 'boxes': array([[382, 166, 430, 214],
       [188, 333, 215, 360],
       [209, 192, 227, 210],
       [257, 139, 290, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,   784.,   361.,  1156.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/457.jpg', 'flipped': False, 'width': 600, 'boxes': array([[364, 161, 430, 227],
       [179, 336, 212, 369],
       [193, 189, 229, 225],
       [244, 134, 295, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  1156.,  1369.,  2704.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/458.jpg', 'flipped': False, 'width': 600, 'boxes': array([[357, 160, 432, 235],
       [162, 332, 216, 386],
       [190, 194, 223, 227],
       [234, 130, 300, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.,  3025.,  1156.,  4489.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/459.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 125, 304, 206],
       [153, 338, 213, 398]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 6724.,  3721.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/460.jpg', 'flipped': False, 'width': 600, 'boxes': array([[215, 120, 308, 213],
       [141, 337, 213, 409]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 8836.,  5329.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/461.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 115, 312, 220]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 11236.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/462.jpg', 'flipped': False, 'width': 600, 'boxes': array([[197, 109, 323, 235]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 16129.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/463.jpg', 'flipped': False, 'width': 600, 'boxes': array([[183,  95, 342, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 25600.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/464.jpg', 'flipped': False, 'width': 600, 'boxes': array([[393, 168, 429, 204],
       [201, 336, 213, 348],
       [220, 191, 229, 200],
       [268, 142, 289, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   169.,   100.,   484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/465.jpg', 'flipped': False, 'width': 600, 'boxes': array([[382, 166, 430, 214],
       [188, 333, 215, 360],
       [209, 192, 227, 210],
       [257, 139, 290, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,   784.,   361.,  1156.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/466.jpg', 'flipped': False, 'width': 600, 'boxes': array([[364, 161, 430, 227],
       [179, 336, 212, 369],
       [193, 189, 229, 225],
       [244, 134, 295, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  1156.,  1369.,  2704.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/467.jpg', 'flipped': False, 'width': 600, 'boxes': array([[357, 160, 432, 235],
       [162, 332, 216, 386],
       [190, 194, 223, 227],
       [234, 130, 300, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.,  3025.,  1156.,  4489.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/468.jpg', 'flipped': False, 'width': 600, 'boxes': array([[393, 168, 429, 204],
       [201, 336, 213, 348],
       [220, 191, 229, 200],
       [268, 142, 289, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   169.,   100.,   484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/469.jpg', 'flipped': False, 'width': 600, 'boxes': array([[382, 166, 430, 214],
       [188, 333, 215, 360],
       [209, 192, 227, 210],
       [257, 139, 290, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,   784.,   361.,  1156.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/470.jpg', 'flipped': False, 'width': 600, 'boxes': array([[364, 161, 430, 227],
       [179, 336, 212, 369],
       [193, 189, 229, 225],
       [244, 134, 295, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  1156.,  1369.,  2704.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/471.jpg', 'flipped': False, 'width': 600, 'boxes': array([[357, 160, 432, 235],
       [162, 332, 216, 386],
       [190, 194, 223, 227],
       [234, 130, 300, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.,  3025.,  1156.,  4489.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/472.jpg', 'flipped': False, 'width': 600, 'boxes': array([[153, 338, 213, 398],
       [223, 125, 304, 206]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  6724.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/473.jpg', 'flipped': False, 'width': 600, 'boxes': array([[141, 337, 213, 409],
       [215, 120, 308, 213]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5329.,  8836.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/474.jpg', 'flipped': False, 'width': 600, 'boxes': array([[407, 169, 428, 190]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 484.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/475.jpg', 'flipped': False, 'width': 600, 'boxes': array([[393, 168, 429, 204],
       [201, 336, 213, 348],
       [220, 191, 229, 200],
       [268, 142, 289, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   169.,   100.,   484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/476.jpg', 'flipped': False, 'width': 600, 'boxes': array([[382, 166, 430, 214],
       [188, 333, 215, 360],
       [209, 192, 227, 210],
       [257, 139, 290, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,   784.,   361.,  1156.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/477.jpg', 'flipped': False, 'width': 600, 'boxes': array([[364, 161, 430, 227],
       [179, 336, 212, 369],
       [193, 189, 229, 225],
       [244, 134, 295, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  1156.,  1369.,  2704.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/478.jpg', 'flipped': False, 'width': 600, 'boxes': array([[357, 160, 432, 235],
       [162, 332, 216, 386],
       [190, 194, 223, 227],
       [234, 130, 300, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.,  3025.,  1156.,  4489.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/479.jpg', 'flipped': False, 'width': 600, 'boxes': array([[227, 186, 236, 195],
       [421, 173, 427, 179],
       [274, 138, 292, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,   49.,  361.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/480.jpg', 'flipped': False, 'width': 600, 'boxes': array([[330, 305, 336, 311],
       [220, 184, 244, 208],
       [413, 170, 431, 188],
       [197, 330, 215, 348],
       [269, 133, 299, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  49.,  625.,  361.,  361.,  961.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/481.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 299, 341, 320],
       [216, 183, 252, 219],
       [405, 162, 441, 198],
       [192, 328, 219, 355],
       [258, 125, 312, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  1369.,   784.,  3025.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/482.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 296, 347, 332],
       [209, 183, 257, 231],
       [395, 155, 449, 209],
       [183, 327, 222, 366],
       [249, 114, 324, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2401.,  3025.,  1600.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/483.jpg', 'flipped': False, 'width': 600, 'boxes': array([[300, 288, 357, 345],
       [385, 144, 460, 219],
       [179, 325, 230, 376],
       [243, 113, 330, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  5776.,  2704.,  7744.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/484.jpg', 'flipped': False, 'width': 600, 'boxes': array([[232, 105, 343, 216]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/485.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 101, 350, 227]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 16129.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/486.jpg', 'flipped': False, 'width': 600, 'boxes': array([[217,  95, 355, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 19321.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/487.jpg', 'flipped': False, 'width': 600, 'boxes': array([[212,  93, 359, 240]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 21904.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/488.jpg', 'flipped': False, 'width': 600, 'boxes': array([[204,  90, 363, 249]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 25600.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/489.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  92, 363, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 26569.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/490.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195,  86, 369, 260]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 30625.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/491.jpg', 'flipped': False, 'width': 600, 'boxes': array([[330, 305, 336, 311],
       [220, 184, 244, 208],
       [413, 170, 431, 188],
       [197, 330, 215, 348],
       [269, 133, 299, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  49.,  625.,  361.,  361.,  961.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/492.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 299, 341, 320],
       [216, 183, 252, 219],
       [405, 162, 441, 198],
       [192, 328, 219, 355],
       [258, 125, 312, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  1369.,   784.,  3025.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/493.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 296, 347, 332],
       [209, 183, 257, 231],
       [395, 155, 449, 209],
       [183, 327, 222, 366],
       [249, 114, 324, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2401.,  3025.,  1600.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/494.jpg', 'flipped': False, 'width': 600, 'boxes': array([[300, 288, 357, 345],
       [385, 144, 460, 219],
       [179, 325, 230, 376],
       [243, 113, 330, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  5776.,  2704.,  7744.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/495.jpg', 'flipped': False, 'width': 600, 'boxes': array([[227, 186, 236, 195],
       [421, 173, 427, 179],
       [274, 138, 292, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,   49.,  361.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/496.jpg', 'flipped': False, 'width': 600, 'boxes': array([[330, 305, 336, 311],
       [220, 184, 244, 208],
       [413, 170, 431, 188],
       [197, 330, 215, 348],
       [269, 133, 299, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  49.,  625.,  361.,  361.,  961.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/497.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 299, 341, 320],
       [216, 183, 252, 219],
       [405, 162, 441, 198],
       [192, 328, 219, 355],
       [258, 125, 312, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  1369.,   784.,  3025.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/498.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 296, 347, 332],
       [209, 183, 257, 231],
       [395, 155, 449, 209],
       [183, 327, 222, 366],
       [249, 114, 324, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2401.,  3025.,  1600.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/499.jpg', 'flipped': False, 'width': 600, 'boxes': array([[300, 288, 357, 345],
       [385, 144, 460, 219],
       [179, 325, 230, 376],
       [243, 113, 330, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  5776.,  2704.,  7744.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/500.jpg', 'flipped': False, 'width': 600, 'boxes': array([[227, 186, 236, 195],
       [421, 173, 427, 179],
       [274, 138, 292, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,   49.,  361.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/501.jpg', 'flipped': False, 'width': 600, 'boxes': array([[330, 305, 336, 311],
       [220, 184, 244, 208],
       [413, 170, 431, 188],
       [197, 330, 215, 348],
       [269, 133, 299, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  49.,  625.,  361.,  361.,  961.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/1.jpg', 'flipped': True, 'width': 600, 'boxes': array([[203, 194, 221, 212],
       [415, 173, 430, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/2.jpg', 'flipped': True, 'width': 600, 'boxes': array([[200, 185, 227, 212],
       [410, 166, 434, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/3.jpg', 'flipped': True, 'width': 600, 'boxes': array([[192, 179, 231, 218],
       [407, 163, 437, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/4.jpg', 'flipped': True, 'width': 600, 'boxes': array([[182, 175, 236, 229],
       [397, 162, 436, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/5.jpg', 'flipped': True, 'width': 600, 'boxes': array([[417, 173, 429, 185]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/6.jpg', 'flipped': True, 'width': 600, 'boxes': array([[415, 173, 430, 188],
       [203, 194, 221, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/7.jpg', 'flipped': True, 'width': 600, 'boxes': array([[410, 166, 434, 190],
       [200, 185, 227, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/8.jpg', 'flipped': True, 'width': 600, 'boxes': array([[407, 163, 437, 193],
       [192, 179, 231, 218]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/9.jpg', 'flipped': True, 'width': 600, 'boxes': array([[397, 162, 436, 201],
       [182, 175, 236, 229]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/10.jpg', 'flipped': True, 'width': 600, 'boxes': array([[388, 149, 445, 206]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/11.jpg', 'flipped': True, 'width': 600, 'boxes': array([[383, 145, 449, 211]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/12.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379, 140, 454, 215]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/13.jpg', 'flipped': True, 'width': 600, 'boxes': array([[203, 189, 218, 204],
       [358, 388, 373, 403],
       [404, 159, 431, 186],
       [208, 185, 226, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/14.jpg', 'flipped': True, 'width': 600, 'boxes': array([[186, 185, 216, 215],
       [337, 373, 379, 415],
       [379, 143, 433, 197],
       [191, 173, 227, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/15.jpg', 'flipped': True, 'width': 600, 'boxes': array([[173, 173, 221, 221],
       [319, 362, 385, 428],
       [368, 137, 440, 209],
       [178, 158, 232, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/16.jpg', 'flipped': True, 'width': 600, 'boxes': array([[315, 364, 396, 445],
       [357, 130, 447, 220],
       [169, 144, 235, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/17.jpg', 'flipped': True, 'width': 600, 'boxes': array([[203, 189, 218, 204],
       [358, 388, 373, 403],
       [404, 159, 431, 186],
       [208, 185, 226, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/18.jpg', 'flipped': True, 'width': 600, 'boxes': array([[186, 185, 216, 215],
       [337, 373, 379, 415],
       [379, 143, 433, 197],
       [191, 173, 227, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/19.jpg', 'flipped': True, 'width': 600, 'boxes': array([[173, 173, 221, 221],
       [319, 362, 385, 428],
       [368, 137, 440, 209],
       [178, 158, 232, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/20.jpg', 'flipped': True, 'width': 600, 'boxes': array([[315, 364, 396, 445],
       [357, 130, 447, 220],
       [169, 144, 235, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/21.jpg', 'flipped': True, 'width': 600, 'boxes': array([[342, 116, 456, 230]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/22.jpg', 'flipped': True, 'width': 600, 'boxes': array([[203, 189, 218, 204],
       [358, 388, 373, 403],
       [404, 159, 431, 186],
       [208, 185, 226, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/23.jpg', 'flipped': True, 'width': 600, 'boxes': array([[186, 185, 216, 215],
       [337, 373, 379, 415],
       [379, 143, 433, 197],
       [191, 173, 227, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/24.jpg', 'flipped': True, 'width': 600, 'boxes': array([[173, 173, 221, 221],
       [319, 362, 385, 428],
       [368, 137, 440, 209],
       [178, 158, 232, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/25.jpg', 'flipped': True, 'width': 600, 'boxes': array([[315, 364, 396, 445],
       [357, 130, 447, 220],
       [169, 144, 235, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/26.jpg', 'flipped': True, 'width': 600, 'boxes': array([[203, 189, 218, 204],
       [358, 388, 373, 403],
       [404, 159, 431, 186],
       [208, 185, 226, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/27.jpg', 'flipped': True, 'width': 600, 'boxes': array([[186, 185, 216, 215],
       [337, 373, 379, 415],
       [379, 143, 433, 197],
       [191, 173, 227, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/28.jpg', 'flipped': True, 'width': 600, 'boxes': array([[173, 173, 221, 221],
       [319, 362, 385, 428],
       [368, 137, 440, 209],
       [178, 158, 232, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/29.jpg', 'flipped': True, 'width': 600, 'boxes': array([[216, 194, 228, 206]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/30.jpg', 'flipped': True, 'width': 600, 'boxes': array([[312, 149, 327, 164],
       [417, 172, 444, 199],
       [213, 191, 237, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/31.jpg', 'flipped': True, 'width': 600, 'boxes': array([[308, 145, 332, 169],
       [411, 166, 450, 205],
       [209, 183, 251, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/32.jpg', 'flipped': True, 'width': 600, 'boxes': array([[301, 137, 340, 176],
       [407, 165, 458, 216],
       [210, 183, 255, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/33.jpg', 'flipped': True, 'width': 600, 'boxes': array([[297, 131, 348, 182],
       [398, 156, 467, 225],
       [208, 182, 259, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/34.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 126, 357, 192],
       [396, 151, 474, 229],
       [202, 173, 271, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/35.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 118, 371, 205],
       [390, 146, 489, 245],
       [199, 173, 277, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/36.jpg', 'flipped': True, 'width': 600, 'boxes': array([[312, 149, 327, 164],
       [417, 172, 444, 199],
       [213, 191, 237, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/37.jpg', 'flipped': True, 'width': 600, 'boxes': array([[308, 145, 332, 169],
       [411, 166, 450, 205],
       [209, 183, 251, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/38.jpg', 'flipped': True, 'width': 600, 'boxes': array([[301, 137, 340, 176],
       [407, 165, 458, 216],
       [210, 183, 255, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/39.jpg', 'flipped': True, 'width': 600, 'boxes': array([[297, 131, 348, 182],
       [398, 156, 467, 225],
       [208, 182, 259, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/40.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 126, 357, 192],
       [396, 151, 474, 229],
       [202, 173, 271, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/41.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 118, 371, 205],
       [390, 146, 489, 245],
       [199, 173, 277, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/42.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 141, 502, 261]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/43.jpg', 'flipped': True, 'width': 600, 'boxes': array([[380, 136, 506, 262]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/44.jpg', 'flipped': True, 'width': 600, 'boxes': array([[312, 149, 327, 164],
       [417, 172, 444, 199],
       [213, 191, 237, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/45.jpg', 'flipped': True, 'width': 600, 'boxes': array([[308, 145, 332, 169],
       [411, 166, 450, 205],
       [209, 183, 251, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/46.jpg', 'flipped': True, 'width': 600, 'boxes': array([[301, 137, 340, 176],
       [407, 165, 458, 216],
       [210, 183, 255, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/47.jpg', 'flipped': True, 'width': 600, 'boxes': array([[297, 131, 348, 182],
       [398, 156, 467, 225],
       [208, 182, 259, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/48.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 126, 357, 192],
       [396, 151, 474, 229],
       [202, 173, 271, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/49.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 118, 371, 205],
       [390, 146, 489, 245],
       [199, 173, 277, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/50.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 395, 374, 416],
       [199, 200, 220, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/51.jpg', 'flipped': True, 'width': 600, 'boxes': array([[342, 388, 375, 421],
       [206, 196, 218, 208],
       [193, 195, 223, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/52.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266, 282, 278, 294],
       [331, 388, 376, 433],
       [290, 140, 317, 167],
       [193, 187, 220, 214],
       [166, 192, 217, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/53.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/54.jpg', 'flipped': True, 'width': 600, 'boxes': array([[342, 388, 375, 421],
       [206, 196, 218, 208],
       [193, 195, 223, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/55.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266, 282, 278, 294],
       [331, 388, 376, 433],
       [290, 140, 317, 167],
       [193, 187, 220, 214],
       [166, 192, 217, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/56.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/57.jpg', 'flipped': True, 'width': 600, 'boxes': array([[330, 337, 375, 382],
       [300, 378, 375, 453],
       [241, 118, 322, 199],
       [163, 174, 232, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/58.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266, 282, 278, 294],
       [331, 388, 376, 433],
       [290, 140, 317, 167],
       [193, 187, 220, 214],
       [166, 192, 217, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/59.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/60.jpg', 'flipped': True, 'width': 600, 'boxes': array([[330, 337, 375, 382],
       [300, 378, 375, 453],
       [241, 118, 322, 199],
       [163, 174, 232, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/61.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 398, 370, 410]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/62.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 395, 374, 416],
       [199, 200, 220, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/63.jpg', 'flipped': True, 'width': 600, 'boxes': array([[342, 388, 375, 421],
       [206, 196, 218, 208],
       [193, 195, 223, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/64.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266, 282, 278, 294],
       [331, 388, 376, 433],
       [290, 140, 317, 167],
       [193, 187, 220, 214],
       [166, 192, 217, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/65.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/66.jpg', 'flipped': True, 'width': 600, 'boxes': array([[330, 337, 375, 382],
       [300, 378, 375, 453],
       [241, 118, 322, 199],
       [163, 174, 232, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/67.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/68.jpg', 'flipped': True, 'width': 600, 'boxes': array([[330, 337, 375, 382],
       [300, 378, 375, 453],
       [241, 118, 322, 199],
       [163, 174, 232, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/69.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266, 282, 278, 294],
       [331, 388, 376, 433],
       [290, 140, 317, 167],
       [193, 187, 220, 214],
       [166, 192, 217, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/70.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/71.jpg', 'flipped': True, 'width': 600, 'boxes': array([[346, 392, 382, 428],
       [377, 167, 431, 221],
       [204, 194, 222, 212],
       [206, 190, 224, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/72.jpg', 'flipped': True, 'width': 600, 'boxes': array([[181, 190, 223, 232],
       [205, 187, 226, 208],
       [304, 147, 316, 159],
       [358, 161, 436, 239],
       [339, 385, 384, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/73.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/74.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/75.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/76.jpg', 'flipped': True, 'width': 600, 'boxes': array([[346, 392, 382, 428],
       [377, 167, 431, 221],
       [204, 194, 222, 212],
       [206, 190, 224, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/77.jpg', 'flipped': True, 'width': 600, 'boxes': array([[181, 190, 223, 232],
       [205, 187, 226, 208],
       [304, 147, 316, 159],
       [358, 161, 436, 239],
       [339, 385, 384, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/78.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/79.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/80.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/81.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332, 335, 380, 383],
       [242, 118, 332, 208],
       [ 64, 127, 253, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/82.jpg', 'flipped': True, 'width': 600, 'boxes': array([[181, 190, 223, 232],
       [205, 187, 226, 208],
       [304, 147, 316, 159],
       [358, 161, 436, 239],
       [339, 385, 384, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/83.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/84.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/85.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/86.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332, 335, 380, 383],
       [242, 118, 332, 208],
       [ 64, 127, 253, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/87.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/88.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/89.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/90.jpg', 'flipped': True, 'width': 600, 'boxes': array([[393, 170, 429, 206],
       [355, 397, 376, 418]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/91.jpg', 'flipped': True, 'width': 600, 'boxes': array([[346, 392, 382, 428],
       [377, 167, 431, 221],
       [204, 194, 222, 212],
       [206, 190, 224, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/92.jpg', 'flipped': True, 'width': 600, 'boxes': array([[181, 190, 223, 232],
       [205, 187, 226, 208],
       [304, 147, 316, 159],
       [358, 161, 436, 239],
       [339, 385, 384, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/93.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/94.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/95.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/96.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 400, 375, 412]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/97.jpg', 'flipped': True, 'width': 600, 'boxes': array([[355, 397, 376, 418],
       [393, 170, 429, 206]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/98.jpg', 'flipped': True, 'width': 600, 'boxes': array([[346, 392, 382, 428],
       [377, 167, 431, 221],
       [204, 194, 222, 212],
       [206, 190, 224, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/99.jpg', 'flipped': True, 'width': 600, 'boxes': array([[181, 190, 223, 232],
       [205, 187, 226, 208],
       [304, 147, 316, 159],
       [358, 161, 436, 239],
       [339, 385, 384, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/100.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/101.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/103.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/104.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/105.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/106.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332, 335, 380, 383],
       [242, 118, 332, 208],
       [ 64, 127, 253, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/107.jpg', 'flipped': True, 'width': 600, 'boxes': array([[213, 196, 225, 208],
       [424, 172, 451, 199]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/108.jpg', 'flipped': True, 'width': 600, 'boxes': array([[370, 398, 385, 413],
       [414, 166, 444, 196],
       [205, 186, 235, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/109.jpg', 'flipped': True, 'width': 600, 'boxes': array([[362, 394, 392, 424],
       [408, 158, 447, 197],
       [310, 141, 328, 159],
       [210, 184, 237, 211],
       [177, 167, 252, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/110.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/111.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/112.jpg', 'flipped': True, 'width': 600, 'boxes': array([[362, 394, 392, 424],
       [408, 158, 447, 197],
       [310, 141, 328, 159],
       [210, 184, 237, 211],
       [177, 167, 252, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/113.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/114.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/115.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 333, 383, 360],
       [323, 364, 425, 466],
       [324, 102, 486, 264],
       [283, 109, 364, 190],
       [147, 145, 279, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/116.jpg', 'flipped': True, 'width': 600, 'boxes': array([[362, 394, 392, 424],
       [408, 158, 447, 197],
       [310, 141, 328, 159],
       [210, 184, 237, 211],
       [177, 167, 252, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/117.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/118.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/119.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 333, 383, 360],
       [323, 364, 425, 466],
       [324, 102, 486, 264],
       [283, 109, 364, 190],
       [147, 145, 279, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/120.jpg', 'flipped': True, 'width': 600, 'boxes': array([[273,  97, 375, 199],
       [348, 326, 390, 368]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/121.jpg', 'flipped': True, 'width': 600, 'boxes': array([[431, 180, 443, 192]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/122.jpg', 'flipped': True, 'width': 600, 'boxes': array([[424, 172, 451, 199],
       [213, 196, 225, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/123.jpg', 'flipped': True, 'width': 600, 'boxes': array([[370, 398, 385, 413],
       [414, 166, 444, 196],
       [205, 186, 235, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/124.jpg', 'flipped': True, 'width': 600, 'boxes': array([[362, 394, 392, 424],
       [408, 158, 447, 197],
       [310, 141, 328, 159],
       [210, 184, 237, 211],
       [177, 167, 252, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/125.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/126.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/127.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 333, 383, 360],
       [323, 364, 425, 466],
       [324, 102, 486, 264],
       [283, 109, 364, 190],
       [147, 145, 279, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/128.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/129.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/130.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/131.jpg', 'flipped': True, 'width': 600, 'boxes': array([[370, 398, 385, 413],
       [414, 166, 444, 196],
       [205, 186, 235, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/132.jpg', 'flipped': True, 'width': 600, 'boxes': array([[362, 394, 392, 424],
       [408, 158, 447, 197],
       [310, 141, 328, 159],
       [210, 184, 237, 211],
       [177, 167, 252, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/133.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/134.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/135.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 333, 383, 360],
       [323, 364, 425, 466],
       [324, 102, 486, 264],
       [283, 109, 364, 190],
       [147, 145, 279, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/136.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/137.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 333, 383, 360],
       [323, 364, 425, 466],
       [324, 102, 486, 264],
       [283, 109, 364, 190],
       [147, 145, 279, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/138.jpg', 'flipped': True, 'width': 600, 'boxes': array([[348, 326, 390, 368],
       [273,  97, 375, 199]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/139.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/140.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/141.jpg', 'flipped': True, 'width': 600, 'boxes': array([[407, 158, 431, 182],
       [359, 392, 371, 404],
       [193, 185, 214, 206],
       [203, 179, 224, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/142.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/143.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/144.jpg', 'flipped': True, 'width': 600, 'boxes': array([[407, 158, 431, 182],
       [359, 392, 371, 404],
       [193, 185, 214, 206],
       [203, 179, 224, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/145.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/146.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/147.jpg', 'flipped': True, 'width': 600, 'boxes': array([[260, 109, 314, 163],
       [337,  99, 448, 210],
       [114, 128, 246, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/148.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 85, 105, 265, 285],
       [320,  95, 452, 227]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/149.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 76,  96, 274, 294],
       [289,  88, 448, 247]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/150.jpg', 'flipped': True, 'width': 600, 'boxes': array([[407, 158, 431, 182],
       [359, 392, 371, 404],
       [193, 185, 214, 206],
       [203, 179, 224, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/151.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/152.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/153.jpg', 'flipped': True, 'width': 600, 'boxes': array([[260, 109, 314, 163],
       [337,  99, 448, 210],
       [114, 128, 246, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/154.jpg', 'flipped': True, 'width': 600, 'boxes': array([[320,  95, 452, 227],
       [ 85, 105, 265, 285]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/155.jpg', 'flipped': True, 'width': 600, 'boxes': array([[289,  88, 448, 247],
       [ 76,  96, 274, 294]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/156.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/157.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/158.jpg', 'flipped': True, 'width': 600, 'boxes': array([[260, 109, 314, 163],
       [337,  99, 448, 210],
       [114, 128, 246, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/159.jpg', 'flipped': True, 'width': 600, 'boxes': array([[407, 158, 431, 182],
       [359, 392, 371, 404],
       [193, 185, 214, 206],
       [203, 179, 224, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/160.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/161.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/162.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/163.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/164.jpg', 'flipped': True, 'width': 600, 'boxes': array([[211, 187, 223, 199]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/165.jpg', 'flipped': True, 'width': 600, 'boxes': array([[199, 175, 226, 202]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/166.jpg', 'flipped': True, 'width': 600, 'boxes': array([[183, 166, 225, 208]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/167.jpg', 'flipped': True, 'width': 600, 'boxes': array([[159, 154, 228, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/168.jpg', 'flipped': True, 'width': 600, 'boxes': array([[141, 147, 228, 234]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/169.jpg', 'flipped': True, 'width': 600, 'boxes': array([[119, 134, 230, 245]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/170.jpg', 'flipped': True, 'width': 600, 'boxes': array([[102, 122, 234, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/171.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 83, 102, 254, 273]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/172.jpg', 'flipped': True, 'width': 600, 'boxes': array([[209, 196, 221, 208]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/173.jpg', 'flipped': True, 'width': 600, 'boxes': array([[192, 195, 228, 231],
       [207, 199, 222, 214]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/174.jpg', 'flipped': True, 'width': 600, 'boxes': array([[307, 151, 316, 160],
       [201, 196, 222, 217],
       [161, 162, 254, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/175.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 142, 324, 175],
       [206, 191, 224, 209],
       [171, 190, 234, 253],
       [121, 149, 271, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/176.jpg', 'flipped': True, 'width': 600, 'boxes': array([[268, 148, 322, 202],
       [186, 193, 225, 232],
       [152, 176, 263, 287],
       [ 86, 123, 308, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/177.jpg', 'flipped': True, 'width': 600, 'boxes': array([[207, 199, 222, 214],
       [192, 195, 228, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/178.jpg', 'flipped': True, 'width': 600, 'boxes': array([[307, 151, 316, 160],
       [201, 196, 222, 217],
       [161, 162, 254, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/179.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 142, 324, 175],
       [206, 191, 224, 209],
       [171, 190, 234, 253],
       [121, 149, 271, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/180.jpg', 'flipped': True, 'width': 600, 'boxes': array([[268, 148, 322, 202],
       [186, 193, 225, 232],
       [152, 176, 263, 287],
       [ 86, 123, 308, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/181.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 142, 324, 175],
       [206, 191, 224, 209],
       [171, 190, 234, 253],
       [121, 149, 271, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/182.jpg', 'flipped': True, 'width': 600, 'boxes': array([[268, 148, 322, 202],
       [186, 193, 225, 232],
       [152, 176, 263, 287],
       [ 86, 123, 308, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/183.jpg', 'flipped': True, 'width': 600, 'boxes': array([[307, 151, 316, 160],
       [201, 196, 222, 217],
       [161, 162, 254, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/184.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 142, 324, 175],
       [206, 191, 224, 209],
       [171, 190, 234, 253],
       [121, 149, 271, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/185.jpg', 'flipped': True, 'width': 600, 'boxes': array([[268, 148, 322, 202],
       [186, 193, 225, 232],
       [152, 176, 263, 287],
       [ 86, 123, 308, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/186.jpg', 'flipped': True, 'width': 600, 'boxes': array([[254, 157, 320, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/187.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/188.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/189.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/190.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/191.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/192.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/193.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/194.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/195.jpg', 'flipped': True, 'width': 600, 'boxes': array([[200, 194, 227, 221],
       [176, 196, 242, 262]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/196.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/197.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/198.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/199.jpg', 'flipped': True, 'width': 600, 'boxes': array([[214, 196, 220, 202]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/200.jpg', 'flipped': True, 'width': 600, 'boxes': array([[195, 197, 231, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/201.jpg', 'flipped': True, 'width': 600, 'boxes': array([[176, 196, 242, 262],
       [200, 194, 227, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/202.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/203.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/204.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/205.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/206.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/207.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/208.jpg', 'flipped': True, 'width': 600, 'boxes': array([[256, 140, 346, 230]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/209.jpg', 'flipped': True, 'width': 600, 'boxes': array([[251, 135, 350, 234]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/210.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/211.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/212.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/213.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/214.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/215.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/216.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/217.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/218.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/219.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/220.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/221.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/222.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/223.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/224.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/225.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/226.jpg', 'flipped': True, 'width': 600, 'boxes': array([[309, 149, 321, 161],
       [217, 197, 232, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/227.jpg', 'flipped': True, 'width': 600, 'boxes': array([[297, 140, 333, 176]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/228.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/229.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/230.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/231.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353,  46, 413, 106],
       [ 95, 109, 179, 193],
       [170, 174, 269, 273],
       [268, 121, 370, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/232.jpg', 'flipped': True, 'width': 600, 'boxes': array([[259, 115, 379, 235],
       [162, 173, 273, 284]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/233.jpg', 'flipped': True, 'width': 600, 'boxes': array([[253, 111, 385, 243]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/234.jpg', 'flipped': True, 'width': 600, 'boxes': array([[246, 103, 393, 250]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/235.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 186, 374, 204]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/236.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/237.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/238.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/239.jpg', 'flipped': True, 'width': 600, 'boxes': array([[217, 197, 232, 212],
       [309, 149, 321, 161]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/240.jpg', 'flipped': True, 'width': 600, 'boxes': array([[212, 193, 239, 220]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/241.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/242.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/243.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/244.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353,  46, 413, 106],
       [ 95, 109, 179, 193],
       [170, 174, 269, 273],
       [268, 121, 370, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/245.jpg', 'flipped': True, 'width': 600, 'boxes': array([[162, 173, 273, 284],
       [259, 115, 379, 235]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/246.jpg', 'flipped': True, 'width': 600, 'boxes': array([[161, 167, 191, 197]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/247.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/248.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/249.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/250.jpg', 'flipped': True, 'width': 600, 'boxes': array([[121, 124, 154, 157]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/251.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/252.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/253.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/254.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353,  46, 413, 106],
       [ 95, 109, 179, 193],
       [170, 174, 269, 273],
       [268, 121, 370, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/255.jpg', 'flipped': True, 'width': 600, 'boxes': array([[414,  83, 432, 101]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/256.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/257.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/258.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/259.jpg', 'flipped': True, 'width': 600, 'boxes': array([[372,  58, 396,  82]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/260.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/261.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/262.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/263.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353,  46, 413, 106],
       [ 95, 109, 179, 193],
       [170, 174, 269, 273],
       [268, 121, 370, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/264.jpg', 'flipped': True, 'width': 600, 'boxes': array([[370, 324, 385, 339]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/265.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/266.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/267.jpg', 'flipped': True, 'width': 600, 'boxes': array([[333, 337, 354, 358]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/268.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/269.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/270.jpg', 'flipped': True, 'width': 600, 'boxes': array([[304, 141, 322, 159]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/271.jpg', 'flipped': True, 'width': 600, 'boxes': array([[295, 132, 325, 162]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/272.jpg', 'flipped': True, 'width': 600, 'boxes': array([[285, 121, 330, 166]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/273.jpg', 'flipped': True, 'width': 600, 'boxes': array([[273, 112, 336, 175]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/274.jpg', 'flipped': True, 'width': 600, 'boxes': array([[263, 104, 338, 179]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/275.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/276.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/277.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/278.jpg', 'flipped': True, 'width': 600, 'boxes': array([[336, 180, 390, 234],
       [264, 134, 342, 212],
       [ 64, 108, 160, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/279.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/280.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/281.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/282.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/283.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/284.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/285.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/286.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/287.jpg', 'flipped': True, 'width': 600, 'boxes': array([[336, 180, 390, 234],
       [264, 134, 342, 212],
       [ 64, 108, 160, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/288.jpg', 'flipped': True, 'width': 600, 'boxes': array([[234, 120, 351, 237]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/289.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/290.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/291.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/292.jpg', 'flipped': True, 'width': 600, 'boxes': array([[336, 180, 390, 234],
       [264, 134, 342, 212],
       [ 64, 108, 160, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/293.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/294.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/295.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/296.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/297.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/298.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/299.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/300.jpg', 'flipped': True, 'width': 600, 'boxes': array([[134, 126, 146, 138]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/301.jpg', 'flipped': True, 'width': 600, 'boxes': array([[127, 108, 160, 141],
       [302, 120, 335, 153]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/302.jpg', 'flipped': True, 'width': 600, 'boxes': array([[122,  91, 179, 148],
       [284,  98, 344, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/303.jpg', 'flipped': True, 'width': 600, 'boxes': array([[121,  70, 196, 145],
       [266,  71, 353, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/304.jpg', 'flipped': True, 'width': 600, 'boxes': array([[302, 120, 335, 153],
       [127, 108, 160, 141]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/305.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284,  98, 344, 158],
       [122,  91, 179, 148]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/306.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266,  71, 353, 158],
       [121,  70, 196, 145]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/307.jpg', 'flipped': True, 'width': 600, 'boxes': array([[212, 194, 221, 203],
       [422, 192, 431, 201],
       [310, 152, 313, 155]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/308.jpg', 'flipped': True, 'width': 600, 'boxes': array([[294, 146, 312, 164],
       [196, 191, 217, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/309.jpg', 'flipped': True, 'width': 600, 'boxes': array([[192, 191, 216, 215],
       [399, 177, 438, 216],
       [279, 140, 309, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/310.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 176, 436, 230],
       [273, 136, 309, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/311.jpg', 'flipped': True, 'width': 600, 'boxes': array([[257, 135, 305, 183],
       [392,  96, 413, 117]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/312.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  89, 418, 128],
       [405,  52, 429,  76],
       [243, 132, 312, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/313.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363,  87, 420, 144],
       [391,  50, 430,  89],
       [234, 130, 315, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/314.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  93, 419, 156],
       [381,  48, 432,  99],
       [225, 127, 324, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/315.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  89, 418, 128],
       [405,  52, 429,  76],
       [243, 132, 312, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/316.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363,  87, 420, 144],
       [391,  50, 430,  89],
       [234, 130, 315, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/317.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  93, 419, 156],
       [381,  48, 432,  99],
       [225, 127, 324, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/318.jpg', 'flipped': True, 'width': 600, 'boxes': array([[392,  96, 413, 117],
       [257, 135, 305, 183]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/319.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  89, 418, 128],
       [405,  52, 429,  76],
       [243, 132, 312, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/320.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363,  87, 420, 144],
       [391,  50, 430,  89],
       [234, 130, 315, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/321.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  93, 419, 156],
       [381,  48, 432,  99],
       [225, 127, 324, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/322.jpg', 'flipped': True, 'width': 600, 'boxes': array([[422, 192, 431, 201],
       [212, 194, 221, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/323.jpg', 'flipped': True, 'width': 600, 'boxes': array([[196, 191, 217, 212],
       [409, 180, 433, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/324.jpg', 'flipped': True, 'width': 600, 'boxes': array([[192, 191, 216, 215],
       [399, 177, 438, 216],
       [279, 140, 309, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/325.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 176, 436, 230],
       [273, 136, 309, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/326.jpg', 'flipped': True, 'width': 600, 'boxes': array([[422, 192, 431, 201],
       [212, 194, 221, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/327.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409, 180, 433, 204],
       [196, 191, 217, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/328.jpg', 'flipped': True, 'width': 600, 'boxes': array([[192, 191, 216, 215],
       [399, 177, 438, 216],
       [279, 140, 309, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/329.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/330.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/331.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/332.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/333.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 86,  93, 197, 204],
       [327, 183, 411, 267],
       [250, 100, 376, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/334.jpg', 'flipped': True, 'width': 600, 'boxes': array([[245, 101, 377, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/335.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/336.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/337.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/338.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/339.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 86,  93, 197, 204],
       [327, 183, 411, 267],
       [250, 100, 376, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/340.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/341.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/342.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/343.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/344.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/345.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/346.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/347.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/348.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/349.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/350.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 86,  93, 197, 204],
       [327, 183, 411, 267],
       [250, 100, 376, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/351.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/352.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/353.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/354.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/355.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/356.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/357.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/358.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/359.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/360.jpg', 'flipped': True, 'width': 600, 'boxes': array([[308, 144, 320, 156]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/361.jpg', 'flipped': True, 'width': 600, 'boxes': array([[381, 334, 393, 346],
       [351, 175, 378, 202],
       [114, 120, 147, 153],
       [159, 167, 180, 188],
       [293, 133, 326, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/362.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371, 323, 404, 356],
       [348, 172, 384, 208],
       [ 99, 115, 153, 169],
       [144, 158, 192, 206],
       [284, 128, 335, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/363.jpg', 'flipped': True, 'width': 600, 'boxes': array([[361, 317, 418, 374],
       [333, 164, 396, 227],
       [ 90, 116, 165, 191],
       [152, 163, 215, 226],
       [270, 121, 345, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/364.jpg', 'flipped': True, 'width': 600, 'boxes': array([[250, 108, 358, 216],
       [349, 315, 433, 399]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/365.jpg', 'flipped': True, 'width': 600, 'boxes': array([[381, 334, 393, 346],
       [351, 175, 378, 202],
       [114, 120, 147, 153],
       [159, 167, 180, 188],
       [293, 133, 326, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/366.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371, 323, 404, 356],
       [348, 172, 384, 208],
       [ 99, 115, 153, 169],
       [144, 158, 192, 206],
       [284, 128, 335, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/367.jpg', 'flipped': True, 'width': 600, 'boxes': array([[361, 317, 418, 374],
       [333, 164, 396, 227],
       [ 90, 116, 165, 191],
       [152, 163, 215, 226],
       [270, 121, 345, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/368.jpg', 'flipped': True, 'width': 600, 'boxes': array([[381, 334, 393, 346],
       [351, 175, 378, 202],
       [114, 120, 147, 153],
       [159, 167, 180, 188],
       [293, 133, 326, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/369.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371, 323, 404, 356],
       [348, 172, 384, 208],
       [ 99, 115, 153, 169],
       [144, 158, 192, 206],
       [284, 128, 335, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/370.jpg', 'flipped': True, 'width': 600, 'boxes': array([[361, 317, 418, 374],
       [333, 164, 396, 227],
       [ 90, 116, 165, 191],
       [152, 163, 215, 226],
       [270, 121, 345, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/371.jpg', 'flipped': True, 'width': 600, 'boxes': array([[381, 334, 393, 346],
       [351, 175, 378, 202],
       [114, 120, 147, 153],
       [159, 167, 180, 188],
       [293, 133, 326, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/372.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371, 323, 404, 356],
       [348, 172, 384, 208],
       [ 99, 115, 153, 169],
       [144, 158, 192, 206],
       [284, 128, 335, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/373.jpg', 'flipped': True, 'width': 600, 'boxes': array([[361, 317, 418, 374],
       [333, 164, 396, 227],
       [ 90, 116, 165, 191],
       [152, 163, 215, 226],
       [270, 121, 345, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/374.jpg', 'flipped': True, 'width': 600, 'boxes': array([[381, 334, 393, 346],
       [351, 175, 378, 202],
       [114, 120, 147, 153],
       [159, 167, 180, 188],
       [293, 133, 326, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/375.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371, 323, 404, 356],
       [348, 172, 384, 208],
       [ 99, 115, 153, 169],
       [144, 158, 192, 206],
       [284, 128, 335, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/376.jpg', 'flipped': True, 'width': 600, 'boxes': array([[361, 317, 418, 374],
       [333, 164, 396, 227],
       [ 90, 116, 165, 191],
       [152, 163, 215, 226],
       [270, 121, 345, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/377.jpg', 'flipped': True, 'width': 600, 'boxes': array([[349, 315, 433, 399],
       [250, 108, 358, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/378.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 419, 270, 431],
       [125, 136, 143, 154],
       [168, 181, 180, 193],
       [386, 339, 395, 348],
       [306, 148, 324, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/379.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/380.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/381.jpg', 'flipped': True, 'width': 600, 'boxes': array([[103, 137, 169, 203],
       [147, 191, 207, 251],
       [346, 348, 430, 432],
       [282, 153, 360, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/382.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/383.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/384.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 419, 270, 431],
       [125, 136, 143, 154],
       [168, 181, 180, 193],
       [386, 339, 395, 348],
       [306, 148, 324, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/385.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/386.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/387.jpg', 'flipped': True, 'width': 600, 'boxes': array([[103, 137, 169, 203],
       [147, 191, 207, 251],
       [346, 348, 430, 432],
       [282, 153, 360, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/388.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332, 353, 437, 458]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/389.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 419, 270, 431],
       [125, 136, 143, 154],
       [168, 181, 180, 193],
       [386, 339, 395, 348],
       [306, 148, 324, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/390.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/391.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/392.jpg', 'flipped': True, 'width': 600, 'boxes': array([[103, 137, 169, 203],
       [147, 191, 207, 251],
       [346, 348, 430, 432],
       [282, 153, 360, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/393.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 419, 270, 431],
       [125, 136, 143, 154],
       [168, 181, 180, 193],
       [386, 339, 395, 348],
       [306, 148, 324, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/394.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/395.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/396.jpg', 'flipped': True, 'width': 600, 'boxes': array([[103, 137, 169, 203],
       [147, 191, 207, 251],
       [346, 348, 430, 432],
       [282, 153, 360, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/397.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/398.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 419, 270, 431],
       [125, 136, 143, 154],
       [168, 181, 180, 193],
       [386, 339, 395, 348],
       [306, 148, 324, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/399.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/400.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/401.jpg', 'flipped': True, 'width': 600, 'boxes': array([[308, 142, 320, 154]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/402.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/403.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/404.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/405.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332,  35, 398, 101],
       [376,  56, 451, 131],
       [105,  95, 180, 170],
       [158, 144, 233, 219],
       [269,  91, 371, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/406.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/407.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/408.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/409.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/410.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/411.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/412.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/413.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/414.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332,  35, 398, 101],
       [376,  56, 451, 131],
       [105,  95, 180, 170],
       [158, 144, 233, 219],
       [269,  91, 371, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/415.jpg', 'flipped': True, 'width': 600, 'boxes': array([[318,  31, 405, 118],
       [357,  47, 465, 155],
       [153, 138, 246, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/416.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/417.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/418.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/419.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332,  35, 398, 101],
       [376,  56, 451, 131],
       [105,  95, 180, 170],
       [158, 144, 233, 219],
       [269,  91, 371, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/420.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/421.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/422.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/423.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/424.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/425.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/426.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332,  35, 398, 101],
       [376,  56, 451, 131],
       [105,  95, 180, 170],
       [158, 144, 233, 219],
       [269,  91, 371, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/427.jpg', 'flipped': True, 'width': 600, 'boxes': array([[318,  31, 405, 118],
       [357,  47, 465, 155],
       [153, 138, 246, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/428.jpg', 'flipped': True, 'width': 600, 'boxes': array([[340,  40, 466, 166]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/429.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/430.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/431.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/432.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332,  35, 398, 101],
       [376,  56, 451, 131],
       [105,  95, 180, 170],
       [158, 144, 233, 219],
       [269,  91, 371, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/433.jpg', 'flipped': True, 'width': 600, 'boxes': array([[318,  31, 405, 118],
       [357,  47, 465, 155],
       [153, 138, 246, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/434.jpg', 'flipped': True, 'width': 600, 'boxes': array([[293, 120, 323, 150],
       [378, 322, 393, 337]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/435.jpg', 'flipped': True, 'width': 600, 'boxes': array([[270, 100, 327, 157],
       [358, 297, 403, 342]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/436.jpg', 'flipped': True, 'width': 600, 'boxes': array([[378, 322, 393, 337],
       [293, 120, 323, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/437.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 297, 403, 342],
       [270, 100, 327, 157]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/438.jpg', 'flipped': True, 'width': 600, 'boxes': array([[309, 142, 324, 157],
       [363, 186, 378, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/439.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 335, 397, 350],
       [360, 185, 384, 209],
       [306, 141, 330, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/440.jpg', 'flipped': True, 'width': 600, 'boxes': array([[374, 332, 404, 362],
       [357, 184, 393, 220],
       [300, 134, 339, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/441.jpg', 'flipped': True, 'width': 600, 'boxes': array([[369, 332, 405, 368],
       [352, 178, 403, 229],
       [292, 130, 346, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/442.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 325, 417, 379],
       [347, 175, 413, 241],
       [290, 130, 350, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/443.jpg', 'flipped': True, 'width': 600, 'boxes': array([[287, 128, 359, 200]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/444.jpg', 'flipped': True, 'width': 600, 'boxes': array([[287, 125, 371, 209]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/445.jpg', 'flipped': True, 'width': 600, 'boxes': array([[276, 118, 381, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/446.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 186, 378, 201],
       [309, 142, 324, 157]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/447.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 335, 397, 350],
       [360, 185, 384, 209],
       [306, 141, 330, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/448.jpg', 'flipped': True, 'width': 600, 'boxes': array([[374, 332, 404, 362],
       [357, 184, 393, 220],
       [300, 134, 339, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/449.jpg', 'flipped': True, 'width': 600, 'boxes': array([[369, 332, 405, 368],
       [352, 178, 403, 229],
       [292, 130, 346, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/450.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 325, 417, 379],
       [347, 175, 413, 241],
       [290, 130, 350, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/451.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 335, 397, 350],
       [360, 185, 384, 209],
       [306, 141, 330, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/452.jpg', 'flipped': True, 'width': 600, 'boxes': array([[374, 332, 404, 362],
       [357, 184, 393, 220],
       [300, 134, 339, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/453.jpg', 'flipped': True, 'width': 600, 'boxes': array([[369, 332, 405, 368],
       [352, 178, 403, 229],
       [292, 130, 346, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/454.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 325, 417, 379],
       [347, 175, 413, 241],
       [290, 130, 350, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/455.jpg', 'flipped': True, 'width': 600, 'boxes': array([[170, 168, 206, 204],
       [386, 336, 398, 348],
       [370, 191, 379, 200],
       [310, 142, 331, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/456.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 166, 217, 214],
       [384, 333, 411, 360],
       [372, 192, 390, 210],
       [309, 139, 342, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/457.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 161, 235, 227],
       [387, 336, 420, 369],
       [370, 189, 406, 225],
       [304, 134, 355, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/458.jpg', 'flipped': True, 'width': 600, 'boxes': array([[167, 160, 242, 235],
       [383, 332, 437, 386],
       [376, 194, 409, 227],
       [299, 130, 365, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/459.jpg', 'flipped': True, 'width': 600, 'boxes': array([[295, 125, 376, 206],
       [386, 338, 446, 398]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/460.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 120, 384, 213],
       [386, 337, 458, 409]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/461.jpg', 'flipped': True, 'width': 600, 'boxes': array([[287, 115, 392, 220]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/462.jpg', 'flipped': True, 'width': 600, 'boxes': array([[276, 109, 402, 235]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/463.jpg', 'flipped': True, 'width': 600, 'boxes': array([[257,  95, 416, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/464.jpg', 'flipped': True, 'width': 600, 'boxes': array([[170, 168, 206, 204],
       [386, 336, 398, 348],
       [370, 191, 379, 200],
       [310, 142, 331, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/465.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 166, 217, 214],
       [384, 333, 411, 360],
       [372, 192, 390, 210],
       [309, 139, 342, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/466.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 161, 235, 227],
       [387, 336, 420, 369],
       [370, 189, 406, 225],
       [304, 134, 355, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/467.jpg', 'flipped': True, 'width': 600, 'boxes': array([[167, 160, 242, 235],
       [383, 332, 437, 386],
       [376, 194, 409, 227],
       [299, 130, 365, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/468.jpg', 'flipped': True, 'width': 600, 'boxes': array([[170, 168, 206, 204],
       [386, 336, 398, 348],
       [370, 191, 379, 200],
       [310, 142, 331, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/469.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 166, 217, 214],
       [384, 333, 411, 360],
       [372, 192, 390, 210],
       [309, 139, 342, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/470.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 161, 235, 227],
       [387, 336, 420, 369],
       [370, 189, 406, 225],
       [304, 134, 355, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/471.jpg', 'flipped': True, 'width': 600, 'boxes': array([[167, 160, 242, 235],
       [383, 332, 437, 386],
       [376, 194, 409, 227],
       [299, 130, 365, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/472.jpg', 'flipped': True, 'width': 600, 'boxes': array([[386, 338, 446, 398],
       [295, 125, 376, 206]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/473.jpg', 'flipped': True, 'width': 600, 'boxes': array([[386, 337, 458, 409],
       [291, 120, 384, 213]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/474.jpg', 'flipped': True, 'width': 600, 'boxes': array([[171, 169, 192, 190]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/475.jpg', 'flipped': True, 'width': 600, 'boxes': array([[170, 168, 206, 204],
       [386, 336, 398, 348],
       [370, 191, 379, 200],
       [310, 142, 331, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/476.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 166, 217, 214],
       [384, 333, 411, 360],
       [372, 192, 390, 210],
       [309, 139, 342, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/477.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 161, 235, 227],
       [387, 336, 420, 369],
       [370, 189, 406, 225],
       [304, 134, 355, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/478.jpg', 'flipped': True, 'width': 600, 'boxes': array([[167, 160, 242, 235],
       [383, 332, 437, 386],
       [376, 194, 409, 227],
       [299, 130, 365, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/479.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 186, 372, 195],
       [172, 173, 178, 179],
       [307, 138, 325, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/480.jpg', 'flipped': True, 'width': 600, 'boxes': array([[263, 305, 269, 311],
       [355, 184, 379, 208],
       [168, 170, 186, 188],
       [384, 330, 402, 348],
       [300, 133, 330, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/481.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 299, 279, 320],
       [347, 183, 383, 219],
       [158, 162, 194, 198],
       [380, 328, 407, 355],
       [287, 125, 341, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/482.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 296, 288, 332],
       [342, 183, 390, 231],
       [150, 155, 204, 209],
       [377, 327, 416, 366],
       [275, 114, 350, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/483.jpg', 'flipped': True, 'width': 600, 'boxes': array([[242, 288, 299, 345],
       [139, 144, 214, 219],
       [369, 325, 420, 376],
       [269, 113, 356, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/484.jpg', 'flipped': True, 'width': 600, 'boxes': array([[256, 105, 367, 216]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/485.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 101, 375, 227]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/486.jpg', 'flipped': True, 'width': 600, 'boxes': array([[244,  95, 382, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/487.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240,  93, 387, 240]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/488.jpg', 'flipped': True, 'width': 600, 'boxes': array([[236,  90, 395, 249]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/489.jpg', 'flipped': True, 'width': 600, 'boxes': array([[236,  92, 398, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/490.jpg', 'flipped': True, 'width': 600, 'boxes': array([[230,  86, 404, 260]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/491.jpg', 'flipped': True, 'width': 600, 'boxes': array([[263, 305, 269, 311],
       [355, 184, 379, 208],
       [168, 170, 186, 188],
       [384, 330, 402, 348],
       [300, 133, 330, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/492.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 299, 279, 320],
       [347, 183, 383, 219],
       [158, 162, 194, 198],
       [380, 328, 407, 355],
       [287, 125, 341, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/493.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 296, 288, 332],
       [342, 183, 390, 231],
       [150, 155, 204, 209],
       [377, 327, 416, 366],
       [275, 114, 350, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/494.jpg', 'flipped': True, 'width': 600, 'boxes': array([[242, 288, 299, 345],
       [139, 144, 214, 219],
       [369, 325, 420, 376],
       [269, 113, 356, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/495.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 186, 372, 195],
       [172, 173, 178, 179],
       [307, 138, 325, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/496.jpg', 'flipped': True, 'width': 600, 'boxes': array([[263, 305, 269, 311],
       [355, 184, 379, 208],
       [168, 170, 186, 188],
       [384, 330, 402, 348],
       [300, 133, 330, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/497.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 299, 279, 320],
       [347, 183, 383, 219],
       [158, 162, 194, 198],
       [380, 328, 407, 355],
       [287, 125, 341, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/498.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 296, 288, 332],
       [342, 183, 390, 231],
       [150, 155, 204, 209],
       [377, 327, 416, 366],
       [275, 114, 350, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/499.jpg', 'flipped': True, 'width': 600, 'boxes': array([[242, 288, 299, 345],
       [139, 144, 214, 219],
       [369, 325, 420, 376],
       [269, 113, 356, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/500.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 186, 372, 195],
       [172, 173, 178, 179],
       [307, 138, 325, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/501.jpg', 'flipped': True, 'width': 600, 'boxes': array([[263, 305, 269, 311],
       [355, 184, 379, 208],
       [168, 170, 186, 188],
       [384, 330, 402, 348],
       [300, 133, 330, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
Filtered 0 roidb entries: 1000 -> 1000
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0406 18:19:33.541254 24310 solver.cpp:48] Initializing solver from parameters: 
train_net: "/home/sgabriel/py-faster-rcnn/models/pascal_voc/ZF/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 50000
snapshot: 0
snapshot_prefix: "zf_faster_rcnn"
average_loss: 100
iter_size: 2
I0406 18:19:33.541324 24310 solver.cpp:81] Creating training net from train_net file: /home/sgabriel/py-faster-rcnn/models/pascal_voc/ZF/faster_rcnn_end2end/train.prototxt
I0406 18:19:33.542728 24310 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "bbox_loss"
  loss_weight: 1
}
I0406 18:19:33.542959 24310 layer_factory.hpp:77] Creating layer input-data
I0406 18:19:33.695999 24310 net.cpp:106] Creating Layer input-data
I0406 18:19:33.696032 24310 net.cpp:411] input-data -> data
I0406 18:19:33.696061 24310 net.cpp:411] input-data -> im_info
I0406 18:19:33.696076 24310 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0406 18:19:33.753743 24310 net.cpp:150] Setting up input-data
I0406 18:19:33.753779 24310 net.cpp:157] Top shape: 1 3 600 600 (1080000)
I0406 18:19:33.753790 24310 net.cpp:157] Top shape: 1 3 (3)
I0406 18:19:33.753800 24310 net.cpp:157] Top shape: 1 4 (4)
I0406 18:19:33.753806 24310 net.cpp:165] Memory required for data: 4320028
I0406 18:19:33.753818 24310 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0406 18:19:33.754981 24310 net.cpp:106] Creating Layer data_input-data_0_split
I0406 18:19:33.755000 24310 net.cpp:454] data_input-data_0_split <- data
I0406 18:19:33.755013 24310 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0406 18:19:33.755030 24310 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0406 18:19:33.755117 24310 net.cpp:150] Setting up data_input-data_0_split
I0406 18:19:33.755131 24310 net.cpp:157] Top shape: 1 3 600 600 (1080000)
I0406 18:19:33.755146 24310 net.cpp:157] Top shape: 1 3 600 600 (1080000)
I0406 18:19:33.755153 24310 net.cpp:165] Memory required for data: 12960028
I0406 18:19:33.755173 24310 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0406 18:19:33.755185 24310 net.cpp:106] Creating Layer im_info_input-data_1_split
I0406 18:19:33.755192 24310 net.cpp:454] im_info_input-data_1_split <- im_info
I0406 18:19:33.755200 24310 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0406 18:19:33.755216 24310 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0406 18:19:33.755270 24310 net.cpp:150] Setting up im_info_input-data_1_split
I0406 18:19:33.755280 24310 net.cpp:157] Top shape: 1 3 (3)
I0406 18:19:33.755287 24310 net.cpp:157] Top shape: 1 3 (3)
I0406 18:19:33.755293 24310 net.cpp:165] Memory required for data: 12960052
I0406 18:19:33.755298 24310 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0406 18:19:33.755311 24310 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0406 18:19:33.755316 24310 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0406 18:19:33.755326 24310 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0406 18:19:33.755336 24310 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0406 18:19:33.755390 24310 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0406 18:19:33.755400 24310 net.cpp:157] Top shape: 1 4 (4)
I0406 18:19:33.755409 24310 net.cpp:157] Top shape: 1 4 (4)
I0406 18:19:33.755415 24310 net.cpp:165] Memory required for data: 12960084
I0406 18:19:33.755419 24310 layer_factory.hpp:77] Creating layer conv1
I0406 18:19:33.755455 24310 net.cpp:106] Creating Layer conv1
I0406 18:19:33.755465 24310 net.cpp:454] conv1 <- data_input-data_0_split_0
I0406 18:19:33.755480 24310 net.cpp:411] conv1 -> conv1
I0406 18:19:33.758054 24310 net.cpp:150] Setting up conv1
I0406 18:19:33.758076 24310 net.cpp:157] Top shape: 1 96 300 300 (8640000)
I0406 18:19:33.758083 24310 net.cpp:165] Memory required for data: 47520084
I0406 18:19:33.758110 24310 layer_factory.hpp:77] Creating layer relu1
I0406 18:19:33.758133 24310 net.cpp:106] Creating Layer relu1
I0406 18:19:33.758142 24310 net.cpp:454] relu1 <- conv1
I0406 18:19:33.758152 24310 net.cpp:397] relu1 -> conv1 (in-place)
I0406 18:19:33.758168 24310 net.cpp:150] Setting up relu1
I0406 18:19:33.758178 24310 net.cpp:157] Top shape: 1 96 300 300 (8640000)
I0406 18:19:33.758185 24310 net.cpp:165] Memory required for data: 82080084
I0406 18:19:33.758190 24310 layer_factory.hpp:77] Creating layer norm1
I0406 18:19:33.758205 24310 net.cpp:106] Creating Layer norm1
I0406 18:19:33.758213 24310 net.cpp:454] norm1 <- conv1
I0406 18:19:33.758220 24310 net.cpp:411] norm1 -> norm1
I0406 18:19:33.758409 24310 net.cpp:150] Setting up norm1
I0406 18:19:33.758421 24310 net.cpp:157] Top shape: 1 96 300 300 (8640000)
I0406 18:19:33.758427 24310 net.cpp:165] Memory required for data: 116640084
I0406 18:19:33.758433 24310 layer_factory.hpp:77] Creating layer pool1
I0406 18:19:33.758456 24310 net.cpp:106] Creating Layer pool1
I0406 18:19:33.758466 24310 net.cpp:454] pool1 <- norm1
I0406 18:19:33.758478 24310 net.cpp:411] pool1 -> pool1
I0406 18:19:33.758538 24310 net.cpp:150] Setting up pool1
I0406 18:19:33.758548 24310 net.cpp:157] Top shape: 1 96 151 151 (2188896)
I0406 18:19:33.758554 24310 net.cpp:165] Memory required for data: 125395668
I0406 18:19:33.758559 24310 layer_factory.hpp:77] Creating layer conv2
I0406 18:19:33.758579 24310 net.cpp:106] Creating Layer conv2
I0406 18:19:33.758586 24310 net.cpp:454] conv2 <- pool1
I0406 18:19:33.758595 24310 net.cpp:411] conv2 -> conv2
I0406 18:19:33.761762 24310 net.cpp:150] Setting up conv2
I0406 18:19:33.761783 24310 net.cpp:157] Top shape: 1 256 76 76 (1478656)
I0406 18:19:33.761790 24310 net.cpp:165] Memory required for data: 131310292
I0406 18:19:33.761808 24310 layer_factory.hpp:77] Creating layer relu2
I0406 18:19:33.761821 24310 net.cpp:106] Creating Layer relu2
I0406 18:19:33.761831 24310 net.cpp:454] relu2 <- conv2
I0406 18:19:33.761842 24310 net.cpp:397] relu2 -> conv2 (in-place)
I0406 18:19:33.761855 24310 net.cpp:150] Setting up relu2
I0406 18:19:33.761864 24310 net.cpp:157] Top shape: 1 256 76 76 (1478656)
I0406 18:19:33.761870 24310 net.cpp:165] Memory required for data: 137224916
I0406 18:19:33.761875 24310 layer_factory.hpp:77] Creating layer norm2
I0406 18:19:33.761893 24310 net.cpp:106] Creating Layer norm2
I0406 18:19:33.761899 24310 net.cpp:454] norm2 <- conv2
I0406 18:19:33.761910 24310 net.cpp:411] norm2 -> norm2
I0406 18:19:33.762063 24310 net.cpp:150] Setting up norm2
I0406 18:19:33.762075 24310 net.cpp:157] Top shape: 1 256 76 76 (1478656)
I0406 18:19:33.762082 24310 net.cpp:165] Memory required for data: 143139540
I0406 18:19:33.762089 24310 layer_factory.hpp:77] Creating layer pool2
I0406 18:19:33.762101 24310 net.cpp:106] Creating Layer pool2
I0406 18:19:33.762109 24310 net.cpp:454] pool2 <- norm2
I0406 18:19:33.762118 24310 net.cpp:411] pool2 -> pool2
I0406 18:19:33.762174 24310 net.cpp:150] Setting up pool2
I0406 18:19:33.762184 24310 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0406 18:19:33.762190 24310 net.cpp:165] Memory required for data: 144697044
I0406 18:19:33.762197 24310 layer_factory.hpp:77] Creating layer conv3
I0406 18:19:33.762213 24310 net.cpp:106] Creating Layer conv3
I0406 18:19:33.762220 24310 net.cpp:454] conv3 <- pool2
I0406 18:19:33.762231 24310 net.cpp:411] conv3 -> conv3
I0406 18:19:33.768390 24310 net.cpp:150] Setting up conv3
I0406 18:19:33.768412 24310 net.cpp:157] Top shape: 1 384 39 39 (584064)
I0406 18:19:33.768419 24310 net.cpp:165] Memory required for data: 147033300
I0406 18:19:33.768435 24310 layer_factory.hpp:77] Creating layer relu3
I0406 18:19:33.768455 24310 net.cpp:106] Creating Layer relu3
I0406 18:19:33.768463 24310 net.cpp:454] relu3 <- conv3
I0406 18:19:33.768477 24310 net.cpp:397] relu3 -> conv3 (in-place)
I0406 18:19:33.768491 24310 net.cpp:150] Setting up relu3
I0406 18:19:33.768498 24310 net.cpp:157] Top shape: 1 384 39 39 (584064)
I0406 18:19:33.768504 24310 net.cpp:165] Memory required for data: 149369556
I0406 18:19:33.768509 24310 layer_factory.hpp:77] Creating layer conv4
I0406 18:19:33.768522 24310 net.cpp:106] Creating Layer conv4
I0406 18:19:33.768528 24310 net.cpp:454] conv4 <- conv3
I0406 18:19:33.768538 24310 net.cpp:411] conv4 -> conv4
I0406 18:19:33.774453 24310 net.cpp:150] Setting up conv4
I0406 18:19:33.774476 24310 net.cpp:157] Top shape: 1 384 39 39 (584064)
I0406 18:19:33.774482 24310 net.cpp:165] Memory required for data: 151705812
I0406 18:19:33.774493 24310 layer_factory.hpp:77] Creating layer relu4
I0406 18:19:33.774507 24310 net.cpp:106] Creating Layer relu4
I0406 18:19:33.774513 24310 net.cpp:454] relu4 <- conv4
I0406 18:19:33.774528 24310 net.cpp:397] relu4 -> conv4 (in-place)
I0406 18:19:33.774539 24310 net.cpp:150] Setting up relu4
I0406 18:19:33.774549 24310 net.cpp:157] Top shape: 1 384 39 39 (584064)
I0406 18:19:33.774554 24310 net.cpp:165] Memory required for data: 154042068
I0406 18:19:33.774559 24310 layer_factory.hpp:77] Creating layer conv5
I0406 18:19:33.774575 24310 net.cpp:106] Creating Layer conv5
I0406 18:19:33.774582 24310 net.cpp:454] conv5 <- conv4
I0406 18:19:33.774593 24310 net.cpp:411] conv5 -> conv5
I0406 18:19:33.778579 24310 net.cpp:150] Setting up conv5
I0406 18:19:33.778597 24310 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0406 18:19:33.778604 24310 net.cpp:165] Memory required for data: 155599572
I0406 18:19:33.778621 24310 layer_factory.hpp:77] Creating layer relu5
I0406 18:19:33.778632 24310 net.cpp:106] Creating Layer relu5
I0406 18:19:33.778642 24310 net.cpp:454] relu5 <- conv5
I0406 18:19:33.778652 24310 net.cpp:397] relu5 -> conv5 (in-place)
I0406 18:19:33.778663 24310 net.cpp:150] Setting up relu5
I0406 18:19:33.778671 24310 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0406 18:19:33.778676 24310 net.cpp:165] Memory required for data: 157157076
I0406 18:19:33.778681 24310 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0406 18:19:33.778690 24310 net.cpp:106] Creating Layer conv5_relu5_0_split
I0406 18:19:33.778697 24310 net.cpp:454] conv5_relu5_0_split <- conv5
I0406 18:19:33.778703 24310 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0406 18:19:33.778713 24310 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0406 18:19:33.778769 24310 net.cpp:150] Setting up conv5_relu5_0_split
I0406 18:19:33.778779 24310 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0406 18:19:33.778786 24310 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0406 18:19:33.778792 24310 net.cpp:165] Memory required for data: 160272084
I0406 18:19:33.778796 24310 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0406 18:19:33.778815 24310 net.cpp:106] Creating Layer rpn_conv/3x3
I0406 18:19:33.778821 24310 net.cpp:454] rpn_conv/3x3 <- conv5_relu5_0_split_0
I0406 18:19:33.778834 24310 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0406 18:19:33.795749 24310 net.cpp:150] Setting up rpn_conv/3x3
I0406 18:19:33.795766 24310 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0406 18:19:33.795770 24310 net.cpp:165] Memory required for data: 161829588
I0406 18:19:33.795779 24310 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0406 18:19:33.795790 24310 net.cpp:106] Creating Layer rpn_relu/3x3
I0406 18:19:33.795795 24310 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0406 18:19:33.795802 24310 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0406 18:19:33.795815 24310 net.cpp:150] Setting up rpn_relu/3x3
I0406 18:19:33.795824 24310 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0406 18:19:33.795828 24310 net.cpp:165] Memory required for data: 163387092
I0406 18:19:33.795832 24310 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0406 18:19:33.795840 24310 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0406 18:19:33.795845 24310 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0406 18:19:33.795852 24310 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0406 18:19:33.795861 24310 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0406 18:19:33.795908 24310 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0406 18:19:33.795917 24310 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0406 18:19:33.795922 24310 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0406 18:19:33.795928 24310 net.cpp:165] Memory required for data: 166502100
I0406 18:19:33.795931 24310 layer_factory.hpp:77] Creating layer rpn_cls_score
I0406 18:19:33.795946 24310 net.cpp:106] Creating Layer rpn_cls_score
I0406 18:19:33.795953 24310 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0406 18:19:33.795963 24310 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0406 18:19:33.796368 24310 net.cpp:150] Setting up rpn_cls_score
I0406 18:19:33.796380 24310 net.cpp:157] Top shape: 1 18 39 39 (27378)
I0406 18:19:33.796386 24310 net.cpp:165] Memory required for data: 166611612
I0406 18:19:33.796393 24310 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0406 18:19:33.796401 24310 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0406 18:19:33.796407 24310 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0406 18:19:33.796417 24310 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0406 18:19:33.796427 24310 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0406 18:19:33.796480 24310 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0406 18:19:33.796490 24310 net.cpp:157] Top shape: 1 18 39 39 (27378)
I0406 18:19:33.796495 24310 net.cpp:157] Top shape: 1 18 39 39 (27378)
I0406 18:19:33.796500 24310 net.cpp:165] Memory required for data: 166830636
I0406 18:19:33.796504 24310 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0406 18:19:33.796522 24310 net.cpp:106] Creating Layer rpn_bbox_pred
I0406 18:19:33.796530 24310 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0406 18:19:33.796536 24310 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0406 18:19:33.797049 24310 net.cpp:150] Setting up rpn_bbox_pred
I0406 18:19:33.797060 24310 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0406 18:19:33.797065 24310 net.cpp:165] Memory required for data: 167049660
I0406 18:19:33.797072 24310 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0406 18:19:33.797081 24310 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0406 18:19:33.797087 24310 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0406 18:19:33.797096 24310 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0406 18:19:33.797106 24310 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0406 18:19:33.797149 24310 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0406 18:19:33.797158 24310 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0406 18:19:33.797163 24310 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0406 18:19:33.797168 24310 net.cpp:165] Memory required for data: 167487708
I0406 18:19:33.797171 24310 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0406 18:19:33.797194 24310 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0406 18:19:33.797200 24310 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0406 18:19:33.797210 24310 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0406 18:19:33.797248 24310 net.cpp:150] Setting up rpn_cls_score_reshape
I0406 18:19:33.797256 24310 net.cpp:157] Top shape: 1 2 351 39 (27378)
I0406 18:19:33.797260 24310 net.cpp:165] Memory required for data: 167597220
I0406 18:19:33.797266 24310 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0406 18:19:33.797276 24310 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0406 18:19:33.797281 24310 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0406 18:19:33.797287 24310 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0406 18:19:33.797297 24310 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0406 18:19:33.797340 24310 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0406 18:19:33.797348 24310 net.cpp:157] Top shape: 1 2 351 39 (27378)
I0406 18:19:33.797353 24310 net.cpp:157] Top shape: 1 2 351 39 (27378)
I0406 18:19:33.797358 24310 net.cpp:165] Memory required for data: 167816244
I0406 18:19:33.797363 24310 layer_factory.hpp:77] Creating layer rpn-data
I0406 18:19:33.805285 24310 net.cpp:106] Creating Layer rpn-data
I0406 18:19:33.805308 24310 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0406 18:19:33.805320 24310 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0406 18:19:33.805328 24310 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0406 18:19:33.805335 24310 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0406 18:19:33.805344 24310 net.cpp:411] rpn-data -> rpn_labels
I0406 18:19:33.805366 24310 net.cpp:411] rpn-data -> rpn_bbox_targets
I0406 18:19:33.805380 24310 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0406 18:19:33.805392 24310 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0406 18:19:33.807858 24310 net.cpp:150] Setting up rpn-data
I0406 18:19:33.807885 24310 net.cpp:157] Top shape: 1 1 351 39 (13689)
I0406 18:19:33.807893 24310 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0406 18:19:33.807899 24310 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0406 18:19:33.807906 24310 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0406 18:19:33.807911 24310 net.cpp:165] Memory required for data: 168528072
I0406 18:19:33.807919 24310 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0406 18:19:33.807940 24310 net.cpp:106] Creating Layer rpn_loss_cls
I0406 18:19:33.807947 24310 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0406 18:19:33.807958 24310 net.cpp:454] rpn_loss_cls <- rpn_labels
I0406 18:19:33.807970 24310 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0406 18:19:33.807994 24310 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0406 18:19:33.808189 24310 net.cpp:150] Setting up rpn_loss_cls
I0406 18:19:33.808202 24310 net.cpp:157] Top shape: (1)
I0406 18:19:33.808208 24310 net.cpp:160]     with loss weight 1
I0406 18:19:33.808236 24310 net.cpp:165] Memory required for data: 168528076
I0406 18:19:33.808241 24310 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0406 18:19:33.808260 24310 net.cpp:106] Creating Layer rpn_loss_bbox
I0406 18:19:33.808269 24310 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0406 18:19:33.808279 24310 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0406 18:19:33.808286 24310 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0406 18:19:33.808295 24310 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0406 18:19:33.808303 24310 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0406 18:19:33.809032 24310 net.cpp:150] Setting up rpn_loss_bbox
I0406 18:19:33.809048 24310 net.cpp:157] Top shape: (1)
I0406 18:19:33.809056 24310 net.cpp:160]     with loss weight 1
I0406 18:19:33.809067 24310 net.cpp:165] Memory required for data: 168528080
I0406 18:19:33.809073 24310 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0406 18:19:33.809087 24310 net.cpp:106] Creating Layer rpn_cls_prob
I0406 18:19:33.809101 24310 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0406 18:19:33.809111 24310 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0406 18:19:33.809212 24310 net.cpp:150] Setting up rpn_cls_prob
I0406 18:19:33.809247 24310 net.cpp:157] Top shape: 1 2 351 39 (27378)
I0406 18:19:33.809257 24310 net.cpp:165] Memory required for data: 168637592
I0406 18:19:33.809262 24310 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0406 18:19:33.809281 24310 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0406 18:19:33.809288 24310 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0406 18:19:33.809298 24310 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0406 18:19:33.809345 24310 net.cpp:150] Setting up rpn_cls_prob_reshape
I0406 18:19:33.809357 24310 net.cpp:157] Top shape: 1 18 39 39 (27378)
I0406 18:19:33.809363 24310 net.cpp:165] Memory required for data: 168747104
I0406 18:19:33.809370 24310 layer_factory.hpp:77] Creating layer proposal
I0406 18:19:33.836225 24310 net.cpp:106] Creating Layer proposal
I0406 18:19:33.836251 24310 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0406 18:19:33.836262 24310 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0406 18:19:33.836272 24310 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0406 18:19:33.836283 24310 net.cpp:411] proposal -> rpn_rois
I0406 18:19:33.864969 24310 net.cpp:150] Setting up proposal
I0406 18:19:33.864998 24310 net.cpp:157] Top shape: 1 5 (5)
I0406 18:19:33.865005 24310 net.cpp:165] Memory required for data: 168747124
I0406 18:19:33.865012 24310 layer_factory.hpp:77] Creating layer roi-data
I0406 18:19:33.866489 24310 net.cpp:106] Creating Layer roi-data
I0406 18:19:33.866509 24310 net.cpp:454] roi-data <- rpn_rois
I0406 18:19:33.866519 24310 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0406 18:19:33.866528 24310 net.cpp:411] roi-data -> rois
I0406 18:19:33.866541 24310 net.cpp:411] roi-data -> labels
I0406 18:19:33.866552 24310 net.cpp:411] roi-data -> bbox_targets
I0406 18:19:33.866564 24310 net.cpp:411] roi-data -> bbox_inside_weights
I0406 18:19:33.866575 24310 net.cpp:411] roi-data -> bbox_outside_weights
I0406 18:19:33.867369 24310 net.cpp:150] Setting up roi-data
I0406 18:19:33.867394 24310 net.cpp:157] Top shape: 1 5 (5)
I0406 18:19:33.867401 24310 net.cpp:157] Top shape: 1 1 (1)
I0406 18:19:33.867408 24310 net.cpp:157] Top shape: 1 8 (8)
I0406 18:19:33.867413 24310 net.cpp:157] Top shape: 1 8 (8)
I0406 18:19:33.867419 24310 net.cpp:157] Top shape: 1 8 (8)
I0406 18:19:33.867422 24310 net.cpp:165] Memory required for data: 168747244
I0406 18:19:33.867430 24310 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0406 18:19:33.867463 24310 net.cpp:106] Creating Layer roi_pool_conv5
I0406 18:19:33.867475 24310 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_1
I0406 18:19:33.867486 24310 net.cpp:454] roi_pool_conv5 <- rois
I0406 18:19:33.867496 24310 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0406 18:19:33.867516 24310 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0406 18:19:33.867593 24310 net.cpp:150] Setting up roi_pool_conv5
I0406 18:19:33.867605 24310 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0406 18:19:33.867611 24310 net.cpp:165] Memory required for data: 168784108
I0406 18:19:33.867617 24310 layer_factory.hpp:77] Creating layer fc6
I0406 18:19:33.867633 24310 net.cpp:106] Creating Layer fc6
I0406 18:19:33.867641 24310 net.cpp:454] fc6 <- roi_pool_conv5
I0406 18:19:33.867653 24310 net.cpp:411] fc6 -> fc6
I0406 18:19:33.992921 24310 net.cpp:150] Setting up fc6
I0406 18:19:33.992951 24310 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:19:33.992954 24310 net.cpp:165] Memory required for data: 168800492
I0406 18:19:33.992982 24310 layer_factory.hpp:77] Creating layer relu6
I0406 18:19:33.992995 24310 net.cpp:106] Creating Layer relu6
I0406 18:19:33.993000 24310 net.cpp:454] relu6 <- fc6
I0406 18:19:33.993008 24310 net.cpp:397] relu6 -> fc6 (in-place)
I0406 18:19:33.993018 24310 net.cpp:150] Setting up relu6
I0406 18:19:33.993023 24310 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:19:33.993026 24310 net.cpp:165] Memory required for data: 168816876
I0406 18:19:33.993031 24310 layer_factory.hpp:77] Creating layer drop6
I0406 18:19:33.993046 24310 net.cpp:106] Creating Layer drop6
I0406 18:19:33.993048 24310 net.cpp:454] drop6 <- fc6
I0406 18:19:33.993052 24310 net.cpp:397] drop6 -> fc6 (in-place)
I0406 18:19:33.993077 24310 net.cpp:150] Setting up drop6
I0406 18:19:33.993094 24310 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:19:33.993096 24310 net.cpp:165] Memory required for data: 168833260
I0406 18:19:33.993100 24310 layer_factory.hpp:77] Creating layer fc7
I0406 18:19:33.993114 24310 net.cpp:106] Creating Layer fc7
I0406 18:19:33.993119 24310 net.cpp:454] fc7 <- fc6
I0406 18:19:33.993124 24310 net.cpp:411] fc7 -> fc7
I0406 18:19:34.034696 24310 net.cpp:150] Setting up fc7
I0406 18:19:34.034739 24310 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:19:34.034755 24310 net.cpp:165] Memory required for data: 168849644
I0406 18:19:34.034765 24310 layer_factory.hpp:77] Creating layer relu7
I0406 18:19:34.034785 24310 net.cpp:106] Creating Layer relu7
I0406 18:19:34.034791 24310 net.cpp:454] relu7 <- fc7
I0406 18:19:34.034811 24310 net.cpp:397] relu7 -> fc7 (in-place)
I0406 18:19:34.034821 24310 net.cpp:150] Setting up relu7
I0406 18:19:34.034826 24310 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:19:34.034827 24310 net.cpp:165] Memory required for data: 168866028
I0406 18:19:34.034829 24310 layer_factory.hpp:77] Creating layer drop7
I0406 18:19:34.034837 24310 net.cpp:106] Creating Layer drop7
I0406 18:19:34.034840 24310 net.cpp:454] drop7 <- fc7
I0406 18:19:34.034844 24310 net.cpp:397] drop7 -> fc7 (in-place)
I0406 18:19:34.034865 24310 net.cpp:150] Setting up drop7
I0406 18:19:34.034870 24310 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:19:34.034873 24310 net.cpp:165] Memory required for data: 168882412
I0406 18:19:34.034878 24310 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0406 18:19:34.034883 24310 net.cpp:106] Creating Layer fc7_drop7_0_split
I0406 18:19:34.034885 24310 net.cpp:454] fc7_drop7_0_split <- fc7
I0406 18:19:34.034890 24310 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0406 18:19:34.034909 24310 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0406 18:19:34.034941 24310 net.cpp:150] Setting up fc7_drop7_0_split
I0406 18:19:34.034946 24310 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:19:34.034950 24310 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:19:34.034952 24310 net.cpp:165] Memory required for data: 168915180
I0406 18:19:34.034955 24310 layer_factory.hpp:77] Creating layer cls_score
I0406 18:19:34.034962 24310 net.cpp:106] Creating Layer cls_score
I0406 18:19:34.034966 24310 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0406 18:19:34.034971 24310 net.cpp:411] cls_score -> cls_score
I0406 18:19:34.035178 24310 net.cpp:150] Setting up cls_score
I0406 18:19:34.035183 24310 net.cpp:157] Top shape: 1 2 (2)
I0406 18:19:34.035187 24310 net.cpp:165] Memory required for data: 168915188
I0406 18:19:34.035192 24310 layer_factory.hpp:77] Creating layer bbox_pred
I0406 18:19:34.035197 24310 net.cpp:106] Creating Layer bbox_pred
I0406 18:19:34.035202 24310 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0406 18:19:34.035208 24310 net.cpp:411] bbox_pred -> bbox_pred
I0406 18:19:34.035787 24310 net.cpp:150] Setting up bbox_pred
I0406 18:19:34.035794 24310 net.cpp:157] Top shape: 1 8 (8)
I0406 18:19:34.035796 24310 net.cpp:165] Memory required for data: 168915220
I0406 18:19:34.035814 24310 layer_factory.hpp:77] Creating layer loss_cls
I0406 18:19:34.035820 24310 net.cpp:106] Creating Layer loss_cls
I0406 18:19:34.035825 24310 net.cpp:454] loss_cls <- cls_score
I0406 18:19:34.035830 24310 net.cpp:454] loss_cls <- labels
I0406 18:19:34.035835 24310 net.cpp:411] loss_cls -> cls_loss
I0406 18:19:34.035843 24310 layer_factory.hpp:77] Creating layer loss_cls
I0406 18:19:34.035923 24310 net.cpp:150] Setting up loss_cls
I0406 18:19:34.035928 24310 net.cpp:157] Top shape: (1)
I0406 18:19:34.035930 24310 net.cpp:160]     with loss weight 1
I0406 18:19:34.035944 24310 net.cpp:165] Memory required for data: 168915224
I0406 18:19:34.035948 24310 layer_factory.hpp:77] Creating layer loss_bbox
I0406 18:19:34.035954 24310 net.cpp:106] Creating Layer loss_bbox
I0406 18:19:34.035959 24310 net.cpp:454] loss_bbox <- bbox_pred
I0406 18:19:34.035962 24310 net.cpp:454] loss_bbox <- bbox_targets
I0406 18:19:34.035966 24310 net.cpp:454] loss_bbox <- bbox_inside_weights
I0406 18:19:34.035970 24310 net.cpp:454] loss_bbox <- bbox_outside_weights
I0406 18:19:34.035974 24310 net.cpp:411] loss_bbox -> bbox_loss
I0406 18:19:34.036033 24310 net.cpp:150] Setting up loss_bbox
I0406 18:19:34.036039 24310 net.cpp:157] Top shape: (1)
I0406 18:19:34.036042 24310 net.cpp:160]     with loss weight 1
I0406 18:19:34.036047 24310 net.cpp:165] Memory required for data: 168915228
I0406 18:19:34.036049 24310 net.cpp:226] loss_bbox needs backward computation.
I0406 18:19:34.036054 24310 net.cpp:226] loss_cls needs backward computation.
I0406 18:19:34.036058 24310 net.cpp:226] bbox_pred needs backward computation.
I0406 18:19:34.036062 24310 net.cpp:226] cls_score needs backward computation.
I0406 18:19:34.036064 24310 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0406 18:19:34.036068 24310 net.cpp:226] drop7 needs backward computation.
I0406 18:19:34.036070 24310 net.cpp:226] relu7 needs backward computation.
I0406 18:19:34.036074 24310 net.cpp:226] fc7 needs backward computation.
I0406 18:19:34.036077 24310 net.cpp:226] drop6 needs backward computation.
I0406 18:19:34.036080 24310 net.cpp:226] relu6 needs backward computation.
I0406 18:19:34.036083 24310 net.cpp:226] fc6 needs backward computation.
I0406 18:19:34.036087 24310 net.cpp:226] roi_pool_conv5 needs backward computation.
I0406 18:19:34.036090 24310 net.cpp:226] roi-data needs backward computation.
I0406 18:19:34.036095 24310 net.cpp:226] proposal needs backward computation.
I0406 18:19:34.036100 24310 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0406 18:19:34.036104 24310 net.cpp:226] rpn_cls_prob needs backward computation.
I0406 18:19:34.036108 24310 net.cpp:226] rpn_loss_bbox needs backward computation.
I0406 18:19:34.036113 24310 net.cpp:226] rpn_loss_cls needs backward computation.
I0406 18:19:34.036119 24310 net.cpp:226] rpn-data needs backward computation.
I0406 18:19:34.036124 24310 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0406 18:19:34.036129 24310 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0406 18:19:34.036133 24310 net.cpp:226] rpn_bbox_pred_rpn_bbox_pred_0_split needs backward computation.
I0406 18:19:34.036136 24310 net.cpp:226] rpn_bbox_pred needs backward computation.
I0406 18:19:34.036142 24310 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0406 18:19:34.036145 24310 net.cpp:226] rpn_cls_score needs backward computation.
I0406 18:19:34.036150 24310 net.cpp:226] rpn/output_rpn_relu/3x3_0_split needs backward computation.
I0406 18:19:34.036154 24310 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0406 18:19:34.036157 24310 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0406 18:19:34.036161 24310 net.cpp:228] conv5_relu5_0_split does not need backward computation.
I0406 18:19:34.036166 24310 net.cpp:228] relu5 does not need backward computation.
I0406 18:19:34.036170 24310 net.cpp:228] conv5 does not need backward computation.
I0406 18:19:34.036175 24310 net.cpp:228] relu4 does not need backward computation.
I0406 18:19:34.036177 24310 net.cpp:228] conv4 does not need backward computation.
I0406 18:19:34.036181 24310 net.cpp:228] relu3 does not need backward computation.
I0406 18:19:34.036185 24310 net.cpp:228] conv3 does not need backward computation.
I0406 18:19:34.036187 24310 net.cpp:228] pool2 does not need backward computation.
I0406 18:19:34.036192 24310 net.cpp:228] norm2 does not need backward computation.
I0406 18:19:34.036195 24310 net.cpp:228] relu2 does not need backward computation.
I0406 18:19:34.036198 24310 net.cpp:228] conv2 does not need backward computation.
I0406 18:19:34.036202 24310 net.cpp:228] pool1 does not need backward computation.
I0406 18:19:34.036206 24310 net.cpp:228] norm1 does not need backward computation.
I0406 18:19:34.036211 24310 net.cpp:228] relu1 does not need backward computation.
I0406 18:19:34.036213 24310 net.cpp:228] conv1 does not need backward computation.
I0406 18:19:34.036217 24310 net.cpp:228] gt_boxes_input-data_2_split does not need backward computation.
I0406 18:19:34.036223 24310 net.cpp:228] im_info_input-data_1_split does not need backward computation.
I0406 18:19:34.036227 24310 net.cpp:228] data_input-data_0_split does not need backward computation.
I0406 18:19:34.036232 24310 net.cpp:228] input-data does not need backward computation.
I0406 18:19:34.036234 24310 net.cpp:270] This network produces output bbox_loss
I0406 18:19:34.036238 24310 net.cpp:270] This network produces output cls_loss
I0406 18:19:34.036242 24310 net.cpp:270] This network produces output rpn_cls_loss
I0406 18:19:34.036247 24310 net.cpp:270] This network produces output rpn_loss_bbox
I0406 18:19:34.036279 24310 net.cpp:283] Network initialization done.
I0406 18:19:34.036413 24310 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ../../data/imagenet_models/ZF.v2.caffemodel
I0406 18:19:36.352171 24310 net.cpp:816] Ignoring source layer pool5_spm6
I0406 18:19:36.352205 24310 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0406 18:19:36.406968 24310 net.cpp:816] Ignoring source layer fc8
I0406 18:19:36.406991 24310 net.cpp:816] Ignoring source layer prob
Solving...
/home/sgabriel/py-faster-rcnn/tools/../lib/rpn/proposal_target_layer.py:166: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  fg_inds = npr.choice(fg_inds, size=fg_rois_per_this_image, replace=False)
/home/sgabriel/py-faster-rcnn/tools/../lib/rpn/proposal_target_layer.py:177: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  bg_inds = npr.choice(bg_inds, size=bg_rois_per_this_image, replace=False)
/home/sgabriel/py-faster-rcnn/tools/../lib/rpn/proposal_target_layer.py:184: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  labels[fg_rois_per_this_image:] = 0
/home/sgabriel/py-faster-rcnn/tools/../lib/rpn/proposal_target_layer.py:127: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  bbox_targets[ind, start:end] = bbox_target_data[ind, 1:]
/home/sgabriel/py-faster-rcnn/tools/../lib/rpn/proposal_target_layer.py:128: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  bbox_inside_weights[ind, start:end] = cfg.TRAIN.BBOX_INSIDE_WEIGHTS
I0406 18:19:37.435397 24310 solver.cpp:229] Iteration 0, loss = 2.9269
I0406 18:19:37.435452 24310 solver.cpp:245]     Train net output #0: bbox_loss = 0.000566708 (* 1 = 0.000566708 loss)
I0406 18:19:37.435461 24310 solver.cpp:245]     Train net output #1: cls_loss = 0.655162 (* 1 = 0.655162 loss)
I0406 18:19:37.435467 24310 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.582411 (* 1 = 0.582411 loss)
I0406 18:19:37.435473 24310 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 2.05547 (* 1 = 2.05547 loss)
I0406 18:19:37.435482 24310 sgd_solver.cpp:106] Iteration 0, lr = 0.001
Wrote snapshot to: /home/sgabriel/py-faster-rcnn/output/default/voc_2007_trainval/zf_faster_rcnn_iter_1.caffemodel
done solving

real	0m23.079s
user	0m6.407s
sys	0m2.594s
+ set +x
grep: experiments/logs/faster_rcnn_end2end_ZF_.txt.2017-04-06_18-19-20: No such file or directory
+ echo

+ ../../tools/test_net.py --gpu 1 --def ../../models/pascal_voc/ZF/faster_rcnn_end2end/test.prototxt --net ../../output/default/voc_2007_trainval/oldModels/zf_faster_rcnn_iter_140000.caffemodel --imdb CNNDATA_test --cfg ../../experiments/cfgs/roost.yml
<function <lambda> at 0x2aaad9d05de8>
<function <lambda> at 0x2aaad9d05e60>
<function <lambda> at 0x2aaad9d05ed8>
<function <lambda> at 0x2aaad9d05f50>
Called with args:
Namespace(caffemodel='../../output/default/voc_2007_trainval/oldModels/zf_faster_rcnn_iter_140000.caffemodel', cfg_file='../../experiments/cfgs/roost.yml', comp_mode=False, gpu_id=1, imdb_name='CNNDATA_test', max_per_image=100, prototxt='../../models/pascal_voc/ZF/faster_rcnn_end2end/test.prototxt', set_cfgs=None, vis=False, wait=True)
Using config:
{'DATA_DIR': '/home/sgabriel/py-faster-rcnn/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 1,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/sgabriel/py-faster-rcnn/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 17,
 'ROOT_DIR': '/home/sgabriel/py-faster-rcnn',
 'TEST': {'BBOX_REG': False,
          'HAS_RPN': True,
          'MAX_SIZE': 600,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 4,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 600,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': False}
../../tools/test_net.py:80: RuntimeWarning: to-Python converter for boost::shared_ptr<caffe::Blob<float> > already registered; second conversion method ignored.
  caffe.set_mode_gpu()
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0406 18:19:52.521697 24348 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn/output"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  inner_product_param {
    num_output: 2
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  inner_product_param {
    num_output: 8
  }
}
layer {
  name: "cls_prob"
  type: "Softmax"
  bottom: "cls_score"
  top: "cls_prob"
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0406 18:19:52.522001 24348 net.cpp:413] Input 0 -> data
I0406 18:19:52.566752 24348 net.cpp:413] Input 1 -> im_info
I0406 18:19:52.566834 24348 layer_factory.hpp:77] Creating layer conv1
I0406 18:19:52.566871 24348 net.cpp:106] Creating Layer conv1
I0406 18:19:52.566879 24348 net.cpp:454] conv1 <- data
I0406 18:19:52.566890 24348 net.cpp:411] conv1 -> conv1
I0406 18:19:52.568060 24348 net.cpp:150] Setting up conv1
I0406 18:19:52.568083 24348 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0406 18:19:52.568087 24348 net.cpp:165] Memory required for data: 4816896
I0406 18:19:52.568107 24348 layer_factory.hpp:77] Creating layer relu1
I0406 18:19:52.568126 24348 net.cpp:106] Creating Layer relu1
I0406 18:19:52.568132 24348 net.cpp:454] relu1 <- conv1
I0406 18:19:52.568140 24348 net.cpp:397] relu1 -> conv1 (in-place)
I0406 18:19:52.568153 24348 net.cpp:150] Setting up relu1
I0406 18:19:52.568161 24348 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0406 18:19:52.568166 24348 net.cpp:165] Memory required for data: 9633792
I0406 18:19:52.568171 24348 layer_factory.hpp:77] Creating layer norm1
I0406 18:19:52.568182 24348 net.cpp:106] Creating Layer norm1
I0406 18:19:52.568187 24348 net.cpp:454] norm1 <- conv1
I0406 18:19:52.568195 24348 net.cpp:411] norm1 -> norm1
I0406 18:19:52.568333 24348 net.cpp:150] Setting up norm1
I0406 18:19:52.568344 24348 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0406 18:19:52.568349 24348 net.cpp:165] Memory required for data: 14450688
I0406 18:19:52.568356 24348 layer_factory.hpp:77] Creating layer pool1
I0406 18:19:52.568366 24348 net.cpp:106] Creating Layer pool1
I0406 18:19:52.568370 24348 net.cpp:454] pool1 <- norm1
I0406 18:19:52.568378 24348 net.cpp:411] pool1 -> pool1
I0406 18:19:52.568423 24348 net.cpp:150] Setting up pool1
I0406 18:19:52.568431 24348 net.cpp:157] Top shape: 1 96 57 57 (311904)
I0406 18:19:52.568437 24348 net.cpp:165] Memory required for data: 15698304
I0406 18:19:52.568449 24348 layer_factory.hpp:77] Creating layer conv2
I0406 18:19:52.568459 24348 net.cpp:106] Creating Layer conv2
I0406 18:19:52.568464 24348 net.cpp:454] conv2 <- pool1
I0406 18:19:52.568470 24348 net.cpp:411] conv2 -> conv2
I0406 18:19:52.571729 24348 net.cpp:150] Setting up conv2
I0406 18:19:52.571746 24348 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0406 18:19:52.571753 24348 net.cpp:165] Memory required for data: 16559488
I0406 18:19:52.571768 24348 layer_factory.hpp:77] Creating layer relu2
I0406 18:19:52.571780 24348 net.cpp:106] Creating Layer relu2
I0406 18:19:52.571786 24348 net.cpp:454] relu2 <- conv2
I0406 18:19:52.571795 24348 net.cpp:397] relu2 -> conv2 (in-place)
I0406 18:19:52.571805 24348 net.cpp:150] Setting up relu2
I0406 18:19:52.571812 24348 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0406 18:19:52.571817 24348 net.cpp:165] Memory required for data: 17420672
I0406 18:19:52.571821 24348 layer_factory.hpp:77] Creating layer norm2
I0406 18:19:52.571831 24348 net.cpp:106] Creating Layer norm2
I0406 18:19:52.571836 24348 net.cpp:454] norm2 <- conv2
I0406 18:19:52.571844 24348 net.cpp:411] norm2 -> norm2
I0406 18:19:52.571966 24348 net.cpp:150] Setting up norm2
I0406 18:19:52.571976 24348 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0406 18:19:52.571981 24348 net.cpp:165] Memory required for data: 18281856
I0406 18:19:52.571985 24348 layer_factory.hpp:77] Creating layer pool2
I0406 18:19:52.571993 24348 net.cpp:106] Creating Layer pool2
I0406 18:19:52.572000 24348 net.cpp:454] pool2 <- norm2
I0406 18:19:52.572007 24348 net.cpp:411] pool2 -> pool2
I0406 18:19:52.572051 24348 net.cpp:150] Setting up pool2
I0406 18:19:52.572058 24348 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0406 18:19:52.572063 24348 net.cpp:165] Memory required for data: 18512256
I0406 18:19:52.572069 24348 layer_factory.hpp:77] Creating layer conv3
I0406 18:19:52.572082 24348 net.cpp:106] Creating Layer conv3
I0406 18:19:52.572088 24348 net.cpp:454] conv3 <- pool2
I0406 18:19:52.572096 24348 net.cpp:411] conv3 -> conv3
I0406 18:19:52.575417 24348 net.cpp:150] Setting up conv3
I0406 18:19:52.575434 24348 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0406 18:19:52.575448 24348 net.cpp:165] Memory required for data: 18857856
I0406 18:19:52.575464 24348 layer_factory.hpp:77] Creating layer relu3
I0406 18:19:52.575475 24348 net.cpp:106] Creating Layer relu3
I0406 18:19:52.575482 24348 net.cpp:454] relu3 <- conv3
I0406 18:19:52.575491 24348 net.cpp:397] relu3 -> conv3 (in-place)
I0406 18:19:52.575502 24348 net.cpp:150] Setting up relu3
I0406 18:19:52.575510 24348 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0406 18:19:52.575515 24348 net.cpp:165] Memory required for data: 19203456
I0406 18:19:52.575518 24348 layer_factory.hpp:77] Creating layer conv4
I0406 18:19:52.575529 24348 net.cpp:106] Creating Layer conv4
I0406 18:19:52.575536 24348 net.cpp:454] conv4 <- conv3
I0406 18:19:52.575542 24348 net.cpp:411] conv4 -> conv4
I0406 18:19:52.580297 24348 net.cpp:150] Setting up conv4
I0406 18:19:52.580314 24348 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0406 18:19:52.580320 24348 net.cpp:165] Memory required for data: 19549056
I0406 18:19:52.580332 24348 layer_factory.hpp:77] Creating layer relu4
I0406 18:19:52.580340 24348 net.cpp:106] Creating Layer relu4
I0406 18:19:52.580346 24348 net.cpp:454] relu4 <- conv4
I0406 18:19:52.580353 24348 net.cpp:397] relu4 -> conv4 (in-place)
I0406 18:19:52.580363 24348 net.cpp:150] Setting up relu4
I0406 18:19:52.580370 24348 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0406 18:19:52.580375 24348 net.cpp:165] Memory required for data: 19894656
I0406 18:19:52.580381 24348 layer_factory.hpp:77] Creating layer conv5
I0406 18:19:52.580394 24348 net.cpp:106] Creating Layer conv5
I0406 18:19:52.580400 24348 net.cpp:454] conv5 <- conv4
I0406 18:19:52.580409 24348 net.cpp:411] conv5 -> conv5
I0406 18:19:52.583613 24348 net.cpp:150] Setting up conv5
I0406 18:19:52.583629 24348 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0406 18:19:52.583636 24348 net.cpp:165] Memory required for data: 20125056
I0406 18:19:52.583650 24348 layer_factory.hpp:77] Creating layer relu5
I0406 18:19:52.583660 24348 net.cpp:106] Creating Layer relu5
I0406 18:19:52.583667 24348 net.cpp:454] relu5 <- conv5
I0406 18:19:52.583675 24348 net.cpp:397] relu5 -> conv5 (in-place)
I0406 18:19:52.583685 24348 net.cpp:150] Setting up relu5
I0406 18:19:52.583693 24348 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0406 18:19:52.583698 24348 net.cpp:165] Memory required for data: 20355456
I0406 18:19:52.583700 24348 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0406 18:19:52.583714 24348 net.cpp:106] Creating Layer conv5_relu5_0_split
I0406 18:19:52.583719 24348 net.cpp:454] conv5_relu5_0_split <- conv5
I0406 18:19:52.583725 24348 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0406 18:19:52.583734 24348 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0406 18:19:52.583778 24348 net.cpp:150] Setting up conv5_relu5_0_split
I0406 18:19:52.583786 24348 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0406 18:19:52.583794 24348 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0406 18:19:52.583798 24348 net.cpp:165] Memory required for data: 20816256
I0406 18:19:52.583802 24348 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0406 18:19:52.583816 24348 net.cpp:106] Creating Layer rpn_conv/3x3
I0406 18:19:52.583820 24348 net.cpp:454] rpn_conv/3x3 <- conv5_relu5_0_split_0
I0406 18:19:52.583829 24348 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0406 18:19:52.598985 24348 net.cpp:150] Setting up rpn_conv/3x3
I0406 18:19:52.599001 24348 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0406 18:19:52.599007 24348 net.cpp:165] Memory required for data: 21046656
I0406 18:19:52.599016 24348 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0406 18:19:52.599027 24348 net.cpp:106] Creating Layer rpn_relu/3x3
I0406 18:19:52.599033 24348 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0406 18:19:52.599040 24348 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0406 18:19:52.599050 24348 net.cpp:150] Setting up rpn_relu/3x3
I0406 18:19:52.599056 24348 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0406 18:19:52.599059 24348 net.cpp:165] Memory required for data: 21277056
I0406 18:19:52.599063 24348 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0406 18:19:52.599073 24348 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0406 18:19:52.599079 24348 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0406 18:19:52.599084 24348 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0406 18:19:52.599093 24348 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0406 18:19:52.599131 24348 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0406 18:19:52.599138 24348 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0406 18:19:52.599146 24348 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0406 18:19:52.599150 24348 net.cpp:165] Memory required for data: 21737856
I0406 18:19:52.599154 24348 layer_factory.hpp:77] Creating layer rpn_cls_score
I0406 18:19:52.599166 24348 net.cpp:106] Creating Layer rpn_cls_score
I0406 18:19:52.599171 24348 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0406 18:19:52.599179 24348 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0406 18:19:52.599534 24348 net.cpp:150] Setting up rpn_cls_score
I0406 18:19:52.599545 24348 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0406 18:19:52.599550 24348 net.cpp:165] Memory required for data: 21754056
I0406 18:19:52.599556 24348 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0406 18:19:52.599568 24348 net.cpp:106] Creating Layer rpn_bbox_pred
I0406 18:19:52.599573 24348 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0406 18:19:52.599581 24348 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0406 18:19:52.600020 24348 net.cpp:150] Setting up rpn_bbox_pred
I0406 18:19:52.600029 24348 net.cpp:157] Top shape: 1 36 15 15 (8100)
I0406 18:19:52.600034 24348 net.cpp:165] Memory required for data: 21786456
I0406 18:19:52.600041 24348 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0406 18:19:52.600055 24348 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0406 18:19:52.600060 24348 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0406 18:19:52.600069 24348 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0406 18:19:52.600103 24348 net.cpp:150] Setting up rpn_cls_score_reshape
I0406 18:19:52.600111 24348 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0406 18:19:52.600116 24348 net.cpp:165] Memory required for data: 21802656
I0406 18:19:52.600119 24348 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0406 18:19:52.600129 24348 net.cpp:106] Creating Layer rpn_cls_prob
I0406 18:19:52.600134 24348 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0406 18:19:52.600141 24348 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0406 18:19:52.600206 24348 net.cpp:150] Setting up rpn_cls_prob
I0406 18:19:52.600214 24348 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0406 18:19:52.600217 24348 net.cpp:165] Memory required for data: 21818856
I0406 18:19:52.600221 24348 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0406 18:19:52.600231 24348 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0406 18:19:52.600236 24348 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0406 18:19:52.600244 24348 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0406 18:19:52.600267 24348 net.cpp:150] Setting up rpn_cls_prob_reshape
I0406 18:19:52.600275 24348 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0406 18:19:52.600278 24348 net.cpp:165] Memory required for data: 21835056
I0406 18:19:52.600282 24348 layer_factory.hpp:77] Creating layer proposal
I0406 18:19:52.627194 24348 net.cpp:106] Creating Layer proposal
I0406 18:19:52.627221 24348 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0406 18:19:52.627241 24348 net.cpp:454] proposal <- rpn_bbox_pred
I0406 18:19:52.627256 24348 net.cpp:454] proposal <- im_info
I0406 18:19:52.627277 24348 net.cpp:411] proposal -> rois
I0406 18:19:52.629313 24348 net.cpp:150] Setting up proposal
I0406 18:19:52.629338 24348 net.cpp:157] Top shape: 1 5 (5)
I0406 18:19:52.629345 24348 net.cpp:165] Memory required for data: 21835076
I0406 18:19:52.629353 24348 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0406 18:19:52.629372 24348 net.cpp:106] Creating Layer roi_pool_conv5
I0406 18:19:52.629384 24348 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_1
I0406 18:19:52.629401 24348 net.cpp:454] roi_pool_conv5 <- rois
I0406 18:19:52.629418 24348 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0406 18:19:52.629459 24348 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0406 18:19:52.629590 24348 net.cpp:150] Setting up roi_pool_conv5
I0406 18:19:52.629608 24348 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0406 18:19:52.629619 24348 net.cpp:165] Memory required for data: 21871940
I0406 18:19:52.629636 24348 layer_factory.hpp:77] Creating layer fc6
I0406 18:19:52.629663 24348 net.cpp:106] Creating Layer fc6
I0406 18:19:52.629678 24348 net.cpp:454] fc6 <- roi_pool_conv5
I0406 18:19:52.629698 24348 net.cpp:411] fc6 -> fc6
I0406 18:19:52.764943 24348 net.cpp:150] Setting up fc6
I0406 18:19:52.764974 24348 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:19:52.764979 24348 net.cpp:165] Memory required for data: 21888324
I0406 18:19:52.764998 24348 layer_factory.hpp:77] Creating layer relu6
I0406 18:19:52.765012 24348 net.cpp:106] Creating Layer relu6
I0406 18:19:52.765019 24348 net.cpp:454] relu6 <- fc6
I0406 18:19:52.765030 24348 net.cpp:397] relu6 -> fc6 (in-place)
I0406 18:19:52.765046 24348 net.cpp:150] Setting up relu6
I0406 18:19:52.765053 24348 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:19:52.765059 24348 net.cpp:165] Memory required for data: 21904708
I0406 18:19:52.765066 24348 layer_factory.hpp:77] Creating layer drop6
I0406 18:19:52.765082 24348 net.cpp:106] Creating Layer drop6
I0406 18:19:52.765089 24348 net.cpp:454] drop6 <- fc6
I0406 18:19:52.765100 24348 net.cpp:397] drop6 -> fc6 (in-place)
I0406 18:19:52.765139 24348 net.cpp:150] Setting up drop6
I0406 18:19:52.765147 24348 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:19:52.765153 24348 net.cpp:165] Memory required for data: 21921092
I0406 18:19:52.765161 24348 layer_factory.hpp:77] Creating layer fc7
I0406 18:19:52.765173 24348 net.cpp:106] Creating Layer fc7
I0406 18:19:52.765180 24348 net.cpp:454] fc7 <- fc6
I0406 18:19:52.765192 24348 net.cpp:411] fc7 -> fc7
I0406 18:19:52.813395 24348 net.cpp:150] Setting up fc7
I0406 18:19:52.813428 24348 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:19:52.813433 24348 net.cpp:165] Memory required for data: 21937476
I0406 18:19:52.813448 24348 layer_factory.hpp:77] Creating layer relu7
I0406 18:19:52.813462 24348 net.cpp:106] Creating Layer relu7
I0406 18:19:52.813467 24348 net.cpp:454] relu7 <- fc7
I0406 18:19:52.813473 24348 net.cpp:397] relu7 -> fc7 (in-place)
I0406 18:19:52.813483 24348 net.cpp:150] Setting up relu7
I0406 18:19:52.813490 24348 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:19:52.813495 24348 net.cpp:165] Memory required for data: 21953860
I0406 18:19:52.813500 24348 layer_factory.hpp:77] Creating layer drop7
I0406 18:19:52.813511 24348 net.cpp:106] Creating Layer drop7
I0406 18:19:52.813518 24348 net.cpp:454] drop7 <- fc7
I0406 18:19:52.813524 24348 net.cpp:397] drop7 -> fc7 (in-place)
I0406 18:19:52.813560 24348 net.cpp:150] Setting up drop7
I0406 18:19:52.813570 24348 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:19:52.813576 24348 net.cpp:165] Memory required for data: 21970244
I0406 18:19:52.813585 24348 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0406 18:19:52.813597 24348 net.cpp:106] Creating Layer fc7_drop7_0_split
I0406 18:19:52.813606 24348 net.cpp:454] fc7_drop7_0_split <- fc7
I0406 18:19:52.813616 24348 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0406 18:19:52.813627 24348 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0406 18:19:52.813676 24348 net.cpp:150] Setting up fc7_drop7_0_split
I0406 18:19:52.813684 24348 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:19:52.813691 24348 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:19:52.813697 24348 net.cpp:165] Memory required for data: 22003012
I0406 18:19:52.813704 24348 layer_factory.hpp:77] Creating layer cls_score
I0406 18:19:52.813725 24348 net.cpp:106] Creating Layer cls_score
I0406 18:19:52.813732 24348 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0406 18:19:52.813745 24348 net.cpp:411] cls_score -> cls_score
I0406 18:19:52.813858 24348 net.cpp:150] Setting up cls_score
I0406 18:19:52.813865 24348 net.cpp:157] Top shape: 1 2 (2)
I0406 18:19:52.813871 24348 net.cpp:165] Memory required for data: 22003020
I0406 18:19:52.813904 24348 layer_factory.hpp:77] Creating layer bbox_pred
I0406 18:19:52.813918 24348 net.cpp:106] Creating Layer bbox_pred
I0406 18:19:52.813925 24348 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0406 18:19:52.813937 24348 net.cpp:411] bbox_pred -> bbox_pred
I0406 18:19:52.814873 24348 net.cpp:150] Setting up bbox_pred
I0406 18:19:52.814887 24348 net.cpp:157] Top shape: 1 8 (8)
I0406 18:19:52.814893 24348 net.cpp:165] Memory required for data: 22003052
I0406 18:19:52.814906 24348 layer_factory.hpp:77] Creating layer cls_prob
I0406 18:19:52.814920 24348 net.cpp:106] Creating Layer cls_prob
I0406 18:19:52.814929 24348 net.cpp:454] cls_prob <- cls_score
I0406 18:19:52.814939 24348 net.cpp:411] cls_prob -> cls_prob
I0406 18:19:52.815011 24348 net.cpp:150] Setting up cls_prob
I0406 18:19:52.815019 24348 net.cpp:157] Top shape: 1 2 (2)
I0406 18:19:52.815026 24348 net.cpp:165] Memory required for data: 22003060
I0406 18:19:52.815033 24348 net.cpp:228] cls_prob does not need backward computation.
I0406 18:19:52.815040 24348 net.cpp:228] bbox_pred does not need backward computation.
I0406 18:19:52.815047 24348 net.cpp:228] cls_score does not need backward computation.
I0406 18:19:52.815054 24348 net.cpp:228] fc7_drop7_0_split does not need backward computation.
I0406 18:19:52.815060 24348 net.cpp:228] drop7 does not need backward computation.
I0406 18:19:52.815066 24348 net.cpp:228] relu7 does not need backward computation.
I0406 18:19:52.815073 24348 net.cpp:228] fc7 does not need backward computation.
I0406 18:19:52.815079 24348 net.cpp:228] drop6 does not need backward computation.
I0406 18:19:52.815086 24348 net.cpp:228] relu6 does not need backward computation.
I0406 18:19:52.815093 24348 net.cpp:228] fc6 does not need backward computation.
I0406 18:19:52.815100 24348 net.cpp:228] roi_pool_conv5 does not need backward computation.
I0406 18:19:52.815107 24348 net.cpp:228] proposal does not need backward computation.
I0406 18:19:52.815116 24348 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0406 18:19:52.815124 24348 net.cpp:228] rpn_cls_prob does not need backward computation.
I0406 18:19:52.815130 24348 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0406 18:19:52.815138 24348 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0406 18:19:52.815145 24348 net.cpp:228] rpn_cls_score does not need backward computation.
I0406 18:19:52.815152 24348 net.cpp:228] rpn/output_rpn_relu/3x3_0_split does not need backward computation.
I0406 18:19:52.815160 24348 net.cpp:228] rpn_relu/3x3 does not need backward computation.
I0406 18:19:52.815166 24348 net.cpp:228] rpn_conv/3x3 does not need backward computation.
I0406 18:19:52.815173 24348 net.cpp:228] conv5_relu5_0_split does not need backward computation.
I0406 18:19:52.815181 24348 net.cpp:228] relu5 does not need backward computation.
I0406 18:19:52.815187 24348 net.cpp:228] conv5 does not need backward computation.
I0406 18:19:52.815194 24348 net.cpp:228] relu4 does not need backward computation.
I0406 18:19:52.815201 24348 net.cpp:228] conv4 does not need backward computation.
I0406 18:19:52.815208 24348 net.cpp:228] relu3 does not need backward computation.
I0406 18:19:52.815214 24348 net.cpp:228] conv3 does not need backward computation.
I0406 18:19:52.815222 24348 net.cpp:228] pool2 does not need backward computation.
I0406 18:19:52.815228 24348 net.cpp:228] norm2 does not need backward computation.
I0406 18:19:52.815237 24348 net.cpp:228] relu2 does not need backward computation.
I0406 18:19:52.815243 24348 net.cpp:228] conv2 does not need backward computation.
I0406 18:19:52.815249 24348 net.cpp:228] pool1 does not need backward computation.
I0406 18:19:52.815256 24348 net.cpp:228] norm1 does not need backward computation.
I0406 18:19:52.815263 24348 net.cpp:228] relu1 does not need backward computation.
I0406 18:19:52.815270 24348 net.cpp:228] conv1 does not need backward computation.
I0406 18:19:52.815276 24348 net.cpp:270] This network produces output bbox_pred
I0406 18:19:52.815284 24348 net.cpp:270] This network produces output cls_prob
I0406 18:19:52.815321 24348 net.cpp:283] Network initialization done.
I0406 18:19:55.362164 24348 net.cpp:816] Ignoring source layer input-data
I0406 18:19:55.362201 24348 net.cpp:816] Ignoring source layer data_input-data_0_split
I0406 18:19:55.362208 24348 net.cpp:816] Ignoring source layer im_info_input-data_1_split
I0406 18:19:55.362215 24348 net.cpp:816] Ignoring source layer gt_boxes_input-data_2_split
I0406 18:19:55.369884 24348 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0406 18:19:55.369937 24348 net.cpp:816] Ignoring source layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0406 18:19:55.369945 24348 net.cpp:816] Ignoring source layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0406 18:19:55.369948 24348 net.cpp:816] Ignoring source layer rpn-data
I0406 18:19:55.369952 24348 net.cpp:816] Ignoring source layer rpn_loss_cls
I0406 18:19:55.369957 24348 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0406 18:19:55.369966 24348 net.cpp:816] Ignoring source layer roi-data
I0406 18:19:55.428403 24348 net.cpp:816] Ignoring source layer loss_cls
I0406 18:19:55.428421 24348 net.cpp:816] Ignoring source layer loss_bbox
NET
<caffe._caffe.Net object at 0x2aaada1aae68>
im_detect: 1/38 0.213s 0.000s
im_detect: 2/38 0.175s 0.000s
im_detect: 3/38 0.157s 0.000s
im_detect: 4/38 0.148s 0.000s
im_detect: 5/38 0.141s 0.000s
im_detect: 6/38 0.136s 0.000s
im_detect: 7/38 0.132s 0.000s
im_detect: 8/38 0.130s 0.000s
im_detect: 9/38 0.128s 0.000s
im_detect: 10/38 0.128s 0.000s
im_detect: 11/38 0.126s 0.000s
im_detect: 12/38 0.126s 0.000s
im_detect: 13/38 0.125s 0.000s
im_detect: 14/38 0.124s 0.000s
im_detect: 15/38 0.123s 0.000s
im_detect: 16/38 0.122s 0.000s
im_detect: 17/38 0.122s 0.000s
im_detect: 18/38 0.121s 0.000s
im_detect: 19/38 0.120s 0.000s
im_detect: 20/38 0.120s 0.000s
im_detect: 21/38 0.120s 0.000s
im_detect: 22/38 0.120s 0.000s
im_detect: 23/38 0.120s 0.000s
im_detect: 24/38 0.120s 0.000s
im_detect: 25/38 0.119s 0.000s
im_detect: 26/38 0.119s 0.000s
im_detect: 27/38 0.119s 0.000s
im_detect: 28/38 0.119s 0.000s
im_detect: 29/38 0.119s 0.000s
im_detect: 30/38 0.118s 0.000s
im_detect: 31/38 0.119s 0.000s
im_detect: 32/38 0.118s 0.000s
im_detect: 33/38 0.119s 0.000s
im_detect: 34/38 0.119s 0.000s
im_detect: 35/38 0.119s 0.000s
im_detect: 36/38 0.118s 0.000s
im_detect: 37/38 0.118s 0.000s
im_detect: 38/38 0.118s 0.000s
Evaluating detections
Writing roost VOC results file
VOC07 metric? Yes
/home/sgabriel/py-faster-rcnn/data/VOCdevkit2007/annotations_cache
AP for roost = 0.1904
Mean Precision for roost = 0.0775
Mean Recall for roost = 0.2324
Mean AP = 0.1904
~~~~~~~~
Results:
0.190
0.190
~~~~~~~~

--------------------------------------------------------------
Results computed with the **unofficial** Python eval code.
Results should be very close to the official MATLAB eval code.
Recompute with `./tools/reval.py --matlab ...` for your paper.
-- Thanks, The Management
--------------------------------------------------------------

real	0m17.839s
user	0m13.129s
sys	0m1.853s
<function <lambda> at 0x2aaad7b422a8>
<function <lambda> at 0x2aaad7b42320>
<function <lambda> at 0x2aaad7b42398>
<function <lambda> at 0x2aaad7b42410>
Called with args:
Namespace(cfg_file='../../experiments/cfgs/roost.yml', gpu_id=1, imdb_name='CNNDATA_trainval', max_iters=1, pretrained_model='../../data/imagenet_models/ZF.v2.caffemodel', randomize=False, set_cfgs=None, solver='../../models/pascal_voc/ZF/faster_rcnn_end2end/solver.prototxt')
Using config:
{'DATA_DIR': '/home/sgabriel/py-faster-rcnn/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 1,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/sgabriel/py-faster-rcnn/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 17,
 'ROOT_DIR': '/home/sgabriel/py-faster-rcnn',
 'TEST': {'BBOX_REG': False,
          'HAS_RPN': True,
          'MAX_SIZE': 600,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 4,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 600,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': False}
../../tools/train_net.py:101: RuntimeWarning: to-Python converter for boost::shared_ptr<caffe::Blob<float> > already registered; second conversion method ignored.
  caffe.set_mode_gpu()
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /home/sgabriel/py-faster-rcnn/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
done
1000 roidb entries
Output will be saved to `/home/sgabriel/py-faster-rcnn/output/default/voc_2007_trainval`
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/1.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 194, 396, 212],
       [169, 173, 184, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/2.jpg', 'flipped': False, 'width': 600, 'boxes': array([[372, 185, 399, 212],
       [165, 166, 189, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 784.,  625.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/3.jpg', 'flipped': False, 'width': 600, 'boxes': array([[368, 179, 407, 218],
       [162, 163, 192, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,   961.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/4.jpg', 'flipped': False, 'width': 600, 'boxes': array([[363, 175, 417, 229],
       [163, 162, 202, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  1600.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/5.jpg', 'flipped': False, 'width': 600, 'boxes': array([[170, 173, 182, 185]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/6.jpg', 'flipped': False, 'width': 600, 'boxes': array([[169, 173, 184, 188],
       [378, 194, 396, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  361.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/7.jpg', 'flipped': False, 'width': 600, 'boxes': array([[165, 166, 189, 190],
       [372, 185, 399, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  784.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/8.jpg', 'flipped': False, 'width': 600, 'boxes': array([[162, 163, 192, 193],
       [368, 179, 407, 218]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/9.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163, 162, 202, 201],
       [363, 175, 417, 229]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,  3025.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/10.jpg', 'flipped': False, 'width': 600, 'boxes': array([[154, 149, 211, 206]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/11.jpg', 'flipped': False, 'width': 600, 'boxes': array([[150, 145, 216, 211]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/12.jpg', 'flipped': False, 'width': 600, 'boxes': array([[145, 140, 220, 215]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/13.jpg', 'flipped': False, 'width': 600, 'boxes': array([[381, 189, 396, 204],
       [226, 388, 241, 403],
       [168, 159, 195, 186],
       [373, 185, 391, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  784.,  361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/14.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 185, 413, 215],
       [220, 373, 262, 415],
       [166, 143, 220, 197],
       [372, 173, 408, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1849.,  3025.,  1369.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/15.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 173, 426, 221],
       [214, 362, 280, 428],
       [159, 137, 231, 209],
       [367, 158, 421, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  4489.,  5329.,  3025.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/16.jpg', 'flipped': False, 'width': 600, 'boxes': array([[203, 364, 284, 445],
       [152, 130, 242, 220],
       [364, 144, 430, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 6724.,  8281.,  4489.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/17.jpg', 'flipped': False, 'width': 600, 'boxes': array([[381, 189, 396, 204],
       [226, 388, 241, 403],
       [168, 159, 195, 186],
       [373, 185, 391, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  784.,  361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/18.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 185, 413, 215],
       [220, 373, 262, 415],
       [166, 143, 220, 197],
       [372, 173, 408, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1849.,  3025.,  1369.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/19.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 173, 426, 221],
       [214, 362, 280, 428],
       [159, 137, 231, 209],
       [367, 158, 421, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  4489.,  5329.,  3025.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/20.jpg', 'flipped': False, 'width': 600, 'boxes': array([[203, 364, 284, 445],
       [152, 130, 242, 220],
       [364, 144, 430, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 6724.,  8281.,  4489.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/21.jpg', 'flipped': False, 'width': 600, 'boxes': array([[143, 116, 257, 230]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 13225.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/22.jpg', 'flipped': False, 'width': 600, 'boxes': array([[381, 189, 396, 204],
       [226, 388, 241, 403],
       [168, 159, 195, 186],
       [373, 185, 391, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  784.,  361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/23.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 185, 413, 215],
       [220, 373, 262, 415],
       [166, 143, 220, 197],
       [372, 173, 408, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1849.,  3025.,  1369.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/24.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 173, 426, 221],
       [214, 362, 280, 428],
       [159, 137, 231, 209],
       [367, 158, 421, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  4489.,  5329.,  3025.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/25.jpg', 'flipped': False, 'width': 600, 'boxes': array([[203, 364, 284, 445],
       [152, 130, 242, 220],
       [364, 144, 430, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 6724.,  8281.,  4489.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/26.jpg', 'flipped': False, 'width': 600, 'boxes': array([[381, 189, 396, 204],
       [226, 388, 241, 403],
       [168, 159, 195, 186],
       [373, 185, 391, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  784.,  361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/27.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 185, 413, 215],
       [220, 373, 262, 415],
       [166, 143, 220, 197],
       [372, 173, 408, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1849.,  3025.,  1369.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/28.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 173, 426, 221],
       [214, 362, 280, 428],
       [159, 137, 231, 209],
       [367, 158, 421, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  4489.,  5329.,  3025.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/29.jpg', 'flipped': False, 'width': 600, 'boxes': array([[371, 194, 383, 206]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/30.jpg', 'flipped': False, 'width': 600, 'boxes': array([[272, 149, 287, 164],
       [155, 172, 182, 199],
       [362, 191, 386, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  784.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/31.jpg', 'flipped': False, 'width': 600, 'boxes': array([[267, 145, 291, 169],
       [149, 166, 188, 205],
       [348, 183, 390, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,  1849.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/32.jpg', 'flipped': False, 'width': 600, 'boxes': array([[259, 137, 298, 176],
       [141, 165, 192, 216],
       [344, 183, 389, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,  2704.,  2116.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/33.jpg', 'flipped': False, 'width': 600, 'boxes': array([[251, 131, 302, 182],
       [132, 156, 201, 225],
       [340, 182, 391, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2704.,  4900.,  2704.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/34.jpg', 'flipped': False, 'width': 600, 'boxes': array([[242, 126, 308, 192],
       [125, 151, 203, 229],
       [328, 173, 397, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  6241.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/35.jpg', 'flipped': False, 'width': 600, 'boxes': array([[228, 118, 315, 205],
       [110, 146, 209, 245],
       [322, 173, 400, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  10000.,   6241.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/36.jpg', 'flipped': False, 'width': 600, 'boxes': array([[272, 149, 287, 164],
       [155, 172, 182, 199],
       [362, 191, 386, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  784.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/37.jpg', 'flipped': False, 'width': 600, 'boxes': array([[267, 145, 291, 169],
       [149, 166, 188, 205],
       [348, 183, 390, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,  1849.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/38.jpg', 'flipped': False, 'width': 600, 'boxes': array([[259, 137, 298, 176],
       [141, 165, 192, 216],
       [344, 183, 389, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,  2704.,  2116.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/39.jpg', 'flipped': False, 'width': 600, 'boxes': array([[251, 131, 302, 182],
       [132, 156, 201, 225],
       [340, 182, 391, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2704.,  4900.,  2704.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/40.jpg', 'flipped': False, 'width': 600, 'boxes': array([[242, 126, 308, 192],
       [125, 151, 203, 229],
       [328, 173, 397, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  6241.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/41.jpg', 'flipped': False, 'width': 600, 'boxes': array([[228, 118, 315, 205],
       [110, 146, 209, 245],
       [322, 173, 400, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  10000.,   6241.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/42.jpg', 'flipped': False, 'width': 600, 'boxes': array([[ 97, 141, 217, 261]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 14641.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/43.jpg', 'flipped': False, 'width': 600, 'boxes': array([[ 93, 136, 219, 262]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 16129.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/44.jpg', 'flipped': False, 'width': 600, 'boxes': array([[272, 149, 287, 164],
       [155, 172, 182, 199],
       [362, 191, 386, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  784.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/45.jpg', 'flipped': False, 'width': 600, 'boxes': array([[267, 145, 291, 169],
       [149, 166, 188, 205],
       [348, 183, 390, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,  1849.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/46.jpg', 'flipped': False, 'width': 600, 'boxes': array([[259, 137, 298, 176],
       [141, 165, 192, 216],
       [344, 183, 389, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,  2704.,  2116.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/47.jpg', 'flipped': False, 'width': 600, 'boxes': array([[251, 131, 302, 182],
       [132, 156, 201, 225],
       [340, 182, 391, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2704.,  4900.,  2704.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/48.jpg', 'flipped': False, 'width': 600, 'boxes': array([[242, 126, 308, 192],
       [125, 151, 203, 229],
       [328, 173, 397, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  6241.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/49.jpg', 'flipped': False, 'width': 600, 'boxes': array([[228, 118, 315, 205],
       [110, 146, 209, 245],
       [322, 173, 400, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  10000.,   6241.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/50.jpg', 'flipped': False, 'width': 600, 'boxes': array([[225, 395, 246, 416],
       [379, 200, 400, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 484.,  484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/51.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 388, 257, 421],
       [381, 196, 393, 208],
       [376, 195, 406, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   169.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/52.jpg', 'flipped': False, 'width': 600, 'boxes': array([[321, 282, 333, 294],
       [223, 388, 268, 433],
       [282, 140, 309, 167],
       [379, 187, 406, 214],
       [382, 192, 433, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,  2116.,   784.,   784.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/53.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/54.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 388, 257, 421],
       [381, 196, 393, 208],
       [376, 195, 406, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   169.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/55.jpg', 'flipped': False, 'width': 600, 'boxes': array([[321, 282, 333, 294],
       [223, 388, 268, 433],
       [282, 140, 309, 167],
       [379, 187, 406, 214],
       [382, 192, 433, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,  2116.,   784.,   784.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/56.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/57.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 337, 269, 382],
       [224, 378, 299, 453],
       [277, 118, 358, 199],
       [367, 174, 436, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  5776.,  6724.,  4900.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/58.jpg', 'flipped': False, 'width': 600, 'boxes': array([[321, 282, 333, 294],
       [223, 388, 268, 433],
       [282, 140, 309, 167],
       [379, 187, 406, 214],
       [382, 192, 433, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,  2116.,   784.,   784.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/59.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/60.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 337, 269, 382],
       [224, 378, 299, 453],
       [277, 118, 358, 199],
       [367, 174, 436, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  5776.,  6724.,  4900.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/61.jpg', 'flipped': False, 'width': 600, 'boxes': array([[229, 398, 241, 410]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/62.jpg', 'flipped': False, 'width': 600, 'boxes': array([[225, 395, 246, 416],
       [379, 200, 400, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 484.,  484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/63.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 388, 257, 421],
       [381, 196, 393, 208],
       [376, 195, 406, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   169.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/64.jpg', 'flipped': False, 'width': 600, 'boxes': array([[321, 282, 333, 294],
       [223, 388, 268, 433],
       [282, 140, 309, 167],
       [379, 187, 406, 214],
       [382, 192, 433, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,  2116.,   784.,   784.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/65.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/66.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 337, 269, 382],
       [224, 378, 299, 453],
       [277, 118, 358, 199],
       [367, 174, 436, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  5776.,  6724.,  4900.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/67.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/68.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 337, 269, 382],
       [224, 378, 299, 453],
       [277, 118, 358, 199],
       [367, 174, 436, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  5776.,  6724.,  4900.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/69.jpg', 'flipped': False, 'width': 600, 'boxes': array([[321, 282, 333, 294],
       [223, 388, 268, 433],
       [282, 140, 309, 167],
       [379, 187, 406, 214],
       [382, 192, 433, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,  2116.,   784.,   784.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/70.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/71.jpg', 'flipped': False, 'width': 600, 'boxes': array([[217, 392, 253, 428],
       [168, 167, 222, 221],
       [377, 194, 395, 212],
       [375, 190, 393, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  3025.,   361.,   361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/72.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 190, 418, 232],
       [373, 187, 394, 208],
       [283, 147, 295, 159],
       [163, 161, 241, 239],
       [215, 385, 260, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.,   484.,   169.,  6241.,  2116.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/73.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/74.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/75.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/76.jpg', 'flipped': False, 'width': 600, 'boxes': array([[217, 392, 253, 428],
       [168, 167, 222, 221],
       [377, 194, 395, 212],
       [375, 190, 393, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  3025.,   361.,   361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/77.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 190, 418, 232],
       [373, 187, 394, 208],
       [283, 147, 295, 159],
       [163, 161, 241, 239],
       [215, 385, 260, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.,   484.,   169.,  6241.,  2116.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/78.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/79.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/80.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/81.jpg', 'flipped': False, 'width': 600, 'boxes': array([[219, 335, 267, 383],
       [267, 118, 357, 208],
       [346, 127, 535, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,   8281.,  36100.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/82.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 190, 418, 232],
       [373, 187, 394, 208],
       [283, 147, 295, 159],
       [163, 161, 241, 239],
       [215, 385, 260, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.,   484.,   169.,  6241.,  2116.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/83.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/84.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/85.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/86.jpg', 'flipped': False, 'width': 600, 'boxes': array([[219, 335, 267, 383],
       [267, 118, 357, 208],
       [346, 127, 535, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,   8281.,  36100.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/87.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/88.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/89.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/90.jpg', 'flipped': False, 'width': 600, 'boxes': array([[170, 170, 206, 206],
       [223, 397, 244, 418]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/91.jpg', 'flipped': False, 'width': 600, 'boxes': array([[217, 392, 253, 428],
       [168, 167, 222, 221],
       [377, 194, 395, 212],
       [375, 190, 393, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  3025.,   361.,   361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/92.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 190, 418, 232],
       [373, 187, 394, 208],
       [283, 147, 295, 159],
       [163, 161, 241, 239],
       [215, 385, 260, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.,   484.,   169.,  6241.,  2116.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/93.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/94.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/95.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/96.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 400, 236, 412]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/97.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 397, 244, 418],
       [170, 170, 206, 206]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/98.jpg', 'flipped': False, 'width': 600, 'boxes': array([[217, 392, 253, 428],
       [168, 167, 222, 221],
       [377, 194, 395, 212],
       [375, 190, 393, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  3025.,   361.,   361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/99.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 190, 418, 232],
       [373, 187, 394, 208],
       [283, 147, 295, 159],
       [163, 161, 241, 239],
       [215, 385, 260, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.,   484.,   169.,  6241.,  2116.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/100.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/101.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/103.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/104.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/105.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/106.jpg', 'flipped': False, 'width': 600, 'boxes': array([[219, 335, 267, 383],
       [267, 118, 357, 208],
       [346, 127, 535, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,   8281.,  36100.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/107.jpg', 'flipped': False, 'width': 600, 'boxes': array([[374, 196, 386, 208],
       [148, 172, 175, 199]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  784.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/108.jpg', 'flipped': False, 'width': 600, 'boxes': array([[214, 398, 229, 413],
       [155, 166, 185, 196],
       [364, 186, 394, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  961.,  961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/109.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 394, 237, 424],
       [152, 158, 191, 197],
       [271, 141, 289, 159],
       [362, 184, 389, 211],
       [347, 167, 422, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.,   361.,   784.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/110.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/111.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/112.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 394, 237, 424],
       [152, 158, 191, 197],
       [271, 141, 289, 159],
       [362, 184, 389, 211],
       [347, 167, 422, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.,   361.,   784.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/113.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/114.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/115.jpg', 'flipped': False, 'width': 600, 'boxes': array([[216, 333, 243, 360],
       [174, 364, 276, 466],
       [113, 102, 275, 264],
       [235, 109, 316, 190],
       [320, 145, 452, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   784.,  10609.,  26569.,   6724.,  17689.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/116.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 394, 237, 424],
       [152, 158, 191, 197],
       [271, 141, 289, 159],
       [362, 184, 389, 211],
       [347, 167, 422, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.,   361.,   784.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/117.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/118.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/119.jpg', 'flipped': False, 'width': 600, 'boxes': array([[216, 333, 243, 360],
       [174, 364, 276, 466],
       [113, 102, 275, 264],
       [235, 109, 316, 190],
       [320, 145, 452, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   784.,  10609.,  26569.,   6724.,  17689.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/120.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224,  97, 326, 199],
       [209, 326, 251, 368]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 10609.,   1849.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/121.jpg', 'flipped': False, 'width': 600, 'boxes': array([[156, 180, 168, 192]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/122.jpg', 'flipped': False, 'width': 600, 'boxes': array([[148, 172, 175, 199],
       [374, 196, 386, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 784.,  169.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/123.jpg', 'flipped': False, 'width': 600, 'boxes': array([[214, 398, 229, 413],
       [155, 166, 185, 196],
       [364, 186, 394, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  961.,  961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/124.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 394, 237, 424],
       [152, 158, 191, 197],
       [271, 141, 289, 159],
       [362, 184, 389, 211],
       [347, 167, 422, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.,   361.,   784.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/125.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/126.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/127.jpg', 'flipped': False, 'width': 600, 'boxes': array([[216, 333, 243, 360],
       [174, 364, 276, 466],
       [113, 102, 275, 264],
       [235, 109, 316, 190],
       [320, 145, 452, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   784.,  10609.,  26569.,   6724.,  17689.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/128.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/129.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/130.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/131.jpg', 'flipped': False, 'width': 600, 'boxes': array([[214, 398, 229, 413],
       [155, 166, 185, 196],
       [364, 186, 394, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  961.,  961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/132.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 394, 237, 424],
       [152, 158, 191, 197],
       [271, 141, 289, 159],
       [362, 184, 389, 211],
       [347, 167, 422, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.,   361.,   784.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/133.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/134.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/135.jpg', 'flipped': False, 'width': 600, 'boxes': array([[216, 333, 243, 360],
       [174, 364, 276, 466],
       [113, 102, 275, 264],
       [235, 109, 316, 190],
       [320, 145, 452, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   784.,  10609.,  26569.,   6724.,  17689.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/136.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/137.jpg', 'flipped': False, 'width': 600, 'boxes': array([[216, 333, 243, 360],
       [174, 364, 276, 466],
       [113, 102, 275, 264],
       [235, 109, 316, 190],
       [320, 145, 452, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   784.,  10609.,  26569.,   6724.,  17689.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/138.jpg', 'flipped': False, 'width': 600, 'boxes': array([[209, 326, 251, 368],
       [224,  97, 326, 199]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1849.,  10609.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/139.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/140.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/141.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 158, 192, 182],
       [228, 392, 240, 404],
       [385, 185, 406, 206],
       [375, 179, 396, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  169.,  484.,  484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/142.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/143.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/144.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 158, 192, 182],
       [228, 392, 240, 404],
       [385, 185, 406, 206],
       [375, 179, 396, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  169.,  484.,  484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/145.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/146.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/147.jpg', 'flipped': False, 'width': 600, 'boxes': array([[285, 109, 339, 163],
       [151,  99, 262, 210],
       [353, 128, 485, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,  12544.,  17689.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/148.jpg', 'flipped': False, 'width': 600, 'boxes': array([[334, 105, 514, 285],
       [147,  95, 279, 227]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 32761.,  17689.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/149.jpg', 'flipped': False, 'width': 600, 'boxes': array([[325,  96, 523, 294],
       [151,  88, 310, 247]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 39601.,  25600.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/150.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 158, 192, 182],
       [228, 392, 240, 404],
       [385, 185, 406, 206],
       [375, 179, 396, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  169.,  484.,  484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/151.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/152.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/153.jpg', 'flipped': False, 'width': 600, 'boxes': array([[285, 109, 339, 163],
       [151,  99, 262, 210],
       [353, 128, 485, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,  12544.,  17689.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/154.jpg', 'flipped': False, 'width': 600, 'boxes': array([[147,  95, 279, 227],
       [334, 105, 514, 285]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 17689.,  32761.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/155.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  88, 310, 247],
       [325,  96, 523, 294]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 25600.,  39601.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/156.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/157.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/158.jpg', 'flipped': False, 'width': 600, 'boxes': array([[285, 109, 339, 163],
       [151,  99, 262, 210],
       [353, 128, 485, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,  12544.,  17689.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/159.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 158, 192, 182],
       [228, 392, 240, 404],
       [385, 185, 406, 206],
       [375, 179, 396, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  169.,  484.,  484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/160.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/161.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/162.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/163.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/164.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 187, 388, 199]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/165.jpg', 'flipped': False, 'width': 600, 'boxes': array([[373, 175, 400, 202]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 784.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/166.jpg', 'flipped': False, 'width': 600, 'boxes': array([[374, 166, 416, 208]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/167.jpg', 'flipped': False, 'width': 600, 'boxes': array([[371, 154, 440, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/168.jpg', 'flipped': False, 'width': 600, 'boxes': array([[371, 147, 458, 234]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 7744.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/169.jpg', 'flipped': False, 'width': 600, 'boxes': array([[369, 134, 480, 245]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/170.jpg', 'flipped': False, 'width': 600, 'boxes': array([[365, 122, 497, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 17689.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/171.jpg', 'flipped': False, 'width': 600, 'boxes': array([[345, 102, 516, 273]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 29584.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/172.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 196, 390, 208]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/173.jpg', 'flipped': False, 'width': 600, 'boxes': array([[371, 195, 407, 231],
       [377, 199, 392, 214]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/174.jpg', 'flipped': False, 'width': 600, 'boxes': array([[283, 151, 292, 160],
       [377, 196, 398, 217],
       [345, 162, 438, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  100.,   484.,  8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/175.jpg', 'flipped': False, 'width': 600, 'boxes': array([[275, 142, 308, 175],
       [375, 191, 393, 209],
       [365, 190, 428, 253],
       [328, 149, 478, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,    361.,   4096.,  22801.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/176.jpg', 'flipped': False, 'width': 600, 'boxes': array([[277, 148, 331, 202],
       [374, 193, 413, 232],
       [336, 176, 447, 287],
       [291, 123, 513, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,   1600.,  12544.,  49729.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/177.jpg', 'flipped': False, 'width': 600, 'boxes': array([[377, 199, 392, 214],
       [371, 195, 407, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  256.,  1369.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/178.jpg', 'flipped': False, 'width': 600, 'boxes': array([[283, 151, 292, 160],
       [377, 196, 398, 217],
       [345, 162, 438, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  100.,   484.,  8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/179.jpg', 'flipped': False, 'width': 600, 'boxes': array([[275, 142, 308, 175],
       [375, 191, 393, 209],
       [365, 190, 428, 253],
       [328, 149, 478, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,    361.,   4096.,  22801.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/180.jpg', 'flipped': False, 'width': 600, 'boxes': array([[277, 148, 331, 202],
       [374, 193, 413, 232],
       [336, 176, 447, 287],
       [291, 123, 513, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,   1600.,  12544.,  49729.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/181.jpg', 'flipped': False, 'width': 600, 'boxes': array([[275, 142, 308, 175],
       [375, 191, 393, 209],
       [365, 190, 428, 253],
       [328, 149, 478, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,    361.,   4096.,  22801.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/182.jpg', 'flipped': False, 'width': 600, 'boxes': array([[277, 148, 331, 202],
       [374, 193, 413, 232],
       [336, 176, 447, 287],
       [291, 123, 513, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,   1600.,  12544.,  49729.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/183.jpg', 'flipped': False, 'width': 600, 'boxes': array([[283, 151, 292, 160],
       [377, 196, 398, 217],
       [345, 162, 438, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  100.,   484.,  8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/184.jpg', 'flipped': False, 'width': 600, 'boxes': array([[275, 142, 308, 175],
       [375, 191, 393, 209],
       [365, 190, 428, 253],
       [328, 149, 478, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,    361.,   4096.,  22801.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/185.jpg', 'flipped': False, 'width': 600, 'boxes': array([[277, 148, 331, 202],
       [374, 193, 413, 232],
       [336, 176, 447, 287],
       [291, 123, 513, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,   1600.,  12544.,  49729.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/186.jpg', 'flipped': False, 'width': 600, 'boxes': array([[279, 157, 345, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/187.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/188.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/189.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/190.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/191.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/192.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/193.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/194.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/195.jpg', 'flipped': False, 'width': 600, 'boxes': array([[372, 194, 399, 221],
       [357, 196, 423, 262]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  4489.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/196.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/197.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/198.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/199.jpg', 'flipped': False, 'width': 600, 'boxes': array([[379, 196, 385, 202]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 49.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/200.jpg', 'flipped': False, 'width': 600, 'boxes': array([[368, 197, 404, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/201.jpg', 'flipped': False, 'width': 600, 'boxes': array([[357, 196, 423, 262],
       [372, 194, 399, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,   784.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/202.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/203.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/204.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/205.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/206.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/207.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/208.jpg', 'flipped': False, 'width': 600, 'boxes': array([[253, 140, 343, 230]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 8281.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/209.jpg', 'flipped': False, 'width': 600, 'boxes': array([[249, 135, 348, 234]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 10000.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/210.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/211.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/212.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/213.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/214.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/215.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/216.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/217.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/218.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/219.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/220.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/221.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/222.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/223.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/224.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/225.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/226.jpg', 'flipped': False, 'width': 600, 'boxes': array([[278, 149, 290, 161],
       [367, 197, 382, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/227.jpg', 'flipped': False, 'width': 600, 'boxes': array([[266, 140, 302, 176]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/228.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/229.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/230.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/231.jpg', 'flipped': False, 'width': 600, 'boxes': array([[186,  46, 246, 106],
       [420, 109, 504, 193],
       [330, 174, 429, 273],
       [229, 121, 331, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3721.,   7225.,  10000.,  10609.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/232.jpg', 'flipped': False, 'width': 600, 'boxes': array([[220, 115, 340, 235],
       [326, 173, 437, 284]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 14641.,  12544.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/233.jpg', 'flipped': False, 'width': 600, 'boxes': array([[214, 111, 346, 243]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 17689.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/234.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 103, 353, 250]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 21904.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/235.jpg', 'flipped': False, 'width': 600, 'boxes': array([[225, 186, 243, 204]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/236.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/237.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/238.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/239.jpg', 'flipped': False, 'width': 600, 'boxes': array([[367, 197, 382, 212],
       [278, 149, 290, 161]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  169.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/240.jpg', 'flipped': False, 'width': 600, 'boxes': array([[360, 193, 387, 220]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 784.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/241.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/242.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/243.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/244.jpg', 'flipped': False, 'width': 600, 'boxes': array([[186,  46, 246, 106],
       [420, 109, 504, 193],
       [330, 174, 429, 273],
       [229, 121, 331, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3721.,   7225.,  10000.,  10609.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/245.jpg', 'flipped': False, 'width': 600, 'boxes': array([[326, 173, 437, 284],
       [220, 115, 340, 235]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.,  14641.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/246.jpg', 'flipped': False, 'width': 600, 'boxes': array([[408, 167, 438, 197]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 961.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/247.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/248.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/249.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/250.jpg', 'flipped': False, 'width': 600, 'boxes': array([[445, 124, 478, 157]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/251.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/252.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/253.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/254.jpg', 'flipped': False, 'width': 600, 'boxes': array([[186,  46, 246, 106],
       [420, 109, 504, 193],
       [330, 174, 429, 273],
       [229, 121, 331, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3721.,   7225.,  10000.,  10609.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/255.jpg', 'flipped': False, 'width': 600, 'boxes': array([[167,  83, 185, 101]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/256.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/257.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/258.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/259.jpg', 'flipped': False, 'width': 600, 'boxes': array([[203,  58, 227,  82]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/260.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/261.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/262.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/263.jpg', 'flipped': False, 'width': 600, 'boxes': array([[186,  46, 246, 106],
       [420, 109, 504, 193],
       [330, 174, 429, 273],
       [229, 121, 331, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3721.,   7225.,  10000.,  10609.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/264.jpg', 'flipped': False, 'width': 600, 'boxes': array([[214, 324, 229, 339]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/265.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/266.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/267.jpg', 'flipped': False, 'width': 600, 'boxes': array([[245, 337, 266, 358]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 484.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/268.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/269.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/270.jpg', 'flipped': False, 'width': 600, 'boxes': array([[277, 141, 295, 159]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/271.jpg', 'flipped': False, 'width': 600, 'boxes': array([[274, 132, 304, 162]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 961.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/272.jpg', 'flipped': False, 'width': 600, 'boxes': array([[269, 121, 314, 166]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/273.jpg', 'flipped': False, 'width': 600, 'boxes': array([[263, 112, 326, 175]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4096.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/274.jpg', 'flipped': False, 'width': 600, 'boxes': array([[261, 104, 336, 179]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/275.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/276.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/277.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/278.jpg', 'flipped': False, 'width': 600, 'boxes': array([[209, 180, 263, 234],
       [257, 134, 335, 212],
       [439, 108, 535, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  6241.,  9409.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/279.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/280.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/281.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/282.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/283.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/284.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/285.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/286.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/287.jpg', 'flipped': False, 'width': 600, 'boxes': array([[209, 180, 263, 234],
       [257, 134, 335, 212],
       [439, 108, 535, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  6241.,  9409.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/288.jpg', 'flipped': False, 'width': 600, 'boxes': array([[248, 120, 365, 237]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 13924.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/289.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/290.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/291.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/292.jpg', 'flipped': False, 'width': 600, 'boxes': array([[209, 180, 263, 234],
       [257, 134, 335, 212],
       [439, 108, 535, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  6241.,  9409.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/293.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/294.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/295.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/296.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/297.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/298.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/299.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/300.jpg', 'flipped': False, 'width': 600, 'boxes': array([[453, 126, 465, 138]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/301.jpg', 'flipped': False, 'width': 600, 'boxes': array([[439, 108, 472, 141],
       [264, 120, 297, 153]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1156.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/302.jpg', 'flipped': False, 'width': 600, 'boxes': array([[420,  91, 477, 148],
       [255,  98, 315, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3721.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/303.jpg', 'flipped': False, 'width': 600, 'boxes': array([[403,  70, 478, 145],
       [246,  71, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.,  7744.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/304.jpg', 'flipped': False, 'width': 600, 'boxes': array([[264, 120, 297, 153],
       [439, 108, 472, 141]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1156.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/305.jpg', 'flipped': False, 'width': 600, 'boxes': array([[255,  98, 315, 158],
       [420,  91, 477, 148]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3364.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/306.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246,  71, 333, 158],
       [403,  70, 478, 145]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 7744.,  5776.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/307.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 194, 387, 203],
       [168, 192, 177, 201],
       [286, 152, 289, 155]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,  100.,   16.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/308.jpg', 'flipped': False, 'width': 600, 'boxes': array([[287, 146, 305, 164],
       [382, 191, 403, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/309.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 191, 407, 215],
       [161, 177, 200, 216],
       [290, 140, 320, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/310.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163, 176, 217, 230],
       [290, 136, 326, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  1369.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/311.jpg', 'flipped': False, 'width': 600, 'boxes': array([[294, 135, 342, 183],
       [186,  96, 207, 117]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,   484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/312.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181,  89, 220, 128],
       [170,  52, 194,  76],
       [287, 132, 356, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,   625.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/313.jpg', 'flipped': False, 'width': 600, 'boxes': array([[179,  87, 236, 144],
       [169,  50, 208,  89],
       [284, 130, 365, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  6724.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/314.jpg', 'flipped': False, 'width': 600, 'boxes': array([[180,  93, 243, 156],
       [167,  48, 218,  99],
       [275, 127, 374, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4096.,   2704.,  10000.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/315.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181,  89, 220, 128],
       [170,  52, 194,  76],
       [287, 132, 356, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,   625.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/316.jpg', 'flipped': False, 'width': 600, 'boxes': array([[179,  87, 236, 144],
       [169,  50, 208,  89],
       [284, 130, 365, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  6724.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/317.jpg', 'flipped': False, 'width': 600, 'boxes': array([[180,  93, 243, 156],
       [167,  48, 218,  99],
       [275, 127, 374, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4096.,   2704.,  10000.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/318.jpg', 'flipped': False, 'width': 600, 'boxes': array([[186,  96, 207, 117],
       [294, 135, 342, 183]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  2401.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/319.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181,  89, 220, 128],
       [170,  52, 194,  76],
       [287, 132, 356, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,   625.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/320.jpg', 'flipped': False, 'width': 600, 'boxes': array([[179,  87, 236, 144],
       [169,  50, 208,  89],
       [284, 130, 365, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  6724.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/321.jpg', 'flipped': False, 'width': 600, 'boxes': array([[180,  93, 243, 156],
       [167,  48, 218,  99],
       [275, 127, 374, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4096.,   2704.,  10000.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/322.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 192, 177, 201],
       [378, 194, 387, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,  100.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/323.jpg', 'flipped': False, 'width': 600, 'boxes': array([[382, 191, 403, 212],
       [166, 180, 190, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 484.,  625.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/324.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 191, 407, 215],
       [161, 177, 200, 216],
       [290, 140, 320, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/325.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163, 176, 217, 230],
       [290, 136, 326, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  1369.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/326.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 192, 177, 201],
       [378, 194, 387, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,  100.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/327.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166, 180, 190, 204],
       [382, 191, 403, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/328.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 191, 407, 215],
       [161, 177, 200, 216],
       [290, 140, 320, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/329.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/330.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/331.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/332.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/333.jpg', 'flipped': False, 'width': 600, 'boxes': array([[402,  93, 513, 204],
       [188, 183, 272, 267],
       [223, 100, 349, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.,   7225.,  16129.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/334.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 101, 354, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 17689.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/335.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/336.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/337.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/338.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/339.jpg', 'flipped': False, 'width': 600, 'boxes': array([[402,  93, 513, 204],
       [188, 183, 272, 267],
       [223, 100, 349, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.,   7225.,  16129.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/340.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/341.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/342.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/343.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/344.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/345.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/346.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/347.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/348.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/349.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/350.jpg', 'flipped': False, 'width': 600, 'boxes': array([[402,  93, 513, 204],
       [188, 183, 272, 267],
       [223, 100, 349, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.,   7225.,  16129.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/351.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/352.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/353.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/354.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/355.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/356.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/357.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/358.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/359.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/360.jpg', 'flipped': False, 'width': 600, 'boxes': array([[279, 144, 291, 156]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/361.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 334, 218, 346],
       [221, 175, 248, 202],
       [452, 120, 485, 153],
       [419, 167, 440, 188],
       [273, 133, 306, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   784.,  1156.,   484.,  1156.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/362.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 323, 228, 356],
       [215, 172, 251, 208],
       [446, 115, 500, 169],
       [407, 158, 455, 206],
       [264, 128, 315, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  3025.,  2401.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/363.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181, 317, 238, 374],
       [203, 164, 266, 227],
       [434, 116, 509, 191],
       [384, 163, 447, 226],
       [254, 121, 329, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  4096.,  5776.,  4096.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/364.jpg', 'flipped': False, 'width': 600, 'boxes': array([[241, 108, 349, 216],
       [166, 315, 250, 399]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 11881.,   7225.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/365.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 334, 218, 346],
       [221, 175, 248, 202],
       [452, 120, 485, 153],
       [419, 167, 440, 188],
       [273, 133, 306, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   784.,  1156.,   484.,  1156.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/366.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 323, 228, 356],
       [215, 172, 251, 208],
       [446, 115, 500, 169],
       [407, 158, 455, 206],
       [264, 128, 315, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  3025.,  2401.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/367.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181, 317, 238, 374],
       [203, 164, 266, 227],
       [434, 116, 509, 191],
       [384, 163, 447, 226],
       [254, 121, 329, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  4096.,  5776.,  4096.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/368.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 334, 218, 346],
       [221, 175, 248, 202],
       [452, 120, 485, 153],
       [419, 167, 440, 188],
       [273, 133, 306, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   784.,  1156.,   484.,  1156.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/369.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 323, 228, 356],
       [215, 172, 251, 208],
       [446, 115, 500, 169],
       [407, 158, 455, 206],
       [264, 128, 315, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  3025.,  2401.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/370.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181, 317, 238, 374],
       [203, 164, 266, 227],
       [434, 116, 509, 191],
       [384, 163, 447, 226],
       [254, 121, 329, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  4096.,  5776.,  4096.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/371.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 334, 218, 346],
       [221, 175, 248, 202],
       [452, 120, 485, 153],
       [419, 167, 440, 188],
       [273, 133, 306, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   784.,  1156.,   484.,  1156.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/372.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 323, 228, 356],
       [215, 172, 251, 208],
       [446, 115, 500, 169],
       [407, 158, 455, 206],
       [264, 128, 315, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  3025.,  2401.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/373.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181, 317, 238, 374],
       [203, 164, 266, 227],
       [434, 116, 509, 191],
       [384, 163, 447, 226],
       [254, 121, 329, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  4096.,  5776.,  4096.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/374.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 334, 218, 346],
       [221, 175, 248, 202],
       [452, 120, 485, 153],
       [419, 167, 440, 188],
       [273, 133, 306, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   784.,  1156.,   484.,  1156.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/375.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 323, 228, 356],
       [215, 172, 251, 208],
       [446, 115, 500, 169],
       [407, 158, 455, 206],
       [264, 128, 315, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  3025.,  2401.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/376.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181, 317, 238, 374],
       [203, 164, 266, 227],
       [434, 116, 509, 191],
       [384, 163, 447, 226],
       [254, 121, 329, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  4096.,  5776.,  4096.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/377.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166, 315, 250, 399],
       [241, 108, 349, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7225.,  11881.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/378.jpg', 'flipped': False, 'width': 600, 'boxes': array([[329, 419, 341, 431],
       [456, 136, 474, 154],
       [419, 181, 431, 193],
       [204, 339, 213, 348],
       [275, 148, 293, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  361.,  169.,  100.,  361.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/379.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/380.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/381.jpg', 'flipped': False, 'width': 600, 'boxes': array([[430, 137, 496, 203],
       [392, 191, 452, 251],
       [169, 348, 253, 432],
       [239, 153, 317, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  3721.,  7225.,  6241.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/382.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/383.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/384.jpg', 'flipped': False, 'width': 600, 'boxes': array([[329, 419, 341, 431],
       [456, 136, 474, 154],
       [419, 181, 431, 193],
       [204, 339, 213, 348],
       [275, 148, 293, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  361.,  169.,  100.,  361.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/385.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/386.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/387.jpg', 'flipped': False, 'width': 600, 'boxes': array([[430, 137, 496, 203],
       [392, 191, 452, 251],
       [169, 348, 253, 432],
       [239, 153, 317, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  3721.,  7225.,  6241.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/388.jpg', 'flipped': False, 'width': 600, 'boxes': array([[162, 353, 267, 458]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 11236.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/389.jpg', 'flipped': False, 'width': 600, 'boxes': array([[329, 419, 341, 431],
       [456, 136, 474, 154],
       [419, 181, 431, 193],
       [204, 339, 213, 348],
       [275, 148, 293, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  361.,  169.,  100.,  361.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/390.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/391.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/392.jpg', 'flipped': False, 'width': 600, 'boxes': array([[430, 137, 496, 203],
       [392, 191, 452, 251],
       [169, 348, 253, 432],
       [239, 153, 317, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  3721.,  7225.,  6241.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/393.jpg', 'flipped': False, 'width': 600, 'boxes': array([[329, 419, 341, 431],
       [456, 136, 474, 154],
       [419, 181, 431, 193],
       [204, 339, 213, 348],
       [275, 148, 293, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  361.,  169.,  100.,  361.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/394.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/395.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/396.jpg', 'flipped': False, 'width': 600, 'boxes': array([[430, 137, 496, 203],
       [392, 191, 452, 251],
       [169, 348, 253, 432],
       [239, 153, 317, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  3721.,  7225.,  6241.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/397.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/398.jpg', 'flipped': False, 'width': 600, 'boxes': array([[329, 419, 341, 431],
       [456, 136, 474, 154],
       [419, 181, 431, 193],
       [204, 339, 213, 348],
       [275, 148, 293, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  361.,  169.,  100.,  361.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/399.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/400.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/401.jpg', 'flipped': False, 'width': 600, 'boxes': array([[279, 142, 291, 154]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/402.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/403.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/404.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/405.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  35, 267, 101],
       [148,  56, 223, 131],
       [419,  95, 494, 170],
       [366, 144, 441, 219],
       [228,  91, 330, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4489.,   5776.,   5776.,   5776.,  10609.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/406.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/407.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/408.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/409.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/410.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/411.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/412.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/413.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/414.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  35, 267, 101],
       [148,  56, 223, 131],
       [419,  95, 494, 170],
       [366, 144, 441, 219],
       [228,  91, 330, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4489.,   5776.,   5776.,   5776.,  10609.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/415.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  31, 281, 118],
       [134,  47, 242, 155],
       [353, 138, 446, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  11881.,   8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/416.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/417.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/418.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/419.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  35, 267, 101],
       [148,  56, 223, 131],
       [419,  95, 494, 170],
       [366, 144, 441, 219],
       [228,  91, 330, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4489.,   5776.,   5776.,   5776.,  10609.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/420.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/421.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/422.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/423.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/424.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/425.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/426.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  35, 267, 101],
       [148,  56, 223, 131],
       [419,  95, 494, 170],
       [366, 144, 441, 219],
       [228,  91, 330, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4489.,   5776.,   5776.,   5776.,  10609.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/427.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  31, 281, 118],
       [134,  47, 242, 155],
       [353, 138, 446, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  11881.,   8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/428.jpg', 'flipped': False, 'width': 600, 'boxes': array([[133,  40, 259, 166]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 16129.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/429.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/430.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/431.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/432.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  35, 267, 101],
       [148,  56, 223, 131],
       [419,  95, 494, 170],
       [366, 144, 441, 219],
       [228,  91, 330, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4489.,   5776.,   5776.,   5776.,  10609.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/433.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  31, 281, 118],
       [134,  47, 242, 155],
       [353, 138, 446, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  11881.,   8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/434.jpg', 'flipped': False, 'width': 600, 'boxes': array([[276, 120, 306, 150],
       [206, 322, 221, 337]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 961.,  256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/435.jpg', 'flipped': False, 'width': 600, 'boxes': array([[272, 100, 329, 157],
       [196, 297, 241, 342]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  2116.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/436.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 322, 221, 337],
       [276, 120, 306, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  961.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/437.jpg', 'flipped': False, 'width': 600, 'boxes': array([[196, 297, 241, 342],
       [272, 100, 329, 157]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/438.jpg', 'flipped': False, 'width': 600, 'boxes': array([[275, 142, 290, 157],
       [221, 186, 236, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/439.jpg', 'flipped': False, 'width': 600, 'boxes': array([[202, 335, 217, 350],
       [215, 185, 239, 209],
       [269, 141, 293, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  625.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/440.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 332, 225, 362],
       [206, 184, 242, 220],
       [260, 134, 299, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1369.,  1600.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/441.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194, 332, 230, 368],
       [196, 178, 247, 229],
       [253, 130, 307, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2704.,  3025.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/442.jpg', 'flipped': False, 'width': 600, 'boxes': array([[182, 325, 236, 379],
       [186, 175, 252, 241],
       [249, 130, 309, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4489.,  3721.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/443.jpg', 'flipped': False, 'width': 600, 'boxes': array([[240, 128, 312, 200]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5329.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/444.jpg', 'flipped': False, 'width': 600, 'boxes': array([[228, 125, 312, 209]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 7225.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/445.jpg', 'flipped': False, 'width': 600, 'boxes': array([[218, 118, 323, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 11236.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/446.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 186, 236, 201],
       [275, 142, 290, 157]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/447.jpg', 'flipped': False, 'width': 600, 'boxes': array([[202, 335, 217, 350],
       [215, 185, 239, 209],
       [269, 141, 293, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  625.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/448.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 332, 225, 362],
       [206, 184, 242, 220],
       [260, 134, 299, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1369.,  1600.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/449.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194, 332, 230, 368],
       [196, 178, 247, 229],
       [253, 130, 307, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2704.,  3025.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/450.jpg', 'flipped': False, 'width': 600, 'boxes': array([[182, 325, 236, 379],
       [186, 175, 252, 241],
       [249, 130, 309, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4489.,  3721.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/451.jpg', 'flipped': False, 'width': 600, 'boxes': array([[202, 335, 217, 350],
       [215, 185, 239, 209],
       [269, 141, 293, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  625.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/452.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 332, 225, 362],
       [206, 184, 242, 220],
       [260, 134, 299, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1369.,  1600.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/453.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194, 332, 230, 368],
       [196, 178, 247, 229],
       [253, 130, 307, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2704.,  3025.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/454.jpg', 'flipped': False, 'width': 600, 'boxes': array([[182, 325, 236, 379],
       [186, 175, 252, 241],
       [249, 130, 309, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4489.,  3721.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/455.jpg', 'flipped': False, 'width': 600, 'boxes': array([[393, 168, 429, 204],
       [201, 336, 213, 348],
       [220, 191, 229, 200],
       [268, 142, 289, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   169.,   100.,   484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/456.jpg', 'flipped': False, 'width': 600, 'boxes': array([[382, 166, 430, 214],
       [188, 333, 215, 360],
       [209, 192, 227, 210],
       [257, 139, 290, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,   784.,   361.,  1156.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/457.jpg', 'flipped': False, 'width': 600, 'boxes': array([[364, 161, 430, 227],
       [179, 336, 212, 369],
       [193, 189, 229, 225],
       [244, 134, 295, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  1156.,  1369.,  2704.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/458.jpg', 'flipped': False, 'width': 600, 'boxes': array([[357, 160, 432, 235],
       [162, 332, 216, 386],
       [190, 194, 223, 227],
       [234, 130, 300, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.,  3025.,  1156.,  4489.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/459.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 125, 304, 206],
       [153, 338, 213, 398]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 6724.,  3721.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/460.jpg', 'flipped': False, 'width': 600, 'boxes': array([[215, 120, 308, 213],
       [141, 337, 213, 409]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 8836.,  5329.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/461.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 115, 312, 220]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 11236.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/462.jpg', 'flipped': False, 'width': 600, 'boxes': array([[197, 109, 323, 235]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 16129.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/463.jpg', 'flipped': False, 'width': 600, 'boxes': array([[183,  95, 342, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 25600.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/464.jpg', 'flipped': False, 'width': 600, 'boxes': array([[393, 168, 429, 204],
       [201, 336, 213, 348],
       [220, 191, 229, 200],
       [268, 142, 289, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   169.,   100.,   484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/465.jpg', 'flipped': False, 'width': 600, 'boxes': array([[382, 166, 430, 214],
       [188, 333, 215, 360],
       [209, 192, 227, 210],
       [257, 139, 290, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,   784.,   361.,  1156.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/466.jpg', 'flipped': False, 'width': 600, 'boxes': array([[364, 161, 430, 227],
       [179, 336, 212, 369],
       [193, 189, 229, 225],
       [244, 134, 295, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  1156.,  1369.,  2704.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/467.jpg', 'flipped': False, 'width': 600, 'boxes': array([[357, 160, 432, 235],
       [162, 332, 216, 386],
       [190, 194, 223, 227],
       [234, 130, 300, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.,  3025.,  1156.,  4489.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/468.jpg', 'flipped': False, 'width': 600, 'boxes': array([[393, 168, 429, 204],
       [201, 336, 213, 348],
       [220, 191, 229, 200],
       [268, 142, 289, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   169.,   100.,   484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/469.jpg', 'flipped': False, 'width': 600, 'boxes': array([[382, 166, 430, 214],
       [188, 333, 215, 360],
       [209, 192, 227, 210],
       [257, 139, 290, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,   784.,   361.,  1156.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/470.jpg', 'flipped': False, 'width': 600, 'boxes': array([[364, 161, 430, 227],
       [179, 336, 212, 369],
       [193, 189, 229, 225],
       [244, 134, 295, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  1156.,  1369.,  2704.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/471.jpg', 'flipped': False, 'width': 600, 'boxes': array([[357, 160, 432, 235],
       [162, 332, 216, 386],
       [190, 194, 223, 227],
       [234, 130, 300, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.,  3025.,  1156.,  4489.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/472.jpg', 'flipped': False, 'width': 600, 'boxes': array([[153, 338, 213, 398],
       [223, 125, 304, 206]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  6724.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/473.jpg', 'flipped': False, 'width': 600, 'boxes': array([[141, 337, 213, 409],
       [215, 120, 308, 213]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5329.,  8836.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/474.jpg', 'flipped': False, 'width': 600, 'boxes': array([[407, 169, 428, 190]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 484.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/475.jpg', 'flipped': False, 'width': 600, 'boxes': array([[393, 168, 429, 204],
       [201, 336, 213, 348],
       [220, 191, 229, 200],
       [268, 142, 289, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   169.,   100.,   484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/476.jpg', 'flipped': False, 'width': 600, 'boxes': array([[382, 166, 430, 214],
       [188, 333, 215, 360],
       [209, 192, 227, 210],
       [257, 139, 290, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,   784.,   361.,  1156.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/477.jpg', 'flipped': False, 'width': 600, 'boxes': array([[364, 161, 430, 227],
       [179, 336, 212, 369],
       [193, 189, 229, 225],
       [244, 134, 295, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  1156.,  1369.,  2704.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/478.jpg', 'flipped': False, 'width': 600, 'boxes': array([[357, 160, 432, 235],
       [162, 332, 216, 386],
       [190, 194, 223, 227],
       [234, 130, 300, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.,  3025.,  1156.,  4489.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/479.jpg', 'flipped': False, 'width': 600, 'boxes': array([[227, 186, 236, 195],
       [421, 173, 427, 179],
       [274, 138, 292, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,   49.,  361.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/480.jpg', 'flipped': False, 'width': 600, 'boxes': array([[330, 305, 336, 311],
       [220, 184, 244, 208],
       [413, 170, 431, 188],
       [197, 330, 215, 348],
       [269, 133, 299, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  49.,  625.,  361.,  361.,  961.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/481.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 299, 341, 320],
       [216, 183, 252, 219],
       [405, 162, 441, 198],
       [192, 328, 219, 355],
       [258, 125, 312, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  1369.,   784.,  3025.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/482.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 296, 347, 332],
       [209, 183, 257, 231],
       [395, 155, 449, 209],
       [183, 327, 222, 366],
       [249, 114, 324, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2401.,  3025.,  1600.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/483.jpg', 'flipped': False, 'width': 600, 'boxes': array([[300, 288, 357, 345],
       [385, 144, 460, 219],
       [179, 325, 230, 376],
       [243, 113, 330, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  5776.,  2704.,  7744.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/484.jpg', 'flipped': False, 'width': 600, 'boxes': array([[232, 105, 343, 216]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/485.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 101, 350, 227]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 16129.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/486.jpg', 'flipped': False, 'width': 600, 'boxes': array([[217,  95, 355, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 19321.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/487.jpg', 'flipped': False, 'width': 600, 'boxes': array([[212,  93, 359, 240]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 21904.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/488.jpg', 'flipped': False, 'width': 600, 'boxes': array([[204,  90, 363, 249]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 25600.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/489.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  92, 363, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 26569.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/490.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195,  86, 369, 260]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 30625.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/491.jpg', 'flipped': False, 'width': 600, 'boxes': array([[330, 305, 336, 311],
       [220, 184, 244, 208],
       [413, 170, 431, 188],
       [197, 330, 215, 348],
       [269, 133, 299, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  49.,  625.,  361.,  361.,  961.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/492.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 299, 341, 320],
       [216, 183, 252, 219],
       [405, 162, 441, 198],
       [192, 328, 219, 355],
       [258, 125, 312, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  1369.,   784.,  3025.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/493.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 296, 347, 332],
       [209, 183, 257, 231],
       [395, 155, 449, 209],
       [183, 327, 222, 366],
       [249, 114, 324, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2401.,  3025.,  1600.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/494.jpg', 'flipped': False, 'width': 600, 'boxes': array([[300, 288, 357, 345],
       [385, 144, 460, 219],
       [179, 325, 230, 376],
       [243, 113, 330, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  5776.,  2704.,  7744.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/495.jpg', 'flipped': False, 'width': 600, 'boxes': array([[227, 186, 236, 195],
       [421, 173, 427, 179],
       [274, 138, 292, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,   49.,  361.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/496.jpg', 'flipped': False, 'width': 600, 'boxes': array([[330, 305, 336, 311],
       [220, 184, 244, 208],
       [413, 170, 431, 188],
       [197, 330, 215, 348],
       [269, 133, 299, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  49.,  625.,  361.,  361.,  961.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/497.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 299, 341, 320],
       [216, 183, 252, 219],
       [405, 162, 441, 198],
       [192, 328, 219, 355],
       [258, 125, 312, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  1369.,   784.,  3025.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/498.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 296, 347, 332],
       [209, 183, 257, 231],
       [395, 155, 449, 209],
       [183, 327, 222, 366],
       [249, 114, 324, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2401.,  3025.,  1600.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/499.jpg', 'flipped': False, 'width': 600, 'boxes': array([[300, 288, 357, 345],
       [385, 144, 460, 219],
       [179, 325, 230, 376],
       [243, 113, 330, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  5776.,  2704.,  7744.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/500.jpg', 'flipped': False, 'width': 600, 'boxes': array([[227, 186, 236, 195],
       [421, 173, 427, 179],
       [274, 138, 292, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,   49.,  361.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/501.jpg', 'flipped': False, 'width': 600, 'boxes': array([[330, 305, 336, 311],
       [220, 184, 244, 208],
       [413, 170, 431, 188],
       [197, 330, 215, 348],
       [269, 133, 299, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  49.,  625.,  361.,  361.,  961.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/1.jpg', 'flipped': True, 'width': 600, 'boxes': array([[203, 194, 221, 212],
       [415, 173, 430, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/2.jpg', 'flipped': True, 'width': 600, 'boxes': array([[200, 185, 227, 212],
       [410, 166, 434, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/3.jpg', 'flipped': True, 'width': 600, 'boxes': array([[192, 179, 231, 218],
       [407, 163, 437, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/4.jpg', 'flipped': True, 'width': 600, 'boxes': array([[182, 175, 236, 229],
       [397, 162, 436, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/5.jpg', 'flipped': True, 'width': 600, 'boxes': array([[417, 173, 429, 185]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/6.jpg', 'flipped': True, 'width': 600, 'boxes': array([[415, 173, 430, 188],
       [203, 194, 221, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/7.jpg', 'flipped': True, 'width': 600, 'boxes': array([[410, 166, 434, 190],
       [200, 185, 227, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/8.jpg', 'flipped': True, 'width': 600, 'boxes': array([[407, 163, 437, 193],
       [192, 179, 231, 218]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/9.jpg', 'flipped': True, 'width': 600, 'boxes': array([[397, 162, 436, 201],
       [182, 175, 236, 229]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/10.jpg', 'flipped': True, 'width': 600, 'boxes': array([[388, 149, 445, 206]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/11.jpg', 'flipped': True, 'width': 600, 'boxes': array([[383, 145, 449, 211]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/12.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379, 140, 454, 215]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/13.jpg', 'flipped': True, 'width': 600, 'boxes': array([[203, 189, 218, 204],
       [358, 388, 373, 403],
       [404, 159, 431, 186],
       [208, 185, 226, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/14.jpg', 'flipped': True, 'width': 600, 'boxes': array([[186, 185, 216, 215],
       [337, 373, 379, 415],
       [379, 143, 433, 197],
       [191, 173, 227, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/15.jpg', 'flipped': True, 'width': 600, 'boxes': array([[173, 173, 221, 221],
       [319, 362, 385, 428],
       [368, 137, 440, 209],
       [178, 158, 232, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/16.jpg', 'flipped': True, 'width': 600, 'boxes': array([[315, 364, 396, 445],
       [357, 130, 447, 220],
       [169, 144, 235, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/17.jpg', 'flipped': True, 'width': 600, 'boxes': array([[203, 189, 218, 204],
       [358, 388, 373, 403],
       [404, 159, 431, 186],
       [208, 185, 226, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/18.jpg', 'flipped': True, 'width': 600, 'boxes': array([[186, 185, 216, 215],
       [337, 373, 379, 415],
       [379, 143, 433, 197],
       [191, 173, 227, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/19.jpg', 'flipped': True, 'width': 600, 'boxes': array([[173, 173, 221, 221],
       [319, 362, 385, 428],
       [368, 137, 440, 209],
       [178, 158, 232, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/20.jpg', 'flipped': True, 'width': 600, 'boxes': array([[315, 364, 396, 445],
       [357, 130, 447, 220],
       [169, 144, 235, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/21.jpg', 'flipped': True, 'width': 600, 'boxes': array([[342, 116, 456, 230]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/22.jpg', 'flipped': True, 'width': 600, 'boxes': array([[203, 189, 218, 204],
       [358, 388, 373, 403],
       [404, 159, 431, 186],
       [208, 185, 226, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/23.jpg', 'flipped': True, 'width': 600, 'boxes': array([[186, 185, 216, 215],
       [337, 373, 379, 415],
       [379, 143, 433, 197],
       [191, 173, 227, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/24.jpg', 'flipped': True, 'width': 600, 'boxes': array([[173, 173, 221, 221],
       [319, 362, 385, 428],
       [368, 137, 440, 209],
       [178, 158, 232, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/25.jpg', 'flipped': True, 'width': 600, 'boxes': array([[315, 364, 396, 445],
       [357, 130, 447, 220],
       [169, 144, 235, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/26.jpg', 'flipped': True, 'width': 600, 'boxes': array([[203, 189, 218, 204],
       [358, 388, 373, 403],
       [404, 159, 431, 186],
       [208, 185, 226, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/27.jpg', 'flipped': True, 'width': 600, 'boxes': array([[186, 185, 216, 215],
       [337, 373, 379, 415],
       [379, 143, 433, 197],
       [191, 173, 227, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/28.jpg', 'flipped': True, 'width': 600, 'boxes': array([[173, 173, 221, 221],
       [319, 362, 385, 428],
       [368, 137, 440, 209],
       [178, 158, 232, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/29.jpg', 'flipped': True, 'width': 600, 'boxes': array([[216, 194, 228, 206]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/30.jpg', 'flipped': True, 'width': 600, 'boxes': array([[312, 149, 327, 164],
       [417, 172, 444, 199],
       [213, 191, 237, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/31.jpg', 'flipped': True, 'width': 600, 'boxes': array([[308, 145, 332, 169],
       [411, 166, 450, 205],
       [209, 183, 251, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/32.jpg', 'flipped': True, 'width': 600, 'boxes': array([[301, 137, 340, 176],
       [407, 165, 458, 216],
       [210, 183, 255, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/33.jpg', 'flipped': True, 'width': 600, 'boxes': array([[297, 131, 348, 182],
       [398, 156, 467, 225],
       [208, 182, 259, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/34.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 126, 357, 192],
       [396, 151, 474, 229],
       [202, 173, 271, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/35.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 118, 371, 205],
       [390, 146, 489, 245],
       [199, 173, 277, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/36.jpg', 'flipped': True, 'width': 600, 'boxes': array([[312, 149, 327, 164],
       [417, 172, 444, 199],
       [213, 191, 237, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/37.jpg', 'flipped': True, 'width': 600, 'boxes': array([[308, 145, 332, 169],
       [411, 166, 450, 205],
       [209, 183, 251, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/38.jpg', 'flipped': True, 'width': 600, 'boxes': array([[301, 137, 340, 176],
       [407, 165, 458, 216],
       [210, 183, 255, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/39.jpg', 'flipped': True, 'width': 600, 'boxes': array([[297, 131, 348, 182],
       [398, 156, 467, 225],
       [208, 182, 259, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/40.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 126, 357, 192],
       [396, 151, 474, 229],
       [202, 173, 271, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/41.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 118, 371, 205],
       [390, 146, 489, 245],
       [199, 173, 277, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/42.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 141, 502, 261]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/43.jpg', 'flipped': True, 'width': 600, 'boxes': array([[380, 136, 506, 262]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/44.jpg', 'flipped': True, 'width': 600, 'boxes': array([[312, 149, 327, 164],
       [417, 172, 444, 199],
       [213, 191, 237, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/45.jpg', 'flipped': True, 'width': 600, 'boxes': array([[308, 145, 332, 169],
       [411, 166, 450, 205],
       [209, 183, 251, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/46.jpg', 'flipped': True, 'width': 600, 'boxes': array([[301, 137, 340, 176],
       [407, 165, 458, 216],
       [210, 183, 255, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/47.jpg', 'flipped': True, 'width': 600, 'boxes': array([[297, 131, 348, 182],
       [398, 156, 467, 225],
       [208, 182, 259, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/48.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 126, 357, 192],
       [396, 151, 474, 229],
       [202, 173, 271, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/49.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 118, 371, 205],
       [390, 146, 489, 245],
       [199, 173, 277, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/50.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 395, 374, 416],
       [199, 200, 220, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/51.jpg', 'flipped': True, 'width': 600, 'boxes': array([[342, 388, 375, 421],
       [206, 196, 218, 208],
       [193, 195, 223, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/52.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266, 282, 278, 294],
       [331, 388, 376, 433],
       [290, 140, 317, 167],
       [193, 187, 220, 214],
       [166, 192, 217, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/53.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/54.jpg', 'flipped': True, 'width': 600, 'boxes': array([[342, 388, 375, 421],
       [206, 196, 218, 208],
       [193, 195, 223, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/55.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266, 282, 278, 294],
       [331, 388, 376, 433],
       [290, 140, 317, 167],
       [193, 187, 220, 214],
       [166, 192, 217, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/56.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/57.jpg', 'flipped': True, 'width': 600, 'boxes': array([[330, 337, 375, 382],
       [300, 378, 375, 453],
       [241, 118, 322, 199],
       [163, 174, 232, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/58.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266, 282, 278, 294],
       [331, 388, 376, 433],
       [290, 140, 317, 167],
       [193, 187, 220, 214],
       [166, 192, 217, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/59.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/60.jpg', 'flipped': True, 'width': 600, 'boxes': array([[330, 337, 375, 382],
       [300, 378, 375, 453],
       [241, 118, 322, 199],
       [163, 174, 232, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/61.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 398, 370, 410]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/62.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 395, 374, 416],
       [199, 200, 220, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/63.jpg', 'flipped': True, 'width': 600, 'boxes': array([[342, 388, 375, 421],
       [206, 196, 218, 208],
       [193, 195, 223, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/64.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266, 282, 278, 294],
       [331, 388, 376, 433],
       [290, 140, 317, 167],
       [193, 187, 220, 214],
       [166, 192, 217, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/65.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/66.jpg', 'flipped': True, 'width': 600, 'boxes': array([[330, 337, 375, 382],
       [300, 378, 375, 453],
       [241, 118, 322, 199],
       [163, 174, 232, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/67.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/68.jpg', 'flipped': True, 'width': 600, 'boxes': array([[330, 337, 375, 382],
       [300, 378, 375, 453],
       [241, 118, 322, 199],
       [163, 174, 232, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/69.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266, 282, 278, 294],
       [331, 388, 376, 433],
       [290, 140, 317, 167],
       [193, 187, 220, 214],
       [166, 192, 217, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/70.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/71.jpg', 'flipped': True, 'width': 600, 'boxes': array([[346, 392, 382, 428],
       [377, 167, 431, 221],
       [204, 194, 222, 212],
       [206, 190, 224, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/72.jpg', 'flipped': True, 'width': 600, 'boxes': array([[181, 190, 223, 232],
       [205, 187, 226, 208],
       [304, 147, 316, 159],
       [358, 161, 436, 239],
       [339, 385, 384, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/73.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/74.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/75.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/76.jpg', 'flipped': True, 'width': 600, 'boxes': array([[346, 392, 382, 428],
       [377, 167, 431, 221],
       [204, 194, 222, 212],
       [206, 190, 224, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/77.jpg', 'flipped': True, 'width': 600, 'boxes': array([[181, 190, 223, 232],
       [205, 187, 226, 208],
       [304, 147, 316, 159],
       [358, 161, 436, 239],
       [339, 385, 384, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/78.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/79.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/80.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/81.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332, 335, 380, 383],
       [242, 118, 332, 208],
       [ 64, 127, 253, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/82.jpg', 'flipped': True, 'width': 600, 'boxes': array([[181, 190, 223, 232],
       [205, 187, 226, 208],
       [304, 147, 316, 159],
       [358, 161, 436, 239],
       [339, 385, 384, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/83.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/84.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/85.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/86.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332, 335, 380, 383],
       [242, 118, 332, 208],
       [ 64, 127, 253, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/87.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/88.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/89.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/90.jpg', 'flipped': True, 'width': 600, 'boxes': array([[393, 170, 429, 206],
       [355, 397, 376, 418]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/91.jpg', 'flipped': True, 'width': 600, 'boxes': array([[346, 392, 382, 428],
       [377, 167, 431, 221],
       [204, 194, 222, 212],
       [206, 190, 224, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/92.jpg', 'flipped': True, 'width': 600, 'boxes': array([[181, 190, 223, 232],
       [205, 187, 226, 208],
       [304, 147, 316, 159],
       [358, 161, 436, 239],
       [339, 385, 384, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/93.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/94.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/95.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/96.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 400, 375, 412]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/97.jpg', 'flipped': True, 'width': 600, 'boxes': array([[355, 397, 376, 418],
       [393, 170, 429, 206]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/98.jpg', 'flipped': True, 'width': 600, 'boxes': array([[346, 392, 382, 428],
       [377, 167, 431, 221],
       [204, 194, 222, 212],
       [206, 190, 224, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/99.jpg', 'flipped': True, 'width': 600, 'boxes': array([[181, 190, 223, 232],
       [205, 187, 226, 208],
       [304, 147, 316, 159],
       [358, 161, 436, 239],
       [339, 385, 384, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/100.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/101.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/103.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/104.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/105.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/106.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332, 335, 380, 383],
       [242, 118, 332, 208],
       [ 64, 127, 253, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/107.jpg', 'flipped': True, 'width': 600, 'boxes': array([[213, 196, 225, 208],
       [424, 172, 451, 199]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/108.jpg', 'flipped': True, 'width': 600, 'boxes': array([[370, 398, 385, 413],
       [414, 166, 444, 196],
       [205, 186, 235, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/109.jpg', 'flipped': True, 'width': 600, 'boxes': array([[362, 394, 392, 424],
       [408, 158, 447, 197],
       [310, 141, 328, 159],
       [210, 184, 237, 211],
       [177, 167, 252, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/110.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/111.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/112.jpg', 'flipped': True, 'width': 600, 'boxes': array([[362, 394, 392, 424],
       [408, 158, 447, 197],
       [310, 141, 328, 159],
       [210, 184, 237, 211],
       [177, 167, 252, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/113.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/114.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/115.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 333, 383, 360],
       [323, 364, 425, 466],
       [324, 102, 486, 264],
       [283, 109, 364, 190],
       [147, 145, 279, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/116.jpg', 'flipped': True, 'width': 600, 'boxes': array([[362, 394, 392, 424],
       [408, 158, 447, 197],
       [310, 141, 328, 159],
       [210, 184, 237, 211],
       [177, 167, 252, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/117.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/118.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/119.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 333, 383, 360],
       [323, 364, 425, 466],
       [324, 102, 486, 264],
       [283, 109, 364, 190],
       [147, 145, 279, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/120.jpg', 'flipped': True, 'width': 600, 'boxes': array([[273,  97, 375, 199],
       [348, 326, 390, 368]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/121.jpg', 'flipped': True, 'width': 600, 'boxes': array([[431, 180, 443, 192]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/122.jpg', 'flipped': True, 'width': 600, 'boxes': array([[424, 172, 451, 199],
       [213, 196, 225, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/123.jpg', 'flipped': True, 'width': 600, 'boxes': array([[370, 398, 385, 413],
       [414, 166, 444, 196],
       [205, 186, 235, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/124.jpg', 'flipped': True, 'width': 600, 'boxes': array([[362, 394, 392, 424],
       [408, 158, 447, 197],
       [310, 141, 328, 159],
       [210, 184, 237, 211],
       [177, 167, 252, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/125.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/126.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/127.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 333, 383, 360],
       [323, 364, 425, 466],
       [324, 102, 486, 264],
       [283, 109, 364, 190],
       [147, 145, 279, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/128.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/129.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/130.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/131.jpg', 'flipped': True, 'width': 600, 'boxes': array([[370, 398, 385, 413],
       [414, 166, 444, 196],
       [205, 186, 235, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/132.jpg', 'flipped': True, 'width': 600, 'boxes': array([[362, 394, 392, 424],
       [408, 158, 447, 197],
       [310, 141, 328, 159],
       [210, 184, 237, 211],
       [177, 167, 252, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/133.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/134.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/135.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 333, 383, 360],
       [323, 364, 425, 466],
       [324, 102, 486, 264],
       [283, 109, 364, 190],
       [147, 145, 279, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/136.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/137.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 333, 383, 360],
       [323, 364, 425, 466],
       [324, 102, 486, 264],
       [283, 109, 364, 190],
       [147, 145, 279, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/138.jpg', 'flipped': True, 'width': 600, 'boxes': array([[348, 326, 390, 368],
       [273,  97, 375, 199]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/139.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/140.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/141.jpg', 'flipped': True, 'width': 600, 'boxes': array([[407, 158, 431, 182],
       [359, 392, 371, 404],
       [193, 185, 214, 206],
       [203, 179, 224, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/142.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/143.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/144.jpg', 'flipped': True, 'width': 600, 'boxes': array([[407, 158, 431, 182],
       [359, 392, 371, 404],
       [193, 185, 214, 206],
       [203, 179, 224, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/145.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/146.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/147.jpg', 'flipped': True, 'width': 600, 'boxes': array([[260, 109, 314, 163],
       [337,  99, 448, 210],
       [114, 128, 246, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/148.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 85, 105, 265, 285],
       [320,  95, 452, 227]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/149.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 76,  96, 274, 294],
       [289,  88, 448, 247]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/150.jpg', 'flipped': True, 'width': 600, 'boxes': array([[407, 158, 431, 182],
       [359, 392, 371, 404],
       [193, 185, 214, 206],
       [203, 179, 224, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/151.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/152.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/153.jpg', 'flipped': True, 'width': 600, 'boxes': array([[260, 109, 314, 163],
       [337,  99, 448, 210],
       [114, 128, 246, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/154.jpg', 'flipped': True, 'width': 600, 'boxes': array([[320,  95, 452, 227],
       [ 85, 105, 265, 285]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/155.jpg', 'flipped': True, 'width': 600, 'boxes': array([[289,  88, 448, 247],
       [ 76,  96, 274, 294]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/156.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/157.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/158.jpg', 'flipped': True, 'width': 600, 'boxes': array([[260, 109, 314, 163],
       [337,  99, 448, 210],
       [114, 128, 246, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/159.jpg', 'flipped': True, 'width': 600, 'boxes': array([[407, 158, 431, 182],
       [359, 392, 371, 404],
       [193, 185, 214, 206],
       [203, 179, 224, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/160.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/161.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/162.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/163.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/164.jpg', 'flipped': True, 'width': 600, 'boxes': array([[211, 187, 223, 199]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/165.jpg', 'flipped': True, 'width': 600, 'boxes': array([[199, 175, 226, 202]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/166.jpg', 'flipped': True, 'width': 600, 'boxes': array([[183, 166, 225, 208]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/167.jpg', 'flipped': True, 'width': 600, 'boxes': array([[159, 154, 228, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/168.jpg', 'flipped': True, 'width': 600, 'boxes': array([[141, 147, 228, 234]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/169.jpg', 'flipped': True, 'width': 600, 'boxes': array([[119, 134, 230, 245]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/170.jpg', 'flipped': True, 'width': 600, 'boxes': array([[102, 122, 234, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/171.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 83, 102, 254, 273]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/172.jpg', 'flipped': True, 'width': 600, 'boxes': array([[209, 196, 221, 208]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/173.jpg', 'flipped': True, 'width': 600, 'boxes': array([[192, 195, 228, 231],
       [207, 199, 222, 214]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/174.jpg', 'flipped': True, 'width': 600, 'boxes': array([[307, 151, 316, 160],
       [201, 196, 222, 217],
       [161, 162, 254, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/175.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 142, 324, 175],
       [206, 191, 224, 209],
       [171, 190, 234, 253],
       [121, 149, 271, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/176.jpg', 'flipped': True, 'width': 600, 'boxes': array([[268, 148, 322, 202],
       [186, 193, 225, 232],
       [152, 176, 263, 287],
       [ 86, 123, 308, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/177.jpg', 'flipped': True, 'width': 600, 'boxes': array([[207, 199, 222, 214],
       [192, 195, 228, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/178.jpg', 'flipped': True, 'width': 600, 'boxes': array([[307, 151, 316, 160],
       [201, 196, 222, 217],
       [161, 162, 254, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/179.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 142, 324, 175],
       [206, 191, 224, 209],
       [171, 190, 234, 253],
       [121, 149, 271, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/180.jpg', 'flipped': True, 'width': 600, 'boxes': array([[268, 148, 322, 202],
       [186, 193, 225, 232],
       [152, 176, 263, 287],
       [ 86, 123, 308, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/181.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 142, 324, 175],
       [206, 191, 224, 209],
       [171, 190, 234, 253],
       [121, 149, 271, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/182.jpg', 'flipped': True, 'width': 600, 'boxes': array([[268, 148, 322, 202],
       [186, 193, 225, 232],
       [152, 176, 263, 287],
       [ 86, 123, 308, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/183.jpg', 'flipped': True, 'width': 600, 'boxes': array([[307, 151, 316, 160],
       [201, 196, 222, 217],
       [161, 162, 254, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/184.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 142, 324, 175],
       [206, 191, 224, 209],
       [171, 190, 234, 253],
       [121, 149, 271, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/185.jpg', 'flipped': True, 'width': 600, 'boxes': array([[268, 148, 322, 202],
       [186, 193, 225, 232],
       [152, 176, 263, 287],
       [ 86, 123, 308, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/186.jpg', 'flipped': True, 'width': 600, 'boxes': array([[254, 157, 320, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/187.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/188.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/189.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/190.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/191.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/192.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/193.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/194.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/195.jpg', 'flipped': True, 'width': 600, 'boxes': array([[200, 194, 227, 221],
       [176, 196, 242, 262]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/196.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/197.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/198.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/199.jpg', 'flipped': True, 'width': 600, 'boxes': array([[214, 196, 220, 202]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/200.jpg', 'flipped': True, 'width': 600, 'boxes': array([[195, 197, 231, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/201.jpg', 'flipped': True, 'width': 600, 'boxes': array([[176, 196, 242, 262],
       [200, 194, 227, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/202.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/203.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/204.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/205.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/206.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/207.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/208.jpg', 'flipped': True, 'width': 600, 'boxes': array([[256, 140, 346, 230]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/209.jpg', 'flipped': True, 'width': 600, 'boxes': array([[251, 135, 350, 234]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/210.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/211.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/212.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/213.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/214.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/215.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/216.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/217.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/218.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/219.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/220.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/221.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/222.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/223.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/224.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/225.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/226.jpg', 'flipped': True, 'width': 600, 'boxes': array([[309, 149, 321, 161],
       [217, 197, 232, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/227.jpg', 'flipped': True, 'width': 600, 'boxes': array([[297, 140, 333, 176]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/228.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/229.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/230.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/231.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353,  46, 413, 106],
       [ 95, 109, 179, 193],
       [170, 174, 269, 273],
       [268, 121, 370, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/232.jpg', 'flipped': True, 'width': 600, 'boxes': array([[259, 115, 379, 235],
       [162, 173, 273, 284]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/233.jpg', 'flipped': True, 'width': 600, 'boxes': array([[253, 111, 385, 243]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/234.jpg', 'flipped': True, 'width': 600, 'boxes': array([[246, 103, 393, 250]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/235.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 186, 374, 204]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/236.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/237.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/238.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/239.jpg', 'flipped': True, 'width': 600, 'boxes': array([[217, 197, 232, 212],
       [309, 149, 321, 161]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/240.jpg', 'flipped': True, 'width': 600, 'boxes': array([[212, 193, 239, 220]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/241.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/242.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/243.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/244.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353,  46, 413, 106],
       [ 95, 109, 179, 193],
       [170, 174, 269, 273],
       [268, 121, 370, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/245.jpg', 'flipped': True, 'width': 600, 'boxes': array([[162, 173, 273, 284],
       [259, 115, 379, 235]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/246.jpg', 'flipped': True, 'width': 600, 'boxes': array([[161, 167, 191, 197]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/247.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/248.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/249.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/250.jpg', 'flipped': True, 'width': 600, 'boxes': array([[121, 124, 154, 157]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/251.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/252.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/253.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/254.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353,  46, 413, 106],
       [ 95, 109, 179, 193],
       [170, 174, 269, 273],
       [268, 121, 370, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/255.jpg', 'flipped': True, 'width': 600, 'boxes': array([[414,  83, 432, 101]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/256.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/257.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/258.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/259.jpg', 'flipped': True, 'width': 600, 'boxes': array([[372,  58, 396,  82]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/260.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/261.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/262.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/263.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353,  46, 413, 106],
       [ 95, 109, 179, 193],
       [170, 174, 269, 273],
       [268, 121, 370, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/264.jpg', 'flipped': True, 'width': 600, 'boxes': array([[370, 324, 385, 339]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/265.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/266.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/267.jpg', 'flipped': True, 'width': 600, 'boxes': array([[333, 337, 354, 358]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/268.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/269.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/270.jpg', 'flipped': True, 'width': 600, 'boxes': array([[304, 141, 322, 159]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/271.jpg', 'flipped': True, 'width': 600, 'boxes': array([[295, 132, 325, 162]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/272.jpg', 'flipped': True, 'width': 600, 'boxes': array([[285, 121, 330, 166]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/273.jpg', 'flipped': True, 'width': 600, 'boxes': array([[273, 112, 336, 175]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/274.jpg', 'flipped': True, 'width': 600, 'boxes': array([[263, 104, 338, 179]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/275.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/276.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/277.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/278.jpg', 'flipped': True, 'width': 600, 'boxes': array([[336, 180, 390, 234],
       [264, 134, 342, 212],
       [ 64, 108, 160, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/279.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/280.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/281.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/282.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/283.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/284.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/285.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/286.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/287.jpg', 'flipped': True, 'width': 600, 'boxes': array([[336, 180, 390, 234],
       [264, 134, 342, 212],
       [ 64, 108, 160, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/288.jpg', 'flipped': True, 'width': 600, 'boxes': array([[234, 120, 351, 237]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/289.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/290.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/291.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/292.jpg', 'flipped': True, 'width': 600, 'boxes': array([[336, 180, 390, 234],
       [264, 134, 342, 212],
       [ 64, 108, 160, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/293.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/294.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/295.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/296.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/297.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/298.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/299.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/300.jpg', 'flipped': True, 'width': 600, 'boxes': array([[134, 126, 146, 138]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/301.jpg', 'flipped': True, 'width': 600, 'boxes': array([[127, 108, 160, 141],
       [302, 120, 335, 153]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/302.jpg', 'flipped': True, 'width': 600, 'boxes': array([[122,  91, 179, 148],
       [284,  98, 344, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/303.jpg', 'flipped': True, 'width': 600, 'boxes': array([[121,  70, 196, 145],
       [266,  71, 353, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/304.jpg', 'flipped': True, 'width': 600, 'boxes': array([[302, 120, 335, 153],
       [127, 108, 160, 141]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/305.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284,  98, 344, 158],
       [122,  91, 179, 148]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/306.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266,  71, 353, 158],
       [121,  70, 196, 145]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/307.jpg', 'flipped': True, 'width': 600, 'boxes': array([[212, 194, 221, 203],
       [422, 192, 431, 201],
       [310, 152, 313, 155]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/308.jpg', 'flipped': True, 'width': 600, 'boxes': array([[294, 146, 312, 164],
       [196, 191, 217, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/309.jpg', 'flipped': True, 'width': 600, 'boxes': array([[192, 191, 216, 215],
       [399, 177, 438, 216],
       [279, 140, 309, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/310.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 176, 436, 230],
       [273, 136, 309, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/311.jpg', 'flipped': True, 'width': 600, 'boxes': array([[257, 135, 305, 183],
       [392,  96, 413, 117]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/312.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  89, 418, 128],
       [405,  52, 429,  76],
       [243, 132, 312, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/313.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363,  87, 420, 144],
       [391,  50, 430,  89],
       [234, 130, 315, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/314.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  93, 419, 156],
       [381,  48, 432,  99],
       [225, 127, 324, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/315.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  89, 418, 128],
       [405,  52, 429,  76],
       [243, 132, 312, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/316.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363,  87, 420, 144],
       [391,  50, 430,  89],
       [234, 130, 315, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/317.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  93, 419, 156],
       [381,  48, 432,  99],
       [225, 127, 324, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/318.jpg', 'flipped': True, 'width': 600, 'boxes': array([[392,  96, 413, 117],
       [257, 135, 305, 183]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/319.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  89, 418, 128],
       [405,  52, 429,  76],
       [243, 132, 312, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/320.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363,  87, 420, 144],
       [391,  50, 430,  89],
       [234, 130, 315, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/321.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  93, 419, 156],
       [381,  48, 432,  99],
       [225, 127, 324, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/322.jpg', 'flipped': True, 'width': 600, 'boxes': array([[422, 192, 431, 201],
       [212, 194, 221, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/323.jpg', 'flipped': True, 'width': 600, 'boxes': array([[196, 191, 217, 212],
       [409, 180, 433, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/324.jpg', 'flipped': True, 'width': 600, 'boxes': array([[192, 191, 216, 215],
       [399, 177, 438, 216],
       [279, 140, 309, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/325.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 176, 436, 230],
       [273, 136, 309, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/326.jpg', 'flipped': True, 'width': 600, 'boxes': array([[422, 192, 431, 201],
       [212, 194, 221, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/327.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409, 180, 433, 204],
       [196, 191, 217, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/328.jpg', 'flipped': True, 'width': 600, 'boxes': array([[192, 191, 216, 215],
       [399, 177, 438, 216],
       [279, 140, 309, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/329.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/330.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/331.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/332.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/333.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 86,  93, 197, 204],
       [327, 183, 411, 267],
       [250, 100, 376, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/334.jpg', 'flipped': True, 'width': 600, 'boxes': array([[245, 101, 377, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/335.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/336.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/337.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/338.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/339.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 86,  93, 197, 204],
       [327, 183, 411, 267],
       [250, 100, 376, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/340.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/341.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/342.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/343.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/344.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/345.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/346.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/347.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/348.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/349.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/350.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 86,  93, 197, 204],
       [327, 183, 411, 267],
       [250, 100, 376, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/351.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/352.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/353.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/354.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/355.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/356.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/357.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/358.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/359.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/360.jpg', 'flipped': True, 'width': 600, 'boxes': array([[308, 144, 320, 156]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/361.jpg', 'flipped': True, 'width': 600, 'boxes': array([[381, 334, 393, 346],
       [351, 175, 378, 202],
       [114, 120, 147, 153],
       [159, 167, 180, 188],
       [293, 133, 326, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/362.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371, 323, 404, 356],
       [348, 172, 384, 208],
       [ 99, 115, 153, 169],
       [144, 158, 192, 206],
       [284, 128, 335, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/363.jpg', 'flipped': True, 'width': 600, 'boxes': array([[361, 317, 418, 374],
       [333, 164, 396, 227],
       [ 90, 116, 165, 191],
       [152, 163, 215, 226],
       [270, 121, 345, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/364.jpg', 'flipped': True, 'width': 600, 'boxes': array([[250, 108, 358, 216],
       [349, 315, 433, 399]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/365.jpg', 'flipped': True, 'width': 600, 'boxes': array([[381, 334, 393, 346],
       [351, 175, 378, 202],
       [114, 120, 147, 153],
       [159, 167, 180, 188],
       [293, 133, 326, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/366.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371, 323, 404, 356],
       [348, 172, 384, 208],
       [ 99, 115, 153, 169],
       [144, 158, 192, 206],
       [284, 128, 335, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/367.jpg', 'flipped': True, 'width': 600, 'boxes': array([[361, 317, 418, 374],
       [333, 164, 396, 227],
       [ 90, 116, 165, 191],
       [152, 163, 215, 226],
       [270, 121, 345, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/368.jpg', 'flipped': True, 'width': 600, 'boxes': array([[381, 334, 393, 346],
       [351, 175, 378, 202],
       [114, 120, 147, 153],
       [159, 167, 180, 188],
       [293, 133, 326, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/369.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371, 323, 404, 356],
       [348, 172, 384, 208],
       [ 99, 115, 153, 169],
       [144, 158, 192, 206],
       [284, 128, 335, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/370.jpg', 'flipped': True, 'width': 600, 'boxes': array([[361, 317, 418, 374],
       [333, 164, 396, 227],
       [ 90, 116, 165, 191],
       [152, 163, 215, 226],
       [270, 121, 345, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/371.jpg', 'flipped': True, 'width': 600, 'boxes': array([[381, 334, 393, 346],
       [351, 175, 378, 202],
       [114, 120, 147, 153],
       [159, 167, 180, 188],
       [293, 133, 326, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/372.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371, 323, 404, 356],
       [348, 172, 384, 208],
       [ 99, 115, 153, 169],
       [144, 158, 192, 206],
       [284, 128, 335, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/373.jpg', 'flipped': True, 'width': 600, 'boxes': array([[361, 317, 418, 374],
       [333, 164, 396, 227],
       [ 90, 116, 165, 191],
       [152, 163, 215, 226],
       [270, 121, 345, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/374.jpg', 'flipped': True, 'width': 600, 'boxes': array([[381, 334, 393, 346],
       [351, 175, 378, 202],
       [114, 120, 147, 153],
       [159, 167, 180, 188],
       [293, 133, 326, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/375.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371, 323, 404, 356],
       [348, 172, 384, 208],
       [ 99, 115, 153, 169],
       [144, 158, 192, 206],
       [284, 128, 335, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/376.jpg', 'flipped': True, 'width': 600, 'boxes': array([[361, 317, 418, 374],
       [333, 164, 396, 227],
       [ 90, 116, 165, 191],
       [152, 163, 215, 226],
       [270, 121, 345, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/377.jpg', 'flipped': True, 'width': 600, 'boxes': array([[349, 315, 433, 399],
       [250, 108, 358, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/378.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 419, 270, 431],
       [125, 136, 143, 154],
       [168, 181, 180, 193],
       [386, 339, 395, 348],
       [306, 148, 324, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/379.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/380.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/381.jpg', 'flipped': True, 'width': 600, 'boxes': array([[103, 137, 169, 203],
       [147, 191, 207, 251],
       [346, 348, 430, 432],
       [282, 153, 360, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/382.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/383.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/384.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 419, 270, 431],
       [125, 136, 143, 154],
       [168, 181, 180, 193],
       [386, 339, 395, 348],
       [306, 148, 324, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/385.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/386.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/387.jpg', 'flipped': True, 'width': 600, 'boxes': array([[103, 137, 169, 203],
       [147, 191, 207, 251],
       [346, 348, 430, 432],
       [282, 153, 360, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/388.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332, 353, 437, 458]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/389.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 419, 270, 431],
       [125, 136, 143, 154],
       [168, 181, 180, 193],
       [386, 339, 395, 348],
       [306, 148, 324, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/390.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/391.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/392.jpg', 'flipped': True, 'width': 600, 'boxes': array([[103, 137, 169, 203],
       [147, 191, 207, 251],
       [346, 348, 430, 432],
       [282, 153, 360, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/393.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 419, 270, 431],
       [125, 136, 143, 154],
       [168, 181, 180, 193],
       [386, 339, 395, 348],
       [306, 148, 324, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/394.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/395.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/396.jpg', 'flipped': True, 'width': 600, 'boxes': array([[103, 137, 169, 203],
       [147, 191, 207, 251],
       [346, 348, 430, 432],
       [282, 153, 360, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/397.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/398.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 419, 270, 431],
       [125, 136, 143, 154],
       [168, 181, 180, 193],
       [386, 339, 395, 348],
       [306, 148, 324, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/399.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/400.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/401.jpg', 'flipped': True, 'width': 600, 'boxes': array([[308, 142, 320, 154]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/402.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/403.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/404.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/405.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332,  35, 398, 101],
       [376,  56, 451, 131],
       [105,  95, 180, 170],
       [158, 144, 233, 219],
       [269,  91, 371, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/406.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/407.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/408.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/409.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/410.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/411.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/412.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/413.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/414.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332,  35, 398, 101],
       [376,  56, 451, 131],
       [105,  95, 180, 170],
       [158, 144, 233, 219],
       [269,  91, 371, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/415.jpg', 'flipped': True, 'width': 600, 'boxes': array([[318,  31, 405, 118],
       [357,  47, 465, 155],
       [153, 138, 246, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/416.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/417.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/418.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/419.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332,  35, 398, 101],
       [376,  56, 451, 131],
       [105,  95, 180, 170],
       [158, 144, 233, 219],
       [269,  91, 371, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/420.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/421.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/422.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/423.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/424.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/425.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/426.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332,  35, 398, 101],
       [376,  56, 451, 131],
       [105,  95, 180, 170],
       [158, 144, 233, 219],
       [269,  91, 371, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/427.jpg', 'flipped': True, 'width': 600, 'boxes': array([[318,  31, 405, 118],
       [357,  47, 465, 155],
       [153, 138, 246, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/428.jpg', 'flipped': True, 'width': 600, 'boxes': array([[340,  40, 466, 166]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/429.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/430.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/431.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/432.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332,  35, 398, 101],
       [376,  56, 451, 131],
       [105,  95, 180, 170],
       [158, 144, 233, 219],
       [269,  91, 371, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/433.jpg', 'flipped': True, 'width': 600, 'boxes': array([[318,  31, 405, 118],
       [357,  47, 465, 155],
       [153, 138, 246, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/434.jpg', 'flipped': True, 'width': 600, 'boxes': array([[293, 120, 323, 150],
       [378, 322, 393, 337]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/435.jpg', 'flipped': True, 'width': 600, 'boxes': array([[270, 100, 327, 157],
       [358, 297, 403, 342]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/436.jpg', 'flipped': True, 'width': 600, 'boxes': array([[378, 322, 393, 337],
       [293, 120, 323, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/437.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 297, 403, 342],
       [270, 100, 327, 157]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/438.jpg', 'flipped': True, 'width': 600, 'boxes': array([[309, 142, 324, 157],
       [363, 186, 378, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/439.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 335, 397, 350],
       [360, 185, 384, 209],
       [306, 141, 330, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/440.jpg', 'flipped': True, 'width': 600, 'boxes': array([[374, 332, 404, 362],
       [357, 184, 393, 220],
       [300, 134, 339, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/441.jpg', 'flipped': True, 'width': 600, 'boxes': array([[369, 332, 405, 368],
       [352, 178, 403, 229],
       [292, 130, 346, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/442.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 325, 417, 379],
       [347, 175, 413, 241],
       [290, 130, 350, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/443.jpg', 'flipped': True, 'width': 600, 'boxes': array([[287, 128, 359, 200]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/444.jpg', 'flipped': True, 'width': 600, 'boxes': array([[287, 125, 371, 209]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/445.jpg', 'flipped': True, 'width': 600, 'boxes': array([[276, 118, 381, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/446.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 186, 378, 201],
       [309, 142, 324, 157]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/447.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 335, 397, 350],
       [360, 185, 384, 209],
       [306, 141, 330, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/448.jpg', 'flipped': True, 'width': 600, 'boxes': array([[374, 332, 404, 362],
       [357, 184, 393, 220],
       [300, 134, 339, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/449.jpg', 'flipped': True, 'width': 600, 'boxes': array([[369, 332, 405, 368],
       [352, 178, 403, 229],
       [292, 130, 346, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/450.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 325, 417, 379],
       [347, 175, 413, 241],
       [290, 130, 350, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/451.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 335, 397, 350],
       [360, 185, 384, 209],
       [306, 141, 330, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/452.jpg', 'flipped': True, 'width': 600, 'boxes': array([[374, 332, 404, 362],
       [357, 184, 393, 220],
       [300, 134, 339, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/453.jpg', 'flipped': True, 'width': 600, 'boxes': array([[369, 332, 405, 368],
       [352, 178, 403, 229],
       [292, 130, 346, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/454.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 325, 417, 379],
       [347, 175, 413, 241],
       [290, 130, 350, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/455.jpg', 'flipped': True, 'width': 600, 'boxes': array([[170, 168, 206, 204],
       [386, 336, 398, 348],
       [370, 191, 379, 200],
       [310, 142, 331, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/456.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 166, 217, 214],
       [384, 333, 411, 360],
       [372, 192, 390, 210],
       [309, 139, 342, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/457.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 161, 235, 227],
       [387, 336, 420, 369],
       [370, 189, 406, 225],
       [304, 134, 355, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/458.jpg', 'flipped': True, 'width': 600, 'boxes': array([[167, 160, 242, 235],
       [383, 332, 437, 386],
       [376, 194, 409, 227],
       [299, 130, 365, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/459.jpg', 'flipped': True, 'width': 600, 'boxes': array([[295, 125, 376, 206],
       [386, 338, 446, 398]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/460.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 120, 384, 213],
       [386, 337, 458, 409]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/461.jpg', 'flipped': True, 'width': 600, 'boxes': array([[287, 115, 392, 220]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/462.jpg', 'flipped': True, 'width': 600, 'boxes': array([[276, 109, 402, 235]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/463.jpg', 'flipped': True, 'width': 600, 'boxes': array([[257,  95, 416, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/464.jpg', 'flipped': True, 'width': 600, 'boxes': array([[170, 168, 206, 204],
       [386, 336, 398, 348],
       [370, 191, 379, 200],
       [310, 142, 331, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/465.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 166, 217, 214],
       [384, 333, 411, 360],
       [372, 192, 390, 210],
       [309, 139, 342, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/466.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 161, 235, 227],
       [387, 336, 420, 369],
       [370, 189, 406, 225],
       [304, 134, 355, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/467.jpg', 'flipped': True, 'width': 600, 'boxes': array([[167, 160, 242, 235],
       [383, 332, 437, 386],
       [376, 194, 409, 227],
       [299, 130, 365, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/468.jpg', 'flipped': True, 'width': 600, 'boxes': array([[170, 168, 206, 204],
       [386, 336, 398, 348],
       [370, 191, 379, 200],
       [310, 142, 331, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/469.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 166, 217, 214],
       [384, 333, 411, 360],
       [372, 192, 390, 210],
       [309, 139, 342, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/470.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 161, 235, 227],
       [387, 336, 420, 369],
       [370, 189, 406, 225],
       [304, 134, 355, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/471.jpg', 'flipped': True, 'width': 600, 'boxes': array([[167, 160, 242, 235],
       [383, 332, 437, 386],
       [376, 194, 409, 227],
       [299, 130, 365, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/472.jpg', 'flipped': True, 'width': 600, 'boxes': array([[386, 338, 446, 398],
       [295, 125, 376, 206]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/473.jpg', 'flipped': True, 'width': 600, 'boxes': array([[386, 337, 458, 409],
       [291, 120, 384, 213]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/474.jpg', 'flipped': True, 'width': 600, 'boxes': array([[171, 169, 192, 190]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/475.jpg', 'flipped': True, 'width': 600, 'boxes': array([[170, 168, 206, 204],
       [386, 336, 398, 348],
       [370, 191, 379, 200],
       [310, 142, 331, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/476.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 166, 217, 214],
       [384, 333, 411, 360],
       [372, 192, 390, 210],
       [309, 139, 342, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/477.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 161, 235, 227],
       [387, 336, 420, 369],
       [370, 189, 406, 225],
       [304, 134, 355, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/478.jpg', 'flipped': True, 'width': 600, 'boxes': array([[167, 160, 242, 235],
       [383, 332, 437, 386],
       [376, 194, 409, 227],
       [299, 130, 365, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/479.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 186, 372, 195],
       [172, 173, 178, 179],
       [307, 138, 325, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/480.jpg', 'flipped': True, 'width': 600, 'boxes': array([[263, 305, 269, 311],
       [355, 184, 379, 208],
       [168, 170, 186, 188],
       [384, 330, 402, 348],
       [300, 133, 330, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/481.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 299, 279, 320],
       [347, 183, 383, 219],
       [158, 162, 194, 198],
       [380, 328, 407, 355],
       [287, 125, 341, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/482.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 296, 288, 332],
       [342, 183, 390, 231],
       [150, 155, 204, 209],
       [377, 327, 416, 366],
       [275, 114, 350, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/483.jpg', 'flipped': True, 'width': 600, 'boxes': array([[242, 288, 299, 345],
       [139, 144, 214, 219],
       [369, 325, 420, 376],
       [269, 113, 356, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/484.jpg', 'flipped': True, 'width': 600, 'boxes': array([[256, 105, 367, 216]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/485.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 101, 375, 227]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/486.jpg', 'flipped': True, 'width': 600, 'boxes': array([[244,  95, 382, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/487.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240,  93, 387, 240]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/488.jpg', 'flipped': True, 'width': 600, 'boxes': array([[236,  90, 395, 249]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/489.jpg', 'flipped': True, 'width': 600, 'boxes': array([[236,  92, 398, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/490.jpg', 'flipped': True, 'width': 600, 'boxes': array([[230,  86, 404, 260]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/491.jpg', 'flipped': True, 'width': 600, 'boxes': array([[263, 305, 269, 311],
       [355, 184, 379, 208],
       [168, 170, 186, 188],
       [384, 330, 402, 348],
       [300, 133, 330, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/492.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 299, 279, 320],
       [347, 183, 383, 219],
       [158, 162, 194, 198],
       [380, 328, 407, 355],
       [287, 125, 341, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/493.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 296, 288, 332],
       [342, 183, 390, 231],
       [150, 155, 204, 209],
       [377, 327, 416, 366],
       [275, 114, 350, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/494.jpg', 'flipped': True, 'width': 600, 'boxes': array([[242, 288, 299, 345],
       [139, 144, 214, 219],
       [369, 325, 420, 376],
       [269, 113, 356, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/495.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 186, 372, 195],
       [172, 173, 178, 179],
       [307, 138, 325, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/496.jpg', 'flipped': True, 'width': 600, 'boxes': array([[263, 305, 269, 311],
       [355, 184, 379, 208],
       [168, 170, 186, 188],
       [384, 330, 402, 348],
       [300, 133, 330, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/497.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 299, 279, 320],
       [347, 183, 383, 219],
       [158, 162, 194, 198],
       [380, 328, 407, 355],
       [287, 125, 341, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/498.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 296, 288, 332],
       [342, 183, 390, 231],
       [150, 155, 204, 209],
       [377, 327, 416, 366],
       [275, 114, 350, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/499.jpg', 'flipped': True, 'width': 600, 'boxes': array([[242, 288, 299, 345],
       [139, 144, 214, 219],
       [369, 325, 420, 376],
       [269, 113, 356, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/500.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 186, 372, 195],
       [172, 173, 178, 179],
       [307, 138, 325, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/501.jpg', 'flipped': True, 'width': 600, 'boxes': array([[263, 305, 269, 311],
       [355, 184, 379, 208],
       [168, 170, 186, 188],
       [384, 330, 402, 348],
       [300, 133, 330, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
Filtered 0 roidb entries: 1000 -> 1000
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0406 18:20:17.094063  2837 solver.cpp:48] Initializing solver from parameters: 
train_net: "/home/sgabriel/py-faster-rcnn/models/pascal_voc/ZF/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 50000
snapshot: 0
snapshot_prefix: "zf_faster_rcnn"
average_loss: 100
iter_size: 2
I0406 18:20:17.094115  2837 solver.cpp:81] Creating training net from train_net file: /home/sgabriel/py-faster-rcnn/models/pascal_voc/ZF/faster_rcnn_end2end/train.prototxt
I0406 18:20:17.095628  2837 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "bbox_loss"
  loss_weight: 1
}
I0406 18:20:17.095886  2837 layer_factory.hpp:77] Creating layer input-data
I0406 18:20:17.201309  2837 net.cpp:106] Creating Layer input-data
I0406 18:20:17.201334  2837 net.cpp:411] input-data -> data
I0406 18:20:17.201356  2837 net.cpp:411] input-data -> im_info
I0406 18:20:17.201364  2837 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0406 18:20:17.255511  2837 net.cpp:150] Setting up input-data
I0406 18:20:17.255540  2837 net.cpp:157] Top shape: 1 3 600 600 (1080000)
I0406 18:20:17.255549  2837 net.cpp:157] Top shape: 1 3 (3)
I0406 18:20:17.255555  2837 net.cpp:157] Top shape: 1 4 (4)
I0406 18:20:17.255560  2837 net.cpp:165] Memory required for data: 4320028
I0406 18:20:17.255570  2837 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0406 18:20:17.256719  2837 net.cpp:106] Creating Layer data_input-data_0_split
I0406 18:20:17.256731  2837 net.cpp:454] data_input-data_0_split <- data
I0406 18:20:17.256742  2837 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0406 18:20:17.256754  2837 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0406 18:20:17.256819  2837 net.cpp:150] Setting up data_input-data_0_split
I0406 18:20:17.256829  2837 net.cpp:157] Top shape: 1 3 600 600 (1080000)
I0406 18:20:17.256837  2837 net.cpp:157] Top shape: 1 3 600 600 (1080000)
I0406 18:20:17.256841  2837 net.cpp:165] Memory required for data: 12960028
I0406 18:20:17.256847  2837 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0406 18:20:17.256856  2837 net.cpp:106] Creating Layer im_info_input-data_1_split
I0406 18:20:17.256861  2837 net.cpp:454] im_info_input-data_1_split <- im_info
I0406 18:20:17.256875  2837 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0406 18:20:17.256884  2837 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0406 18:20:17.256924  2837 net.cpp:150] Setting up im_info_input-data_1_split
I0406 18:20:17.256937  2837 net.cpp:157] Top shape: 1 3 (3)
I0406 18:20:17.256942  2837 net.cpp:157] Top shape: 1 3 (3)
I0406 18:20:17.256947  2837 net.cpp:165] Memory required for data: 12960052
I0406 18:20:17.256953  2837 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0406 18:20:17.256960  2837 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0406 18:20:17.256965  2837 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0406 18:20:17.256973  2837 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0406 18:20:17.256980  2837 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0406 18:20:17.257022  2837 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0406 18:20:17.257030  2837 net.cpp:157] Top shape: 1 4 (4)
I0406 18:20:17.257036  2837 net.cpp:157] Top shape: 1 4 (4)
I0406 18:20:17.257040  2837 net.cpp:165] Memory required for data: 12960084
I0406 18:20:17.257045  2837 layer_factory.hpp:77] Creating layer conv1
I0406 18:20:17.257063  2837 net.cpp:106] Creating Layer conv1
I0406 18:20:17.257068  2837 net.cpp:454] conv1 <- data_input-data_0_split_0
I0406 18:20:17.257078  2837 net.cpp:411] conv1 -> conv1
I0406 18:20:17.259205  2837 net.cpp:150] Setting up conv1
I0406 18:20:17.259222  2837 net.cpp:157] Top shape: 1 96 300 300 (8640000)
I0406 18:20:17.259227  2837 net.cpp:165] Memory required for data: 47520084
I0406 18:20:17.259251  2837 layer_factory.hpp:77] Creating layer relu1
I0406 18:20:17.259264  2837 net.cpp:106] Creating Layer relu1
I0406 18:20:17.259270  2837 net.cpp:454] relu1 <- conv1
I0406 18:20:17.259280  2837 net.cpp:397] relu1 -> conv1 (in-place)
I0406 18:20:17.259291  2837 net.cpp:150] Setting up relu1
I0406 18:20:17.259299  2837 net.cpp:157] Top shape: 1 96 300 300 (8640000)
I0406 18:20:17.259305  2837 net.cpp:165] Memory required for data: 82080084
I0406 18:20:17.259308  2837 layer_factory.hpp:77] Creating layer norm1
I0406 18:20:17.259316  2837 net.cpp:106] Creating Layer norm1
I0406 18:20:17.259321  2837 net.cpp:454] norm1 <- conv1
I0406 18:20:17.259328  2837 net.cpp:411] norm1 -> norm1
I0406 18:20:17.259479  2837 net.cpp:150] Setting up norm1
I0406 18:20:17.259488  2837 net.cpp:157] Top shape: 1 96 300 300 (8640000)
I0406 18:20:17.259493  2837 net.cpp:165] Memory required for data: 116640084
I0406 18:20:17.259497  2837 layer_factory.hpp:77] Creating layer pool1
I0406 18:20:17.259508  2837 net.cpp:106] Creating Layer pool1
I0406 18:20:17.259513  2837 net.cpp:454] pool1 <- norm1
I0406 18:20:17.259521  2837 net.cpp:411] pool1 -> pool1
I0406 18:20:17.259567  2837 net.cpp:150] Setting up pool1
I0406 18:20:17.259574  2837 net.cpp:157] Top shape: 1 96 151 151 (2188896)
I0406 18:20:17.259579  2837 net.cpp:165] Memory required for data: 125395668
I0406 18:20:17.259584  2837 layer_factory.hpp:77] Creating layer conv2
I0406 18:20:17.259596  2837 net.cpp:106] Creating Layer conv2
I0406 18:20:17.259601  2837 net.cpp:454] conv2 <- pool1
I0406 18:20:17.259608  2837 net.cpp:411] conv2 -> conv2
I0406 18:20:17.261837  2837 net.cpp:150] Setting up conv2
I0406 18:20:17.261852  2837 net.cpp:157] Top shape: 1 256 76 76 (1478656)
I0406 18:20:17.261857  2837 net.cpp:165] Memory required for data: 131310292
I0406 18:20:17.261874  2837 layer_factory.hpp:77] Creating layer relu2
I0406 18:20:17.261883  2837 net.cpp:106] Creating Layer relu2
I0406 18:20:17.261889  2837 net.cpp:454] relu2 <- conv2
I0406 18:20:17.261901  2837 net.cpp:397] relu2 -> conv2 (in-place)
I0406 18:20:17.261910  2837 net.cpp:150] Setting up relu2
I0406 18:20:17.261916  2837 net.cpp:157] Top shape: 1 256 76 76 (1478656)
I0406 18:20:17.261921  2837 net.cpp:165] Memory required for data: 137224916
I0406 18:20:17.261925  2837 layer_factory.hpp:77] Creating layer norm2
I0406 18:20:17.261932  2837 net.cpp:106] Creating Layer norm2
I0406 18:20:17.261936  2837 net.cpp:454] norm2 <- conv2
I0406 18:20:17.261945  2837 net.cpp:411] norm2 -> norm2
I0406 18:20:17.262056  2837 net.cpp:150] Setting up norm2
I0406 18:20:17.262065  2837 net.cpp:157] Top shape: 1 256 76 76 (1478656)
I0406 18:20:17.262070  2837 net.cpp:165] Memory required for data: 143139540
I0406 18:20:17.262074  2837 layer_factory.hpp:77] Creating layer pool2
I0406 18:20:17.262082  2837 net.cpp:106] Creating Layer pool2
I0406 18:20:17.262087  2837 net.cpp:454] pool2 <- norm2
I0406 18:20:17.262094  2837 net.cpp:411] pool2 -> pool2
I0406 18:20:17.262137  2837 net.cpp:150] Setting up pool2
I0406 18:20:17.262145  2837 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0406 18:20:17.262148  2837 net.cpp:165] Memory required for data: 144697044
I0406 18:20:17.262152  2837 layer_factory.hpp:77] Creating layer conv3
I0406 18:20:17.262167  2837 net.cpp:106] Creating Layer conv3
I0406 18:20:17.262172  2837 net.cpp:454] conv3 <- pool2
I0406 18:20:17.262178  2837 net.cpp:411] conv3 -> conv3
I0406 18:20:17.266949  2837 net.cpp:150] Setting up conv3
I0406 18:20:17.266968  2837 net.cpp:157] Top shape: 1 384 39 39 (584064)
I0406 18:20:17.266971  2837 net.cpp:165] Memory required for data: 147033300
I0406 18:20:17.266983  2837 layer_factory.hpp:77] Creating layer relu3
I0406 18:20:17.266996  2837 net.cpp:106] Creating Layer relu3
I0406 18:20:17.267002  2837 net.cpp:454] relu3 <- conv3
I0406 18:20:17.267009  2837 net.cpp:397] relu3 -> conv3 (in-place)
I0406 18:20:17.267019  2837 net.cpp:150] Setting up relu3
I0406 18:20:17.267025  2837 net.cpp:157] Top shape: 1 384 39 39 (584064)
I0406 18:20:17.267030  2837 net.cpp:165] Memory required for data: 149369556
I0406 18:20:17.267035  2837 layer_factory.hpp:77] Creating layer conv4
I0406 18:20:17.267046  2837 net.cpp:106] Creating Layer conv4
I0406 18:20:17.267051  2837 net.cpp:454] conv4 <- conv3
I0406 18:20:17.267057  2837 net.cpp:411] conv4 -> conv4
I0406 18:20:17.271251  2837 net.cpp:150] Setting up conv4
I0406 18:20:17.271267  2837 net.cpp:157] Top shape: 1 384 39 39 (584064)
I0406 18:20:17.271273  2837 net.cpp:165] Memory required for data: 151705812
I0406 18:20:17.271281  2837 layer_factory.hpp:77] Creating layer relu4
I0406 18:20:17.271289  2837 net.cpp:106] Creating Layer relu4
I0406 18:20:17.271296  2837 net.cpp:454] relu4 <- conv4
I0406 18:20:17.271303  2837 net.cpp:397] relu4 -> conv4 (in-place)
I0406 18:20:17.271312  2837 net.cpp:150] Setting up relu4
I0406 18:20:17.271318  2837 net.cpp:157] Top shape: 1 384 39 39 (584064)
I0406 18:20:17.271323  2837 net.cpp:165] Memory required for data: 154042068
I0406 18:20:17.271327  2837 layer_factory.hpp:77] Creating layer conv5
I0406 18:20:17.271342  2837 net.cpp:106] Creating Layer conv5
I0406 18:20:17.271347  2837 net.cpp:454] conv5 <- conv4
I0406 18:20:17.271353  2837 net.cpp:411] conv5 -> conv5
I0406 18:20:17.274237  2837 net.cpp:150] Setting up conv5
I0406 18:20:17.274252  2837 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0406 18:20:17.274257  2837 net.cpp:165] Memory required for data: 155599572
I0406 18:20:17.274273  2837 layer_factory.hpp:77] Creating layer relu5
I0406 18:20:17.274281  2837 net.cpp:106] Creating Layer relu5
I0406 18:20:17.274286  2837 net.cpp:454] relu5 <- conv5
I0406 18:20:17.274293  2837 net.cpp:397] relu5 -> conv5 (in-place)
I0406 18:20:17.274302  2837 net.cpp:150] Setting up relu5
I0406 18:20:17.274308  2837 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0406 18:20:17.274312  2837 net.cpp:165] Memory required for data: 157157076
I0406 18:20:17.274317  2837 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0406 18:20:17.274323  2837 net.cpp:106] Creating Layer conv5_relu5_0_split
I0406 18:20:17.274328  2837 net.cpp:454] conv5_relu5_0_split <- conv5
I0406 18:20:17.274338  2837 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0406 18:20:17.274345  2837 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0406 18:20:17.274385  2837 net.cpp:150] Setting up conv5_relu5_0_split
I0406 18:20:17.274392  2837 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0406 18:20:17.274399  2837 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0406 18:20:17.274402  2837 net.cpp:165] Memory required for data: 160272084
I0406 18:20:17.274406  2837 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0406 18:20:17.274421  2837 net.cpp:106] Creating Layer rpn_conv/3x3
I0406 18:20:17.274426  2837 net.cpp:454] rpn_conv/3x3 <- conv5_relu5_0_split_0
I0406 18:20:17.274435  2837 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0406 18:20:17.287920  2837 net.cpp:150] Setting up rpn_conv/3x3
I0406 18:20:17.287937  2837 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0406 18:20:17.287942  2837 net.cpp:165] Memory required for data: 161829588
I0406 18:20:17.287951  2837 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0406 18:20:17.287961  2837 net.cpp:106] Creating Layer rpn_relu/3x3
I0406 18:20:17.287966  2837 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0406 18:20:17.287973  2837 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0406 18:20:17.287981  2837 net.cpp:150] Setting up rpn_relu/3x3
I0406 18:20:17.287987  2837 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0406 18:20:17.287992  2837 net.cpp:165] Memory required for data: 163387092
I0406 18:20:17.287995  2837 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0406 18:20:17.288002  2837 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0406 18:20:17.288007  2837 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0406 18:20:17.288014  2837 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0406 18:20:17.288022  2837 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0406 18:20:17.288058  2837 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0406 18:20:17.288065  2837 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0406 18:20:17.288072  2837 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0406 18:20:17.288076  2837 net.cpp:165] Memory required for data: 166502100
I0406 18:20:17.288080  2837 layer_factory.hpp:77] Creating layer rpn_cls_score
I0406 18:20:17.288094  2837 net.cpp:106] Creating Layer rpn_cls_score
I0406 18:20:17.288100  2837 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0406 18:20:17.288105  2837 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0406 18:20:17.288460  2837 net.cpp:150] Setting up rpn_cls_score
I0406 18:20:17.288470  2837 net.cpp:157] Top shape: 1 18 39 39 (27378)
I0406 18:20:17.288475  2837 net.cpp:165] Memory required for data: 166611612
I0406 18:20:17.288481  2837 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0406 18:20:17.288488  2837 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0406 18:20:17.288492  2837 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0406 18:20:17.288498  2837 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0406 18:20:17.288506  2837 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0406 18:20:17.288544  2837 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0406 18:20:17.288552  2837 net.cpp:157] Top shape: 1 18 39 39 (27378)
I0406 18:20:17.288556  2837 net.cpp:157] Top shape: 1 18 39 39 (27378)
I0406 18:20:17.288560  2837 net.cpp:165] Memory required for data: 166830636
I0406 18:20:17.288564  2837 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0406 18:20:17.288575  2837 net.cpp:106] Creating Layer rpn_bbox_pred
I0406 18:20:17.288580  2837 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0406 18:20:17.288589  2837 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0406 18:20:17.289039  2837 net.cpp:150] Setting up rpn_bbox_pred
I0406 18:20:17.289050  2837 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0406 18:20:17.289053  2837 net.cpp:165] Memory required for data: 167049660
I0406 18:20:17.289060  2837 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0406 18:20:17.289069  2837 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0406 18:20:17.289074  2837 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0406 18:20:17.289080  2837 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0406 18:20:17.289088  2837 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0406 18:20:17.289126  2837 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0406 18:20:17.289134  2837 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0406 18:20:17.289137  2837 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0406 18:20:17.289141  2837 net.cpp:165] Memory required for data: 167487708
I0406 18:20:17.289145  2837 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0406 18:20:17.289155  2837 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0406 18:20:17.289160  2837 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0406 18:20:17.289170  2837 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0406 18:20:17.289201  2837 net.cpp:150] Setting up rpn_cls_score_reshape
I0406 18:20:17.289207  2837 net.cpp:157] Top shape: 1 2 351 39 (27378)
I0406 18:20:17.289211  2837 net.cpp:165] Memory required for data: 167597220
I0406 18:20:17.289216  2837 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0406 18:20:17.289224  2837 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0406 18:20:17.289229  2837 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0406 18:20:17.289234  2837 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0406 18:20:17.289244  2837 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0406 18:20:17.289278  2837 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0406 18:20:17.289285  2837 net.cpp:157] Top shape: 1 2 351 39 (27378)
I0406 18:20:17.289290  2837 net.cpp:157] Top shape: 1 2 351 39 (27378)
I0406 18:20:17.289294  2837 net.cpp:165] Memory required for data: 167816244
I0406 18:20:17.289297  2837 layer_factory.hpp:77] Creating layer rpn-data
I0406 18:20:17.296975  2837 net.cpp:106] Creating Layer rpn-data
I0406 18:20:17.296988  2837 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0406 18:20:17.297008  2837 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0406 18:20:17.297015  2837 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0406 18:20:17.297020  2837 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0406 18:20:17.297026  2837 net.cpp:411] rpn-data -> rpn_labels
I0406 18:20:17.297037  2837 net.cpp:411] rpn-data -> rpn_bbox_targets
I0406 18:20:17.297044  2837 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0406 18:20:17.297050  2837 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0406 18:20:17.298868  2837 net.cpp:150] Setting up rpn-data
I0406 18:20:17.298888  2837 net.cpp:157] Top shape: 1 1 351 39 (13689)
I0406 18:20:17.298892  2837 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0406 18:20:17.298897  2837 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0406 18:20:17.298914  2837 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0406 18:20:17.298920  2837 net.cpp:165] Memory required for data: 168528072
I0406 18:20:17.298928  2837 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0406 18:20:17.298938  2837 net.cpp:106] Creating Layer rpn_loss_cls
I0406 18:20:17.298943  2837 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0406 18:20:17.298949  2837 net.cpp:454] rpn_loss_cls <- rpn_labels
I0406 18:20:17.298956  2837 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0406 18:20:17.298970  2837 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0406 18:20:17.299103  2837 net.cpp:150] Setting up rpn_loss_cls
I0406 18:20:17.299111  2837 net.cpp:157] Top shape: (1)
I0406 18:20:17.299114  2837 net.cpp:160]     with loss weight 1
I0406 18:20:17.299134  2837 net.cpp:165] Memory required for data: 168528076
I0406 18:20:17.299140  2837 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0406 18:20:17.299149  2837 net.cpp:106] Creating Layer rpn_loss_bbox
I0406 18:20:17.299154  2837 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0406 18:20:17.299159  2837 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0406 18:20:17.299163  2837 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0406 18:20:17.299167  2837 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0406 18:20:17.299172  2837 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0406 18:20:17.299597  2837 net.cpp:150] Setting up rpn_loss_bbox
I0406 18:20:17.299607  2837 net.cpp:157] Top shape: (1)
I0406 18:20:17.299613  2837 net.cpp:160]     with loss weight 1
I0406 18:20:17.299630  2837 net.cpp:165] Memory required for data: 168528080
I0406 18:20:17.299633  2837 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0406 18:20:17.299640  2837 net.cpp:106] Creating Layer rpn_cls_prob
I0406 18:20:17.299644  2837 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0406 18:20:17.299651  2837 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0406 18:20:17.299723  2837 net.cpp:150] Setting up rpn_cls_prob
I0406 18:20:17.299731  2837 net.cpp:157] Top shape: 1 2 351 39 (27378)
I0406 18:20:17.299733  2837 net.cpp:165] Memory required for data: 168637592
I0406 18:20:17.299736  2837 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0406 18:20:17.299751  2837 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0406 18:20:17.299757  2837 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0406 18:20:17.299762  2837 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0406 18:20:17.299788  2837 net.cpp:150] Setting up rpn_cls_prob_reshape
I0406 18:20:17.299795  2837 net.cpp:157] Top shape: 1 18 39 39 (27378)
I0406 18:20:17.299798  2837 net.cpp:165] Memory required for data: 168747104
I0406 18:20:17.299803  2837 layer_factory.hpp:77] Creating layer proposal
I0406 18:20:17.312110  2837 net.cpp:106] Creating Layer proposal
I0406 18:20:17.312130  2837 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0406 18:20:17.312140  2837 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0406 18:20:17.312150  2837 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0406 18:20:17.312160  2837 net.cpp:411] proposal -> rpn_rois
I0406 18:20:17.333369  2837 net.cpp:150] Setting up proposal
I0406 18:20:17.333398  2837 net.cpp:157] Top shape: 1 5 (5)
I0406 18:20:17.333405  2837 net.cpp:165] Memory required for data: 168747124
I0406 18:20:17.333411  2837 layer_factory.hpp:77] Creating layer roi-data
I0406 18:20:17.335094  2837 net.cpp:106] Creating Layer roi-data
I0406 18:20:17.335117  2837 net.cpp:454] roi-data <- rpn_rois
I0406 18:20:17.335129  2837 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0406 18:20:17.335142  2837 net.cpp:411] roi-data -> rois
I0406 18:20:17.335160  2837 net.cpp:411] roi-data -> labels
I0406 18:20:17.335175  2837 net.cpp:411] roi-data -> bbox_targets
I0406 18:20:17.335187  2837 net.cpp:411] roi-data -> bbox_inside_weights
I0406 18:20:17.335201  2837 net.cpp:411] roi-data -> bbox_outside_weights
I0406 18:20:17.336100  2837 net.cpp:150] Setting up roi-data
I0406 18:20:17.336125  2837 net.cpp:157] Top shape: 1 5 (5)
I0406 18:20:17.336135  2837 net.cpp:157] Top shape: 1 1 (1)
I0406 18:20:17.336143  2837 net.cpp:157] Top shape: 1 8 (8)
I0406 18:20:17.336151  2837 net.cpp:157] Top shape: 1 8 (8)
I0406 18:20:17.336159  2837 net.cpp:157] Top shape: 1 8 (8)
I0406 18:20:17.336165  2837 net.cpp:165] Memory required for data: 168747244
I0406 18:20:17.336174  2837 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0406 18:20:17.336196  2837 net.cpp:106] Creating Layer roi_pool_conv5
I0406 18:20:17.336205  2837 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_1
I0406 18:20:17.336217  2837 net.cpp:454] roi_pool_conv5 <- rois
I0406 18:20:17.336233  2837 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0406 18:20:17.336261  2837 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0406 18:20:17.336338  2837 net.cpp:150] Setting up roi_pool_conv5
I0406 18:20:17.336355  2837 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0406 18:20:17.336366  2837 net.cpp:165] Memory required for data: 168784108
I0406 18:20:17.336379  2837 layer_factory.hpp:77] Creating layer fc6
I0406 18:20:17.336400  2837 net.cpp:106] Creating Layer fc6
I0406 18:20:17.336410  2837 net.cpp:454] fc6 <- roi_pool_conv5
I0406 18:20:17.336428  2837 net.cpp:411] fc6 -> fc6
I0406 18:20:17.461408  2837 net.cpp:150] Setting up fc6
I0406 18:20:17.461447  2837 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:20:17.461452  2837 net.cpp:165] Memory required for data: 168800492
I0406 18:20:17.461477  2837 layer_factory.hpp:77] Creating layer relu6
I0406 18:20:17.461491  2837 net.cpp:106] Creating Layer relu6
I0406 18:20:17.461498  2837 net.cpp:454] relu6 <- fc6
I0406 18:20:17.461509  2837 net.cpp:397] relu6 -> fc6 (in-place)
I0406 18:20:17.461521  2837 net.cpp:150] Setting up relu6
I0406 18:20:17.461529  2837 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:20:17.461534  2837 net.cpp:165] Memory required for data: 168816876
I0406 18:20:17.461539  2837 layer_factory.hpp:77] Creating layer drop6
I0406 18:20:17.461558  2837 net.cpp:106] Creating Layer drop6
I0406 18:20:17.461563  2837 net.cpp:454] drop6 <- fc6
I0406 18:20:17.461571  2837 net.cpp:397] drop6 -> fc6 (in-place)
I0406 18:20:17.461602  2837 net.cpp:150] Setting up drop6
I0406 18:20:17.461611  2837 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:20:17.461616  2837 net.cpp:165] Memory required for data: 168833260
I0406 18:20:17.461622  2837 layer_factory.hpp:77] Creating layer fc7
I0406 18:20:17.461633  2837 net.cpp:106] Creating Layer fc7
I0406 18:20:17.461638  2837 net.cpp:454] fc7 <- fc6
I0406 18:20:17.461648  2837 net.cpp:411] fc7 -> fc7
I0406 18:20:17.508502  2837 net.cpp:150] Setting up fc7
I0406 18:20:17.508534  2837 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:20:17.508539  2837 net.cpp:165] Memory required for data: 168849644
I0406 18:20:17.508556  2837 layer_factory.hpp:77] Creating layer relu7
I0406 18:20:17.508569  2837 net.cpp:106] Creating Layer relu7
I0406 18:20:17.508576  2837 net.cpp:454] relu7 <- fc7
I0406 18:20:17.508586  2837 net.cpp:397] relu7 -> fc7 (in-place)
I0406 18:20:17.508599  2837 net.cpp:150] Setting up relu7
I0406 18:20:17.508605  2837 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:20:17.508610  2837 net.cpp:165] Memory required for data: 168866028
I0406 18:20:17.508616  2837 layer_factory.hpp:77] Creating layer drop7
I0406 18:20:17.508626  2837 net.cpp:106] Creating Layer drop7
I0406 18:20:17.508630  2837 net.cpp:454] drop7 <- fc7
I0406 18:20:17.508640  2837 net.cpp:397] drop7 -> fc7 (in-place)
I0406 18:20:17.508666  2837 net.cpp:150] Setting up drop7
I0406 18:20:17.508674  2837 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:20:17.508680  2837 net.cpp:165] Memory required for data: 168882412
I0406 18:20:17.508687  2837 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0406 18:20:17.508695  2837 net.cpp:106] Creating Layer fc7_drop7_0_split
I0406 18:20:17.508699  2837 net.cpp:454] fc7_drop7_0_split <- fc7
I0406 18:20:17.508709  2837 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0406 18:20:17.508720  2837 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0406 18:20:17.508761  2837 net.cpp:150] Setting up fc7_drop7_0_split
I0406 18:20:17.508769  2837 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:20:17.508776  2837 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:20:17.508781  2837 net.cpp:165] Memory required for data: 168915180
I0406 18:20:17.508787  2837 layer_factory.hpp:77] Creating layer cls_score
I0406 18:20:17.508798  2837 net.cpp:106] Creating Layer cls_score
I0406 18:20:17.508803  2837 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0406 18:20:17.508813  2837 net.cpp:411] cls_score -> cls_score
I0406 18:20:17.509066  2837 net.cpp:150] Setting up cls_score
I0406 18:20:17.509076  2837 net.cpp:157] Top shape: 1 2 (2)
I0406 18:20:17.509083  2837 net.cpp:165] Memory required for data: 168915188
I0406 18:20:17.509093  2837 layer_factory.hpp:77] Creating layer bbox_pred
I0406 18:20:17.509101  2837 net.cpp:106] Creating Layer bbox_pred
I0406 18:20:17.509107  2837 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0406 18:20:17.509117  2837 net.cpp:411] bbox_pred -> bbox_pred
I0406 18:20:17.509805  2837 net.cpp:150] Setting up bbox_pred
I0406 18:20:17.509815  2837 net.cpp:157] Top shape: 1 8 (8)
I0406 18:20:17.509821  2837 net.cpp:165] Memory required for data: 168915220
I0406 18:20:17.509832  2837 layer_factory.hpp:77] Creating layer loss_cls
I0406 18:20:17.509841  2837 net.cpp:106] Creating Layer loss_cls
I0406 18:20:17.509847  2837 net.cpp:454] loss_cls <- cls_score
I0406 18:20:17.509855  2837 net.cpp:454] loss_cls <- labels
I0406 18:20:17.509867  2837 net.cpp:411] loss_cls -> cls_loss
I0406 18:20:17.509879  2837 layer_factory.hpp:77] Creating layer loss_cls
I0406 18:20:17.509963  2837 net.cpp:150] Setting up loss_cls
I0406 18:20:17.509971  2837 net.cpp:157] Top shape: (1)
I0406 18:20:17.509977  2837 net.cpp:160]     with loss weight 1
I0406 18:20:17.509994  2837 net.cpp:165] Memory required for data: 168915224
I0406 18:20:17.510000  2837 layer_factory.hpp:77] Creating layer loss_bbox
I0406 18:20:17.510010  2837 net.cpp:106] Creating Layer loss_bbox
I0406 18:20:17.510015  2837 net.cpp:454] loss_bbox <- bbox_pred
I0406 18:20:17.510022  2837 net.cpp:454] loss_bbox <- bbox_targets
I0406 18:20:17.510028  2837 net.cpp:454] loss_bbox <- bbox_inside_weights
I0406 18:20:17.510035  2837 net.cpp:454] loss_bbox <- bbox_outside_weights
I0406 18:20:17.510043  2837 net.cpp:411] loss_bbox -> bbox_loss
I0406 18:20:17.510123  2837 net.cpp:150] Setting up loss_bbox
I0406 18:20:17.510131  2837 net.cpp:157] Top shape: (1)
I0406 18:20:17.510138  2837 net.cpp:160]     with loss weight 1
I0406 18:20:17.510145  2837 net.cpp:165] Memory required for data: 168915228
I0406 18:20:17.510151  2837 net.cpp:226] loss_bbox needs backward computation.
I0406 18:20:17.510159  2837 net.cpp:226] loss_cls needs backward computation.
I0406 18:20:17.510164  2837 net.cpp:226] bbox_pred needs backward computation.
I0406 18:20:17.510169  2837 net.cpp:226] cls_score needs backward computation.
I0406 18:20:17.510175  2837 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0406 18:20:17.510181  2837 net.cpp:226] drop7 needs backward computation.
I0406 18:20:17.510187  2837 net.cpp:226] relu7 needs backward computation.
I0406 18:20:17.510192  2837 net.cpp:226] fc7 needs backward computation.
I0406 18:20:17.510198  2837 net.cpp:226] drop6 needs backward computation.
I0406 18:20:17.510203  2837 net.cpp:226] relu6 needs backward computation.
I0406 18:20:17.510210  2837 net.cpp:226] fc6 needs backward computation.
I0406 18:20:17.510215  2837 net.cpp:226] roi_pool_conv5 needs backward computation.
I0406 18:20:17.510222  2837 net.cpp:226] roi-data needs backward computation.
I0406 18:20:17.510229  2837 net.cpp:226] proposal needs backward computation.
I0406 18:20:17.510236  2837 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0406 18:20:17.510242  2837 net.cpp:226] rpn_cls_prob needs backward computation.
I0406 18:20:17.510248  2837 net.cpp:226] rpn_loss_bbox needs backward computation.
I0406 18:20:17.510257  2837 net.cpp:226] rpn_loss_cls needs backward computation.
I0406 18:20:17.510264  2837 net.cpp:226] rpn-data needs backward computation.
I0406 18:20:17.510272  2837 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0406 18:20:17.510278  2837 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0406 18:20:17.510284  2837 net.cpp:226] rpn_bbox_pred_rpn_bbox_pred_0_split needs backward computation.
I0406 18:20:17.510290  2837 net.cpp:226] rpn_bbox_pred needs backward computation.
I0406 18:20:17.510298  2837 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0406 18:20:17.510303  2837 net.cpp:226] rpn_cls_score needs backward computation.
I0406 18:20:17.510309  2837 net.cpp:226] rpn/output_rpn_relu/3x3_0_split needs backward computation.
I0406 18:20:17.510315  2837 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0406 18:20:17.510321  2837 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0406 18:20:17.510329  2837 net.cpp:228] conv5_relu5_0_split does not need backward computation.
I0406 18:20:17.510334  2837 net.cpp:228] relu5 does not need backward computation.
I0406 18:20:17.510340  2837 net.cpp:228] conv5 does not need backward computation.
I0406 18:20:17.510346  2837 net.cpp:228] relu4 does not need backward computation.
I0406 18:20:17.510352  2837 net.cpp:228] conv4 does not need backward computation.
I0406 18:20:17.510359  2837 net.cpp:228] relu3 does not need backward computation.
I0406 18:20:17.510365  2837 net.cpp:228] conv3 does not need backward computation.
I0406 18:20:17.510371  2837 net.cpp:228] pool2 does not need backward computation.
I0406 18:20:17.510377  2837 net.cpp:228] norm2 does not need backward computation.
I0406 18:20:17.510383  2837 net.cpp:228] relu2 does not need backward computation.
I0406 18:20:17.510388  2837 net.cpp:228] conv2 does not need backward computation.
I0406 18:20:17.510396  2837 net.cpp:228] pool1 does not need backward computation.
I0406 18:20:17.510401  2837 net.cpp:228] norm1 does not need backward computation.
I0406 18:20:17.510407  2837 net.cpp:228] relu1 does not need backward computation.
I0406 18:20:17.510412  2837 net.cpp:228] conv1 does not need backward computation.
I0406 18:20:17.510419  2837 net.cpp:228] gt_boxes_input-data_2_split does not need backward computation.
I0406 18:20:17.510426  2837 net.cpp:228] im_info_input-data_1_split does not need backward computation.
I0406 18:20:17.510433  2837 net.cpp:228] data_input-data_0_split does not need backward computation.
I0406 18:20:17.510440  2837 net.cpp:228] input-data does not need backward computation.
I0406 18:20:17.510445  2837 net.cpp:270] This network produces output bbox_loss
I0406 18:20:17.510452  2837 net.cpp:270] This network produces output cls_loss
I0406 18:20:17.510457  2837 net.cpp:270] This network produces output rpn_cls_loss
I0406 18:20:17.510464  2837 net.cpp:270] This network produces output rpn_loss_bbox
I0406 18:20:17.510504  2837 net.cpp:283] Network initialization done.
I0406 18:20:17.510653  2837 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ../../data/imagenet_models/ZF.v2.caffemodel
I0406 18:20:19.860785  2837 net.cpp:816] Ignoring source layer pool5_spm6
I0406 18:20:19.860815  2837 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0406 18:20:19.913121  2837 net.cpp:816] Ignoring source layer fc8
I0406 18:20:19.913146  2837 net.cpp:816] Ignoring source layer prob
Solving...
/home/sgabriel/py-faster-rcnn/tools/../lib/rpn/proposal_target_layer.py:166: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  fg_inds = npr.choice(fg_inds, size=fg_rois_per_this_image, replace=False)
/home/sgabriel/py-faster-rcnn/tools/../lib/rpn/proposal_target_layer.py:177: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  bg_inds = npr.choice(bg_inds, size=bg_rois_per_this_image, replace=False)
/home/sgabriel/py-faster-rcnn/tools/../lib/rpn/proposal_target_layer.py:184: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  labels[fg_rois_per_this_image:] = 0
/home/sgabriel/py-faster-rcnn/tools/../lib/rpn/proposal_target_layer.py:127: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  bbox_targets[ind, start:end] = bbox_target_data[ind, 1:]
/home/sgabriel/py-faster-rcnn/tools/../lib/rpn/proposal_target_layer.py:128: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  bbox_inside_weights[ind, start:end] = cfg.TRAIN.BBOX_INSIDE_WEIGHTS
I0406 18:20:20.824467  2837 solver.cpp:229] Iteration 0, loss = 2.9269
I0406 18:20:20.824512  2837 solver.cpp:245]     Train net output #0: bbox_loss = 0.000566708 (* 1 = 0.000566708 loss)
I0406 18:20:20.824518  2837 solver.cpp:245]     Train net output #1: cls_loss = 0.655162 (* 1 = 0.655162 loss)
I0406 18:20:20.824527  2837 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.582411 (* 1 = 0.582411 loss)
I0406 18:20:20.824535  2837 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 2.05547 (* 1 = 2.05547 loss)
I0406 18:20:20.824548  2837 sgd_solver.cpp:106] Iteration 0, lr = 0.001
Wrote snapshot to: /home/sgabriel/py-faster-rcnn/output/default/voc_2007_trainval/zf_faster_rcnn_iter_1.caffemodel
done solving

real	0m34.303s
user	0m6.156s
sys	0m2.169s
+ set +x
grep: experiments/logs/faster_rcnn_end2end_ZF_.txt.2017-04-06_18-19-50: No such file or directory
+ echo

+ ../../tools/test_net.py --gpu 1 --def ../../models/pascal_voc/ZF/faster_rcnn_end2end/test.prototxt --net ../../output/default/voc_2007_trainval/oldModels/zf_faster_rcnn_iter_140000.caffemodel --imdb CNNDATA_test --cfg ../../experiments/cfgs/roost.yml
<function <lambda> at 0x2aaad9d05de8>
<function <lambda> at 0x2aaad9d05e60>
<function <lambda> at 0x2aaad9d05ed8>
<function <lambda> at 0x2aaad9d05f50>
Called with args:
Namespace(caffemodel='../../output/default/voc_2007_trainval/oldModels/zf_faster_rcnn_iter_140000.caffemodel', cfg_file='../../experiments/cfgs/roost.yml', comp_mode=False, gpu_id=1, imdb_name='CNNDATA_test', max_per_image=100, prototxt='../../models/pascal_voc/ZF/faster_rcnn_end2end/test.prototxt', set_cfgs=None, vis=False, wait=True)
Using config:
{'DATA_DIR': '/home/sgabriel/py-faster-rcnn/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 1,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/sgabriel/py-faster-rcnn/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 17,
 'ROOT_DIR': '/home/sgabriel/py-faster-rcnn',
 'TEST': {'BBOX_REG': False,
          'HAS_RPN': True,
          'MAX_SIZE': 600,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 4,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 600,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': False}
../../tools/test_net.py:80: RuntimeWarning: to-Python converter for boost::shared_ptr<caffe::Blob<float> > already registered; second conversion method ignored.
  caffe.set_mode_gpu()
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0406 18:20:27.690770  2891 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn/output"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  inner_product_param {
    num_output: 2
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  inner_product_param {
    num_output: 8
  }
}
layer {
  name: "cls_prob"
  type: "Softmax"
  bottom: "cls_score"
  top: "cls_prob"
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0406 18:20:27.691084  2891 net.cpp:413] Input 0 -> data
I0406 18:20:27.732923  2891 net.cpp:413] Input 1 -> im_info
I0406 18:20:27.732987  2891 layer_factory.hpp:77] Creating layer conv1
I0406 18:20:27.733016  2891 net.cpp:106] Creating Layer conv1
I0406 18:20:27.733023  2891 net.cpp:454] conv1 <- data
I0406 18:20:27.733032  2891 net.cpp:411] conv1 -> conv1
I0406 18:20:27.734169  2891 net.cpp:150] Setting up conv1
I0406 18:20:27.734191  2891 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0406 18:20:27.734197  2891 net.cpp:165] Memory required for data: 4816896
I0406 18:20:27.734220  2891 layer_factory.hpp:77] Creating layer relu1
I0406 18:20:27.734232  2891 net.cpp:106] Creating Layer relu1
I0406 18:20:27.734238  2891 net.cpp:454] relu1 <- conv1
I0406 18:20:27.734246  2891 net.cpp:397] relu1 -> conv1 (in-place)
I0406 18:20:27.734259  2891 net.cpp:150] Setting up relu1
I0406 18:20:27.734266  2891 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0406 18:20:27.734272  2891 net.cpp:165] Memory required for data: 9633792
I0406 18:20:27.734277  2891 layer_factory.hpp:77] Creating layer norm1
I0406 18:20:27.734287  2891 net.cpp:106] Creating Layer norm1
I0406 18:20:27.734292  2891 net.cpp:454] norm1 <- conv1
I0406 18:20:27.734298  2891 net.cpp:411] norm1 -> norm1
I0406 18:20:27.734436  2891 net.cpp:150] Setting up norm1
I0406 18:20:27.734447  2891 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0406 18:20:27.734452  2891 net.cpp:165] Memory required for data: 14450688
I0406 18:20:27.734457  2891 layer_factory.hpp:77] Creating layer pool1
I0406 18:20:27.734465  2891 net.cpp:106] Creating Layer pool1
I0406 18:20:27.734472  2891 net.cpp:454] pool1 <- norm1
I0406 18:20:27.734478  2891 net.cpp:411] pool1 -> pool1
I0406 18:20:27.734522  2891 net.cpp:150] Setting up pool1
I0406 18:20:27.734531  2891 net.cpp:157] Top shape: 1 96 57 57 (311904)
I0406 18:20:27.734536  2891 net.cpp:165] Memory required for data: 15698304
I0406 18:20:27.734541  2891 layer_factory.hpp:77] Creating layer conv2
I0406 18:20:27.734551  2891 net.cpp:106] Creating Layer conv2
I0406 18:20:27.734557  2891 net.cpp:454] conv2 <- pool1
I0406 18:20:27.734565  2891 net.cpp:411] conv2 -> conv2
I0406 18:20:27.737787  2891 net.cpp:150] Setting up conv2
I0406 18:20:27.737805  2891 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0406 18:20:27.737812  2891 net.cpp:165] Memory required for data: 16559488
I0406 18:20:27.737828  2891 layer_factory.hpp:77] Creating layer relu2
I0406 18:20:27.737838  2891 net.cpp:106] Creating Layer relu2
I0406 18:20:27.737843  2891 net.cpp:454] relu2 <- conv2
I0406 18:20:27.737853  2891 net.cpp:397] relu2 -> conv2 (in-place)
I0406 18:20:27.737870  2891 net.cpp:150] Setting up relu2
I0406 18:20:27.737879  2891 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0406 18:20:27.737884  2891 net.cpp:165] Memory required for data: 17420672
I0406 18:20:27.737890  2891 layer_factory.hpp:77] Creating layer norm2
I0406 18:20:27.737897  2891 net.cpp:106] Creating Layer norm2
I0406 18:20:27.737902  2891 net.cpp:454] norm2 <- conv2
I0406 18:20:27.737911  2891 net.cpp:411] norm2 -> norm2
I0406 18:20:27.738041  2891 net.cpp:150] Setting up norm2
I0406 18:20:27.738050  2891 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0406 18:20:27.738055  2891 net.cpp:165] Memory required for data: 18281856
I0406 18:20:27.738059  2891 layer_factory.hpp:77] Creating layer pool2
I0406 18:20:27.738067  2891 net.cpp:106] Creating Layer pool2
I0406 18:20:27.738072  2891 net.cpp:454] pool2 <- norm2
I0406 18:20:27.738080  2891 net.cpp:411] pool2 -> pool2
I0406 18:20:27.738118  2891 net.cpp:150] Setting up pool2
I0406 18:20:27.738126  2891 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0406 18:20:27.738131  2891 net.cpp:165] Memory required for data: 18512256
I0406 18:20:27.738135  2891 layer_factory.hpp:77] Creating layer conv3
I0406 18:20:27.738147  2891 net.cpp:106] Creating Layer conv3
I0406 18:20:27.738152  2891 net.cpp:454] conv3 <- pool2
I0406 18:20:27.738160  2891 net.cpp:411] conv3 -> conv3
I0406 18:20:27.741310  2891 net.cpp:150] Setting up conv3
I0406 18:20:27.741327  2891 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0406 18:20:27.741333  2891 net.cpp:165] Memory required for data: 18857856
I0406 18:20:27.741346  2891 layer_factory.hpp:77] Creating layer relu3
I0406 18:20:27.741356  2891 net.cpp:106] Creating Layer relu3
I0406 18:20:27.741361  2891 net.cpp:454] relu3 <- conv3
I0406 18:20:27.741369  2891 net.cpp:397] relu3 -> conv3 (in-place)
I0406 18:20:27.741379  2891 net.cpp:150] Setting up relu3
I0406 18:20:27.741385  2891 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0406 18:20:27.741390  2891 net.cpp:165] Memory required for data: 19203456
I0406 18:20:27.741395  2891 layer_factory.hpp:77] Creating layer conv4
I0406 18:20:27.741405  2891 net.cpp:106] Creating Layer conv4
I0406 18:20:27.741410  2891 net.cpp:454] conv4 <- conv3
I0406 18:20:27.741417  2891 net.cpp:411] conv4 -> conv4
I0406 18:20:27.746157  2891 net.cpp:150] Setting up conv4
I0406 18:20:27.746175  2891 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0406 18:20:27.746181  2891 net.cpp:165] Memory required for data: 19549056
I0406 18:20:27.746191  2891 layer_factory.hpp:77] Creating layer relu4
I0406 18:20:27.746199  2891 net.cpp:106] Creating Layer relu4
I0406 18:20:27.746206  2891 net.cpp:454] relu4 <- conv4
I0406 18:20:27.746214  2891 net.cpp:397] relu4 -> conv4 (in-place)
I0406 18:20:27.746223  2891 net.cpp:150] Setting up relu4
I0406 18:20:27.746230  2891 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0406 18:20:27.746234  2891 net.cpp:165] Memory required for data: 19894656
I0406 18:20:27.746239  2891 layer_factory.hpp:77] Creating layer conv5
I0406 18:20:27.746249  2891 net.cpp:106] Creating Layer conv5
I0406 18:20:27.746254  2891 net.cpp:454] conv5 <- conv4
I0406 18:20:27.746263  2891 net.cpp:411] conv5 -> conv5
I0406 18:20:27.749384  2891 net.cpp:150] Setting up conv5
I0406 18:20:27.749400  2891 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0406 18:20:27.749406  2891 net.cpp:165] Memory required for data: 20125056
I0406 18:20:27.749420  2891 layer_factory.hpp:77] Creating layer relu5
I0406 18:20:27.749429  2891 net.cpp:106] Creating Layer relu5
I0406 18:20:27.749434  2891 net.cpp:454] relu5 <- conv5
I0406 18:20:27.749442  2891 net.cpp:397] relu5 -> conv5 (in-place)
I0406 18:20:27.749450  2891 net.cpp:150] Setting up relu5
I0406 18:20:27.749457  2891 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0406 18:20:27.749461  2891 net.cpp:165] Memory required for data: 20355456
I0406 18:20:27.749465  2891 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0406 18:20:27.749480  2891 net.cpp:106] Creating Layer conv5_relu5_0_split
I0406 18:20:27.749485  2891 net.cpp:454] conv5_relu5_0_split <- conv5
I0406 18:20:27.749492  2891 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0406 18:20:27.749500  2891 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0406 18:20:27.749543  2891 net.cpp:150] Setting up conv5_relu5_0_split
I0406 18:20:27.749550  2891 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0406 18:20:27.749557  2891 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0406 18:20:27.749562  2891 net.cpp:165] Memory required for data: 20816256
I0406 18:20:27.749567  2891 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0406 18:20:27.749578  2891 net.cpp:106] Creating Layer rpn_conv/3x3
I0406 18:20:27.749583  2891 net.cpp:454] rpn_conv/3x3 <- conv5_relu5_0_split_0
I0406 18:20:27.749591  2891 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0406 18:20:27.765524  2891 net.cpp:150] Setting up rpn_conv/3x3
I0406 18:20:27.765543  2891 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0406 18:20:27.765548  2891 net.cpp:165] Memory required for data: 21046656
I0406 18:20:27.765559  2891 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0406 18:20:27.765573  2891 net.cpp:106] Creating Layer rpn_relu/3x3
I0406 18:20:27.765578  2891 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0406 18:20:27.765586  2891 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0406 18:20:27.765596  2891 net.cpp:150] Setting up rpn_relu/3x3
I0406 18:20:27.765602  2891 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0406 18:20:27.765606  2891 net.cpp:165] Memory required for data: 21277056
I0406 18:20:27.765611  2891 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0406 18:20:27.765619  2891 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0406 18:20:27.765624  2891 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0406 18:20:27.765630  2891 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0406 18:20:27.765637  2891 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0406 18:20:27.765678  2891 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0406 18:20:27.765686  2891 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0406 18:20:27.765692  2891 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0406 18:20:27.765697  2891 net.cpp:165] Memory required for data: 21737856
I0406 18:20:27.765700  2891 layer_factory.hpp:77] Creating layer rpn_cls_score
I0406 18:20:27.765712  2891 net.cpp:106] Creating Layer rpn_cls_score
I0406 18:20:27.765717  2891 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0406 18:20:27.765727  2891 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0406 18:20:27.766094  2891 net.cpp:150] Setting up rpn_cls_score
I0406 18:20:27.766103  2891 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0406 18:20:27.766108  2891 net.cpp:165] Memory required for data: 21754056
I0406 18:20:27.766116  2891 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0406 18:20:27.766129  2891 net.cpp:106] Creating Layer rpn_bbox_pred
I0406 18:20:27.766134  2891 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0406 18:20:27.766144  2891 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0406 18:20:27.766592  2891 net.cpp:150] Setting up rpn_bbox_pred
I0406 18:20:27.766600  2891 net.cpp:157] Top shape: 1 36 15 15 (8100)
I0406 18:20:27.766605  2891 net.cpp:165] Memory required for data: 21786456
I0406 18:20:27.766613  2891 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0406 18:20:27.766628  2891 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0406 18:20:27.766633  2891 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0406 18:20:27.766640  2891 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0406 18:20:27.766675  2891 net.cpp:150] Setting up rpn_cls_score_reshape
I0406 18:20:27.766683  2891 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0406 18:20:27.766687  2891 net.cpp:165] Memory required for data: 21802656
I0406 18:20:27.766692  2891 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0406 18:20:27.766701  2891 net.cpp:106] Creating Layer rpn_cls_prob
I0406 18:20:27.766706  2891 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0406 18:20:27.766713  2891 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0406 18:20:27.766779  2891 net.cpp:150] Setting up rpn_cls_prob
I0406 18:20:27.766786  2891 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0406 18:20:27.766790  2891 net.cpp:165] Memory required for data: 21818856
I0406 18:20:27.766795  2891 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0406 18:20:27.766803  2891 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0406 18:20:27.766808  2891 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0406 18:20:27.766815  2891 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0406 18:20:27.766839  2891 net.cpp:150] Setting up rpn_cls_prob_reshape
I0406 18:20:27.766846  2891 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0406 18:20:27.766851  2891 net.cpp:165] Memory required for data: 21835056
I0406 18:20:27.766856  2891 layer_factory.hpp:77] Creating layer proposal
I0406 18:20:27.769318  2891 net.cpp:106] Creating Layer proposal
I0406 18:20:27.769336  2891 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0406 18:20:27.769346  2891 net.cpp:454] proposal <- rpn_bbox_pred
I0406 18:20:27.769356  2891 net.cpp:454] proposal <- im_info
I0406 18:20:27.769366  2891 net.cpp:411] proposal -> rois
I0406 18:20:27.770593  2891 net.cpp:150] Setting up proposal
I0406 18:20:27.770612  2891 net.cpp:157] Top shape: 1 5 (5)
I0406 18:20:27.770620  2891 net.cpp:165] Memory required for data: 21835076
I0406 18:20:27.770628  2891 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0406 18:20:27.770644  2891 net.cpp:106] Creating Layer roi_pool_conv5
I0406 18:20:27.770651  2891 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_1
I0406 18:20:27.770661  2891 net.cpp:454] roi_pool_conv5 <- rois
I0406 18:20:27.770671  2891 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0406 18:20:27.770686  2891 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0406 18:20:27.770747  2891 net.cpp:150] Setting up roi_pool_conv5
I0406 18:20:27.770758  2891 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0406 18:20:27.770764  2891 net.cpp:165] Memory required for data: 21871940
I0406 18:20:27.770772  2891 layer_factory.hpp:77] Creating layer fc6
I0406 18:20:27.770786  2891 net.cpp:106] Creating Layer fc6
I0406 18:20:27.770792  2891 net.cpp:454] fc6 <- roi_pool_conv5
I0406 18:20:27.770802  2891 net.cpp:411] fc6 -> fc6
I0406 18:20:27.874708  2891 net.cpp:150] Setting up fc6
I0406 18:20:27.874742  2891 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:20:27.874748  2891 net.cpp:165] Memory required for data: 21888324
I0406 18:20:27.874770  2891 layer_factory.hpp:77] Creating layer relu6
I0406 18:20:27.874784  2891 net.cpp:106] Creating Layer relu6
I0406 18:20:27.874790  2891 net.cpp:454] relu6 <- fc6
I0406 18:20:27.874800  2891 net.cpp:397] relu6 -> fc6 (in-place)
I0406 18:20:27.874812  2891 net.cpp:150] Setting up relu6
I0406 18:20:27.874819  2891 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:20:27.874824  2891 net.cpp:165] Memory required for data: 21904708
I0406 18:20:27.874828  2891 layer_factory.hpp:77] Creating layer drop6
I0406 18:20:27.874845  2891 net.cpp:106] Creating Layer drop6
I0406 18:20:27.874848  2891 net.cpp:454] drop6 <- fc6
I0406 18:20:27.874857  2891 net.cpp:397] drop6 -> fc6 (in-place)
I0406 18:20:27.874893  2891 net.cpp:150] Setting up drop6
I0406 18:20:27.874902  2891 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:20:27.874907  2891 net.cpp:165] Memory required for data: 21921092
I0406 18:20:27.874913  2891 layer_factory.hpp:77] Creating layer fc7
I0406 18:20:27.874923  2891 net.cpp:106] Creating Layer fc7
I0406 18:20:27.874928  2891 net.cpp:454] fc7 <- fc6
I0406 18:20:27.874938  2891 net.cpp:411] fc7 -> fc7
I0406 18:20:27.920338  2891 net.cpp:150] Setting up fc7
I0406 18:20:27.920375  2891 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:20:27.920383  2891 net.cpp:165] Memory required for data: 21937476
I0406 18:20:27.920398  2891 layer_factory.hpp:77] Creating layer relu7
I0406 18:20:27.920411  2891 net.cpp:106] Creating Layer relu7
I0406 18:20:27.920418  2891 net.cpp:454] relu7 <- fc7
I0406 18:20:27.920428  2891 net.cpp:397] relu7 -> fc7 (in-place)
I0406 18:20:27.920439  2891 net.cpp:150] Setting up relu7
I0406 18:20:27.920446  2891 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:20:27.920451  2891 net.cpp:165] Memory required for data: 21953860
I0406 18:20:27.920456  2891 layer_factory.hpp:77] Creating layer drop7
I0406 18:20:27.920466  2891 net.cpp:106] Creating Layer drop7
I0406 18:20:27.920470  2891 net.cpp:454] drop7 <- fc7
I0406 18:20:27.920480  2891 net.cpp:397] drop7 -> fc7 (in-place)
I0406 18:20:27.920505  2891 net.cpp:150] Setting up drop7
I0406 18:20:27.920511  2891 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:20:27.920517  2891 net.cpp:165] Memory required for data: 21970244
I0406 18:20:27.920523  2891 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0406 18:20:27.920532  2891 net.cpp:106] Creating Layer fc7_drop7_0_split
I0406 18:20:27.920537  2891 net.cpp:454] fc7_drop7_0_split <- fc7
I0406 18:20:27.920547  2891 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0406 18:20:27.920555  2891 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0406 18:20:27.920594  2891 net.cpp:150] Setting up fc7_drop7_0_split
I0406 18:20:27.920601  2891 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:20:27.920608  2891 net.cpp:157] Top shape: 1 4096 (4096)
I0406 18:20:27.920614  2891 net.cpp:165] Memory required for data: 22003012
I0406 18:20:27.920619  2891 layer_factory.hpp:77] Creating layer cls_score
I0406 18:20:27.920634  2891 net.cpp:106] Creating Layer cls_score
I0406 18:20:27.920639  2891 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0406 18:20:27.920650  2891 net.cpp:411] cls_score -> cls_score
I0406 18:20:27.920747  2891 net.cpp:150] Setting up cls_score
I0406 18:20:27.920753  2891 net.cpp:157] Top shape: 1 2 (2)
I0406 18:20:27.920759  2891 net.cpp:165] Memory required for data: 22003020
I0406 18:20:27.920769  2891 layer_factory.hpp:77] Creating layer bbox_pred
I0406 18:20:27.920778  2891 net.cpp:106] Creating Layer bbox_pred
I0406 18:20:27.920783  2891 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0406 18:20:27.920790  2891 net.cpp:411] bbox_pred -> bbox_pred
I0406 18:20:27.921667  2891 net.cpp:150] Setting up bbox_pred
I0406 18:20:27.921681  2891 net.cpp:157] Top shape: 1 8 (8)
I0406 18:20:27.921689  2891 net.cpp:165] Memory required for data: 22003052
I0406 18:20:27.921700  2891 layer_factory.hpp:77] Creating layer cls_prob
I0406 18:20:27.921710  2891 net.cpp:106] Creating Layer cls_prob
I0406 18:20:27.921715  2891 net.cpp:454] cls_prob <- cls_score
I0406 18:20:27.921725  2891 net.cpp:411] cls_prob -> cls_prob
I0406 18:20:27.921782  2891 net.cpp:150] Setting up cls_prob
I0406 18:20:27.921788  2891 net.cpp:157] Top shape: 1 2 (2)
I0406 18:20:27.921794  2891 net.cpp:165] Memory required for data: 22003060
I0406 18:20:27.921800  2891 net.cpp:228] cls_prob does not need backward computation.
I0406 18:20:27.921805  2891 net.cpp:228] bbox_pred does not need backward computation.
I0406 18:20:27.921811  2891 net.cpp:228] cls_score does not need backward computation.
I0406 18:20:27.921818  2891 net.cpp:228] fc7_drop7_0_split does not need backward computation.
I0406 18:20:27.921823  2891 net.cpp:228] drop7 does not need backward computation.
I0406 18:20:27.921828  2891 net.cpp:228] relu7 does not need backward computation.
I0406 18:20:27.921833  2891 net.cpp:228] fc7 does not need backward computation.
I0406 18:20:27.921838  2891 net.cpp:228] drop6 does not need backward computation.
I0406 18:20:27.921844  2891 net.cpp:228] relu6 does not need backward computation.
I0406 18:20:27.921849  2891 net.cpp:228] fc6 does not need backward computation.
I0406 18:20:27.921855  2891 net.cpp:228] roi_pool_conv5 does not need backward computation.
I0406 18:20:27.921867  2891 net.cpp:228] proposal does not need backward computation.
I0406 18:20:27.921874  2891 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0406 18:20:27.921880  2891 net.cpp:228] rpn_cls_prob does not need backward computation.
I0406 18:20:27.921885  2891 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0406 18:20:27.921892  2891 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0406 18:20:27.921898  2891 net.cpp:228] rpn_cls_score does not need backward computation.
I0406 18:20:27.921905  2891 net.cpp:228] rpn/output_rpn_relu/3x3_0_split does not need backward computation.
I0406 18:20:27.921911  2891 net.cpp:228] rpn_relu/3x3 does not need backward computation.
I0406 18:20:27.921916  2891 net.cpp:228] rpn_conv/3x3 does not need backward computation.
I0406 18:20:27.921922  2891 net.cpp:228] conv5_relu5_0_split does not need backward computation.
I0406 18:20:27.921928  2891 net.cpp:228] relu5 does not need backward computation.
I0406 18:20:27.921933  2891 net.cpp:228] conv5 does not need backward computation.
I0406 18:20:27.921939  2891 net.cpp:228] relu4 does not need backward computation.
I0406 18:20:27.921946  2891 net.cpp:228] conv4 does not need backward computation.
I0406 18:20:27.921950  2891 net.cpp:228] relu3 does not need backward computation.
I0406 18:20:27.921957  2891 net.cpp:228] conv3 does not need backward computation.
I0406 18:20:27.921962  2891 net.cpp:228] pool2 does not need backward computation.
I0406 18:20:27.921968  2891 net.cpp:228] norm2 does not need backward computation.
I0406 18:20:27.921973  2891 net.cpp:228] relu2 does not need backward computation.
I0406 18:20:27.921979  2891 net.cpp:228] conv2 does not need backward computation.
I0406 18:20:27.921984  2891 net.cpp:228] pool1 does not need backward computation.
I0406 18:20:27.921990  2891 net.cpp:228] norm1 does not need backward computation.
I0406 18:20:27.921996  2891 net.cpp:228] relu1 does not need backward computation.
I0406 18:20:27.922001  2891 net.cpp:228] conv1 does not need backward computation.
I0406 18:20:27.922008  2891 net.cpp:270] This network produces output bbox_pred
I0406 18:20:27.922013  2891 net.cpp:270] This network produces output cls_prob
I0406 18:20:27.922040  2891 net.cpp:283] Network initialization done.
I0406 18:20:30.150131  2891 net.cpp:816] Ignoring source layer input-data
I0406 18:20:30.150166  2891 net.cpp:816] Ignoring source layer data_input-data_0_split
I0406 18:20:30.150173  2891 net.cpp:816] Ignoring source layer im_info_input-data_1_split
I0406 18:20:30.150180  2891 net.cpp:816] Ignoring source layer gt_boxes_input-data_2_split
I0406 18:20:30.157403  2891 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0406 18:20:30.157452  2891 net.cpp:816] Ignoring source layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0406 18:20:30.157459  2891 net.cpp:816] Ignoring source layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0406 18:20:30.157464  2891 net.cpp:816] Ignoring source layer rpn-data
I0406 18:20:30.157469  2891 net.cpp:816] Ignoring source layer rpn_loss_cls
I0406 18:20:30.157475  2891 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0406 18:20:30.157485  2891 net.cpp:816] Ignoring source layer roi-data
I0406 18:20:30.213526  2891 net.cpp:816] Ignoring source layer loss_cls
I0406 18:20:30.213549  2891 net.cpp:816] Ignoring source layer loss_bbox
NET
<caffe._caffe.Net object at 0x2aaada1aae68>
im_detect: 1/38 0.186s 0.000s
im_detect: 2/38 0.153s 0.000s
im_detect: 3/38 0.143s 0.000s
im_detect: 4/38 0.140s 0.000s
im_detect: 5/38 0.135s 0.000s
im_detect: 6/38 0.131s 0.000s
im_detect: 7/38 0.128s 0.000s
im_detect: 8/38 0.127s 0.000s
im_detect: 9/38 0.126s 0.000s
im_detect: 10/38 0.126s 0.000s
im_detect: 11/38 0.125s 0.000s
im_detect: 12/38 0.124s 0.000s
im_detect: 13/38 0.124s 0.000s
im_detect: 14/38 0.124s 0.000s
im_detect: 15/38 0.123s 0.000s
im_detect: 16/38 0.123s 0.000s
im_detect: 17/38 0.124s 0.000s
im_detect: 18/38 0.123s 0.000s
im_detect: 19/38 0.122s 0.000s
im_detect: 20/38 0.121s 0.000s
im_detect: 21/38 0.121s 0.000s
im_detect: 22/38 0.120s 0.000s
im_detect: 23/38 0.119s 0.000s
im_detect: 24/38 0.119s 0.000s
im_detect: 25/38 0.118s 0.000s
im_detect: 26/38 0.118s 0.000s
im_detect: 27/38 0.117s 0.000s
im_detect: 28/38 0.117s 0.000s
im_detect: 29/38 0.117s 0.000s
im_detect: 30/38 0.116s 0.000s
im_detect: 31/38 0.115s 0.000s
im_detect: 32/38 0.115s 0.000s
im_detect: 33/38 0.115s 0.000s
im_detect: 34/38 0.115s 0.000s
im_detect: 35/38 0.115s 0.000s
im_detect: 36/38 0.114s 0.000s
im_detect: 37/38 0.114s 0.000s
im_detect: 38/38 0.114s 0.000s
Evaluating detections
Writing roost VOC results file
VOC07 metric? Yes
/home/sgabriel/py-faster-rcnn/data/VOCdevkit2007/annotations_cache
AP for roost = 0.1904
Mean Precision for roost = 0.0775
Mean Recall for roost = 0.2324
Mean AP = 0.1904
~~~~~~~~
Results:
0.190
0.190
~~~~~~~~

--------------------------------------------------------------
Results computed with the **unofficial** Python eval code.
Results should be very close to the official MATLAB eval code.
Recompute with `./tools/reval.py --matlab ...` for your paper.
-- Thanks, The Management
--------------------------------------------------------------

real	0m10.208s
user	0m11.966s
sys	0m1.339s
